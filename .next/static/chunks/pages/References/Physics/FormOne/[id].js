/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/References/Physics/FormOne/[id]"],{

/***/ "./node_modules/@mui/icons-material/ChevronRightOutlined.js":
/*!******************************************************************!*\
  !*** ./node_modules/@mui/icons-material/ChevronRightOutlined.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ \"./node_modules/@mui/icons-material/utils/createSvgIcon.js\"));\n\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6-6-6z\"\n}), 'ChevronRightOutlined');\n\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG11aS9pY29ucy1tYXRlcmlhbC9DaGV2cm9uUmlnaHRPdXRsaW5lZC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw2QkFBNkIsbUJBQU8sQ0FBQyxvSEFBOEM7O0FBRW5GLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlOztBQUVmLDRDQUE0QyxtQkFBTyxDQUFDLHdGQUF1Qjs7QUFFM0Usa0JBQWtCLG1CQUFPLENBQUMsOERBQW1COztBQUU3QztBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG11aS9pY29ucy1tYXRlcmlhbC9DaGV2cm9uUmlnaHRPdXRsaW5lZC5qcz9iY2YwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9jcmVhdGVTdmdJY29uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91dGlscy9jcmVhdGVTdmdJY29uXCIpKTtcblxudmFyIF9qc3hSdW50aW1lID0gcmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpO1xuXG52YXIgX2RlZmF1bHQgPSAoMCwgX2NyZWF0ZVN2Z0ljb24uZGVmYXVsdCkoIC8qI19fUFVSRV9fKi8oMCwgX2pzeFJ1bnRpbWUuanN4KShcInBhdGhcIiwge1xuICBkOiBcIk0xMCA2IDguNTkgNy40MSAxMy4xNyAxMmwtNC41OCA0LjU5TDEwIDE4bDYtNi02LTZ6XCJcbn0pLCAnQ2hldnJvblJpZ2h0T3V0bGluZWQnKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@mui/icons-material/ChevronRightOutlined.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/attachment/lib/cjs/attachment.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/attachment/lib/cjs/attachment.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar getFileName = function (url) {\n    var str = url.split('/').pop();\n    return str ? str.split('#')[0].split('?')[0] : url;\n};\n\nvar downloadFile = function (url, data) {\n    var blobUrl = typeof data === 'string' ? '' : URL.createObjectURL(new Blob([data], { type: '' }));\n    var link = document.createElement('a');\n    link.style.display = 'none';\n    link.href = blobUrl || url;\n    link.setAttribute('download', getFileName(url));\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    if (blobUrl) {\n        URL.revokeObjectURL(blobUrl);\n    }\n};\n\nvar AttachmentList = function (_a) {\n    var files = _a.files;\n    var containerRef = React__namespace.useRef();\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var isRtl = direction === core.TextDirection.RightToLeft;\n    var attachmentItemsRef = React__namespace.useRef([]);\n    var clickDownloadLabel = l10n && l10n.attachment\n        ? l10n.attachment.clickToDownload\n        : 'Click to download';\n    var handleKeyDown = function (e) {\n        switch (e.key) {\n            case 'ArrowDown':\n                e.preventDefault();\n                moveToItem(function (items, activeEle) { return items.indexOf(activeEle) + 1; });\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n                moveToItem(function (items, activeEle) { return items.indexOf(activeEle) - 1; });\n                break;\n            case 'End':\n                e.preventDefault();\n                moveToItem(function (items, _) { return items.length - 1; });\n                break;\n            case 'Home':\n                e.preventDefault();\n                moveToItem(function (_, __) { return 0; });\n                break;\n        }\n    };\n    var moveToItem = function (getItemIndex) {\n        var container = containerRef.current;\n        var attachmentItems = [].slice.call(container.getElementsByClassName('rpv-attachment__item'));\n        if (attachmentItems.length === 0) {\n            return;\n        }\n        attachmentItems.forEach(function (item) { return item.setAttribute('tabindex', '-1'); });\n        var activeEle = document.activeElement;\n        var targetIndex = Math.min(attachmentItems.length - 1, Math.max(0, getItemIndex(attachmentItems, activeEle)));\n        var targetEle = attachmentItems[targetIndex];\n        targetEle.setAttribute('tabindex', '0');\n        targetEle.focus();\n    };\n    core.useIsomorphicLayoutEffect(function () {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        var attachmentItems = [].slice.call(container.getElementsByClassName('rpv-attachment__item'));\n        attachmentItemsRef.current = attachmentItems;\n        if (attachmentItems.length > 0) {\n            var firstItem = attachmentItems[0];\n            firstItem.focus();\n            firstItem.setAttribute('tabindex', '0');\n        }\n    }, []);\n    return (React__namespace.createElement(\"div\", { \"data-testid\": \"attachment__list\", className: core.classNames({\n            'rpv-attachment__list': true,\n            'rpv-attachment__list--rtl': isRtl,\n        }), ref: containerRef, tabIndex: -1, onKeyDown: handleKeyDown }, files.map(function (file) { return (React__namespace.createElement(\"button\", { className: \"rpv-attachment__item\", key: file.fileName, tabIndex: -1, title: clickDownloadLabel, type: \"button\", onClick: function () { return downloadFile(file.fileName, file.data); } }, file.fileName)); })));\n};\n\nvar AttachmentLoader = function (_a) {\n    var doc = _a.doc;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var isRtl = direction === core.TextDirection.RightToLeft;\n    var noAttachmentLabel = l10n && l10n.attachment\n        ? l10n.attachment.noAttachment\n        : 'There is no attachment';\n    var _b = React__namespace.useState({\n        files: [],\n        isLoaded: false,\n    }), attachments = _b[0], setAttachments = _b[1];\n    React__namespace.useEffect(function () {\n        doc.getAttachments().then(function (response) {\n            var files = response\n                ? Object.keys(response).map(function (file) {\n                    return {\n                        data: response[file].content,\n                        fileName: response[file].filename,\n                    };\n                })\n                : [];\n            setAttachments({\n                files: files,\n                isLoaded: true,\n            });\n        });\n    }, [doc]);\n    return !attachments.isLoaded ? (React__namespace.createElement(core.Spinner, null)) : attachments.files.length === 0 ? (React__namespace.createElement(\"div\", { \"data-testid\": \"attachment__empty\", className: core.classNames({\n            'rpv-attachment__empty': true,\n            'rpv-attachment__empty--rtl': isRtl,\n        }) }, noAttachmentLabel)) : (React__namespace.createElement(AttachmentList, { files: attachments.files }));\n};\n\nvar AttachmentListWithStore = function (_a) {\n    var store = _a.store;\n    var _b = React__namespace.useState(store.get('doc')), currentDoc = _b[0], setCurrentDoc = _b[1];\n    var handleDocumentChanged = function (doc) {\n        setCurrentDoc(doc);\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('doc', handleDocumentChanged);\n        return function () {\n            store.unsubscribe('doc', handleDocumentChanged);\n        };\n    }, []);\n    return currentDoc ? (React__namespace.createElement(AttachmentLoader, { doc: currentDoc })) : (React__namespace.createElement(\"div\", { className: \"rpv-attachment__loader\" },\n        React__namespace.createElement(core.Spinner, null)));\n};\n\nvar attachmentPlugin = function () {\n    var store = React__namespace.useMemo(function () { return core.createStore({}); }, []);\n    var AttachmentsDecorator = function () { return React__namespace.createElement(AttachmentListWithStore, { store: store }); };\n    return {\n        onDocumentLoad: function (props) {\n            store.update('doc', props.doc);\n        },\n        Attachments: AttachmentsDecorator,\n    };\n};\n\nexports.attachmentPlugin = attachmentPlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/attachment/lib/cjs/attachment.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/attachment/lib/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/attachment/lib/index.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/attachment.js */ \"./node_modules/@react-pdf-viewer/attachment/lib/cjs/attachment.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvYXR0YWNobWVudC9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixJQUFJLG9JQUErQztBQUNuRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvYXR0YWNobWVudC9saWIvaW5kZXguanM/Njk0YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgUmVhY3QgY29tcG9uZW50IHRvIHZpZXcgYSBQREYgZG9jdW1lbnRcbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXZcbiAqIEBsaWNlbnNlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXYvbGljZW5zZVxuICogQGNvcHlyaWdodCAyMDE5LTIwMjIgTmd1eWVuIEh1dSBQaHVvYyA8bWVAcGh1b2Mubmc+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvYXR0YWNobWVudC5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9hdHRhY2htZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/attachment/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/bookmark/lib/cjs/bookmark.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/bookmark/lib/cjs/bookmark.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar DownArrowIcon = function () {\n    return (React__namespace.createElement(core.Icon, { size: 16 },\n        React__namespace.createElement(\"path\", { d: \"M6.427,8.245A.5.5,0,0,1,6.862,7.5H17.138a.5.5,0,0,1,.435.749l-5.139,9a.5.5,0,0,1-.868,0Z\" })));\n};\n\nvar RightArrowIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M9.248,17.572a.5.5,0,0,1-.748-.434V6.862a.5.5,0,0,1,.748-.434l8.992,5.138a.5.5,0,0,1,0,.868Z\" }))); };\n\nvar shouldBeCollapsed = function (bookmark) {\n    var count = bookmark.count, items = bookmark.items;\n    if (count >= 0) {\n        return false;\n    }\n    var numSubItems = items.length;\n    if (numSubItems === 0) {\n        return false;\n    }\n    var subItems = items.concat([]);\n    while (subItems.length > 0) {\n        var firstChild = subItems.shift();\n        var children = firstChild.items;\n        if (firstChild.count && children && firstChild.count > 0 && children.length > 0) {\n            numSubItems += children.length;\n            subItems = subItems.concat(children);\n        }\n    }\n    return Math.abs(count) === numSubItems;\n};\n\nvar BookmarkItem = function (_a) {\n    var bookmark = _a.bookmark, depth = _a.depth, doc = _a.doc, index = _a.index, isBookmarkExpanded = _a.isBookmarkExpanded, numberOfSiblings = _a.numberOfSiblings, store = _a.store, onJumpToDest = _a.onJumpToDest;\n    var defaultIsCollapsed = React__namespace.useMemo(function () { return shouldBeCollapsed(bookmark); }, [bookmark]);\n    var defaultExpanded = isBookmarkExpanded\n        ? isBookmarkExpanded({ bookmark: bookmark, doc: doc, depth: depth, index: index })\n        : !defaultIsCollapsed;\n    var _b = React__namespace.useState(defaultExpanded), expanded = _b[0], setExpanded = _b[1];\n    var hasSubItems = bookmark.items && bookmark.items.length > 0;\n    var toggleSubItems = function () { return setExpanded(function (expanded) { return !expanded; }); };\n    var clickBookmak = function () {\n        if (hasSubItems && bookmark.dest) {\n            onJumpToDest(bookmark.dest);\n        }\n    };\n    var clickItem = function () {\n        if (!hasSubItems && bookmark.dest) {\n            onJumpToDest(bookmark.dest);\n        }\n    };\n    return (React__namespace.createElement(\"li\", { \"aria-expanded\": expanded ? 'true' : 'false', \"aria-label\": bookmark.title, \"aria-level\": depth + 1, \"aria-posinset\": index + 1, \"aria-setsize\": numberOfSiblings, role: \"treeitem\", tabIndex: -1 },\n        React__namespace.createElement(\"div\", { className: \"rpv-bookmark__item\", style: {\n                paddingLeft: \"\".concat(depth * 1.25, \"rem\"),\n            }, onClick: clickItem },\n            hasSubItems ? (React__namespace.createElement(\"span\", { className: \"rpv-bookmark__toggle\", onClick: toggleSubItems }, expanded ? React__namespace.createElement(DownArrowIcon, null) : React__namespace.createElement(RightArrowIcon, null))) : (React__namespace.createElement(\"span\", { className: \"rpv-bookmark__toggle\" })),\n            bookmark.url ? (React__namespace.createElement(\"a\", { className: \"rpv-bookmark__title\", href: bookmark.url, rel: \"noopener noreferrer nofollow\", target: bookmark.newWindow ? '_blank' : '' }, bookmark.title)) : (React__namespace.createElement(\"div\", { className: \"rpv-bookmark__title\", \"aria-label\": bookmark.title, onClick: clickBookmak }, bookmark.title))),\n        hasSubItems && expanded && (React__namespace.createElement(BookmarkList, { bookmarks: bookmark.items, depth: depth + 1, doc: doc, isBookmarkExpanded: isBookmarkExpanded, isRoot: false, store: store, onJumpToDest: onJumpToDest }))));\n};\n\nvar BookmarkList = function (_a) {\n    var bookmarks = _a.bookmarks, _b = _a.depth, depth = _b === void 0 ? 0 : _b, doc = _a.doc, isBookmarkExpanded = _a.isBookmarkExpanded, isRoot = _a.isRoot, store = _a.store, onJumpToDest = _a.onJumpToDest;\n    return (React__namespace.createElement(\"ul\", { className: \"rpv-bookmark__list\", role: isRoot ? 'tree' : 'group', tabIndex: -1 }, bookmarks.map(function (bookmark, index) { return (React__namespace.createElement(BookmarkItem, { bookmark: bookmark, depth: depth, doc: doc, index: index, isBookmarkExpanded: isBookmarkExpanded, key: index, numberOfSiblings: bookmarks.length, store: store, onJumpToDest: onJumpToDest })); })));\n};\n\nvar Toggle;\n(function (Toggle) {\n    Toggle[Toggle[\"Collapse\"] = 0] = \"Collapse\";\n    Toggle[Toggle[\"Expand\"] = 1] = \"Expand\";\n})(Toggle || (Toggle = {}));\nvar BookmarkListRoot = function (_a) {\n    var bookmarks = _a.bookmarks, doc = _a.doc, isBookmarkExpanded = _a.isBookmarkExpanded, store = _a.store, onJumpToDest = _a.onJumpToDest;\n    var containerRef = React__namespace.useRef();\n    var _b = React__namespace.useState(store.get('linkAnnotations') || {}), links = _b[0], setLinks = _b[1];\n    var updateLinkAnnotation = function (bookmark, links) {\n        var dest = bookmark.dest;\n        if (!dest || typeof dest !== 'string' || !links[dest]) {\n            return;\n        }\n        var annotationContainer = links[dest];\n        annotationContainer.querySelectorAll(\"a[data-annotation-link-dest=\\\"\".concat(dest, \"\\\"]\")).forEach(function (node) {\n            node.setAttribute('aria-label', bookmark.title);\n        });\n        if (!bookmark.items || !bookmark.items.length) {\n            return;\n        }\n        bookmark.items.forEach(function (item) { return updateLinkAnnotation(item, links); });\n    };\n    var handleLinkAnnotationsChanged = function (links) { return setLinks(links); };\n    var jumpToDest = function (dest) {\n        core.getDestination(doc, dest).then(function (target) {\n            var pageIndex = target.pageIndex, bottomOffset = target.bottomOffset, leftOffset = target.leftOffset, scaleTo = target.scaleTo;\n            onJumpToDest(pageIndex, bottomOffset, leftOffset, scaleTo);\n        });\n    };\n    var handleKeyDown = function (e) {\n        var container = containerRef.current;\n        if (!container || !(e.target instanceof HTMLElement) || !container.contains(e.target)) {\n            return;\n        }\n        switch (e.key) {\n            case 'ArrowDown':\n                e.preventDefault();\n                moveToItem(function (bookmarkElements, activeEle) { return bookmarkElements.indexOf(activeEle) + 1; });\n                break;\n            case 'ArrowLeft':\n                e.preventDefault();\n                toggle(Toggle.Collapse);\n                break;\n            case 'ArrowRight':\n                e.preventDefault();\n                toggle(Toggle.Expand);\n                break;\n            case 'ArrowUp':\n                e.preventDefault;\n                moveToItem(function (bookmarkElements, activeEle) { return bookmarkElements.indexOf(activeEle) - 1; });\n                break;\n            case 'End':\n                e.preventDefault();\n                moveToItem(function (bookmarkElements, _) { return bookmarkElements.length - 1; });\n                break;\n            case ' ':\n            case 'Enter':\n            case 'Space':\n                e.preventDefault();\n                clickBookmark();\n                break;\n            case 'Home':\n                e.preventDefault();\n                moveToItem(function (_, __) { return 0; });\n                break;\n        }\n    };\n    var clickBookmark = function () {\n        var closestItem = document.activeElement.closest('.rpv-bookmark__item');\n        var titleEle = closestItem.querySelector('.rpv-bookmark__title');\n        if (titleEle) {\n            titleEle.click();\n        }\n    };\n    var moveToItem = function (getItemIndex) {\n        var container = containerRef.current;\n        var bookmarkElements = [].slice.call(container.getElementsByClassName('rpv-bookmark__item'));\n        if (bookmarkElements.length === 0) {\n            return;\n        }\n        var activeEle = document.activeElement;\n        var targetIndex = Math.min(bookmarkElements.length - 1, Math.max(0, getItemIndex(bookmarkElements, activeEle)));\n        var targetEle = bookmarkElements[targetIndex];\n        activeEle.setAttribute('tabindex', '-1');\n        targetEle.setAttribute('tabindex', '0');\n        targetEle.focus();\n    };\n    var toggle = function (toggle) {\n        var container = containerRef.current;\n        var bookmarkElements = [].slice.call(container.getElementsByClassName('rpv-bookmark__item'));\n        if (bookmarkElements.length === 0) {\n            return;\n        }\n        var closestItem = document.activeElement.closest('.rpv-bookmark__item');\n        var expanedAttribute = toggle === Toggle.Collapse ? 'true' : 'false';\n        if (closestItem && closestItem.parentElement.getAttribute('aria-expanded') === expanedAttribute) {\n            var toggleEle = closestItem.querySelector('.rpv-bookmark__toggle');\n            if (toggleEle) {\n                toggleEle.click();\n            }\n        }\n    };\n    React__namespace.useEffect(function () {\n        document.addEventListener('keydown', handleKeyDown);\n        store.subscribe('linkAnnotations', handleLinkAnnotationsChanged);\n        return function () {\n            document.removeEventListener('keydown', handleKeyDown);\n            store.unsubscribe('linkAnnotations', handleLinkAnnotationsChanged);\n        };\n    }, []);\n    React__namespace.useEffect(function () {\n        bookmarks.forEach(function (bookmark) { return updateLinkAnnotation(bookmark, links); });\n    }, [links]);\n    React__namespace.useEffect(function () {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        var bookmarkElements = [].slice.call(container.getElementsByClassName('rpv-bookmark__item'));\n        if (bookmarkElements.length > 0) {\n            bookmarkElements[0].focus();\n            bookmarkElements[0].setAttribute('tabindex', '0');\n        }\n    }, []);\n    return (React__namespace.createElement(\"div\", { ref: containerRef },\n        React__namespace.createElement(BookmarkList, { bookmarks: bookmarks, depth: 0, doc: doc, isBookmarkExpanded: isBookmarkExpanded, isRoot: true, store: store, onJumpToDest: jumpToDest })));\n};\n\nvar BookmarkLoader = function (_a) {\n    var doc = _a.doc, isBookmarkExpanded = _a.isBookmarkExpanded, store = _a.store, onJumpToDest = _a.onJumpToDest;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var isRtl = direction === core.TextDirection.RightToLeft;\n    var _b = React__namespace.useState({\n        isLoaded: false,\n        items: [],\n    }), bookmarks = _b[0], setBookmarks = _b[1];\n    React__namespace.useEffect(function () {\n        setBookmarks({\n            isLoaded: false,\n            items: [],\n        });\n        doc.getOutline().then(function (outline) {\n            setBookmarks({\n                isLoaded: true,\n                items: outline || [],\n            });\n        });\n    }, [doc]);\n    return !bookmarks.isLoaded ? (React__namespace.createElement(\"div\", { className: \"rpv-bookmark__loader\" },\n        React__namespace.createElement(core.Spinner, null))) : bookmarks.items.length === 0 ? (React__namespace.createElement(\"div\", { \"data-testid\": \"bookmark__empty\", className: core.classNames({\n            'rpv-bookmark__empty': true,\n            'rpv-bookmark__empty--rtl': isRtl,\n        }) }, l10n && l10n.bookmark ? l10n.bookmark.noBookmark : 'There is no bookmark')) : (React__namespace.createElement(\"div\", { \"data-testid\": \"bookmark__container\", className: core.classNames({\n            'rpv-bookmark__container': true,\n            'rpv-bookmark__container--rtl': isRtl,\n        }) },\n        React__namespace.createElement(BookmarkListRoot, { bookmarks: bookmarks.items, doc: doc, isBookmarkExpanded: isBookmarkExpanded, store: store, onJumpToDest: onJumpToDest })));\n};\n\nvar BookmarkListWithStore = function (_a) {\n    var isBookmarkExpanded = _a.isBookmarkExpanded, store = _a.store;\n    var _b = React__namespace.useState(store.get('doc')), currentDoc = _b[0], setCurrentDoc = _b[1];\n    var handleDocumentChanged = function (doc) {\n        setCurrentDoc(doc);\n    };\n    var jump = function (pageIndex, bottomOffset, leftOffset, scaleTo) {\n        var jumpToDestination = store.get('jumpToDestination');\n        if (jumpToDestination) {\n            jumpToDestination(pageIndex, bottomOffset, leftOffset, scaleTo);\n        }\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('doc', handleDocumentChanged);\n        return function () {\n            store.unsubscribe('doc', handleDocumentChanged);\n        };\n    }, []);\n    return currentDoc ? (React__namespace.createElement(BookmarkLoader, { doc: currentDoc, isBookmarkExpanded: isBookmarkExpanded, store: store, onJumpToDest: jump })) : (React__namespace.createElement(\"div\", { className: \"rpv-bookmark__loader\" },\n        React__namespace.createElement(core.Spinner, null)));\n};\n\nvar bookmarkPlugin = function () {\n    var store = React__namespace.useMemo(function () {\n        return core.createStore({\n            linkAnnotations: {},\n        });\n    }, []);\n    var BookmarksDecorator = function (props) { return (React__namespace.createElement(BookmarkListWithStore, { isBookmarkExpanded: props === null || props === void 0 ? void 0 : props.isBookmarkExpanded, store: store })); };\n    var onAnnotationLayerRender = function (e) {\n        if (!e.annotations.length) {\n            return;\n        }\n        var links = e.annotations.filter(function (annotation) { return annotation.subtype === 'Link'; });\n        if (!links.length) {\n            return;\n        }\n        var linkAnnotations = store.get('linkAnnotations') || {};\n        links.forEach(function (annotation) { return (linkAnnotations[annotation.dest] = e.container); });\n        store.update('linkAnnotations', linkAnnotations);\n    };\n    return {\n        install: function (pluginFunctions) {\n            store.update('jumpToDestination', pluginFunctions.jumpToDestination);\n        },\n        onDocumentLoad: function (props) {\n            store.update('doc', props.doc);\n        },\n        Bookmarks: BookmarksDecorator,\n        onAnnotationLayerRender: onAnnotationLayerRender,\n    };\n};\n\nexports.DownArrowIcon = DownArrowIcon;\nexports.RightArrowIcon = RightArrowIcon;\nexports.bookmarkPlugin = bookmarkPlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/bookmark/lib/cjs/bookmark.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/bookmark/lib/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/bookmark/lib/index.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/bookmark.js */ \"./node_modules/@react-pdf-viewer/bookmark/lib/cjs/bookmark.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvYm9va21hcmsvbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsSUFBSSw4SEFBNkM7QUFDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC1wZGYtdmlld2VyL2Jvb2ttYXJrL2xpYi9pbmRleC5qcz81OWQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBSZWFjdCBjb21wb25lbnQgdG8gdmlldyBhIFBERiBkb2N1bWVudFxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldlxuICogQGxpY2Vuc2UgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldi9saWNlbnNlXG4gKiBAY29weXJpZ2h0IDIwMTktMjAyMiBOZ3V5ZW4gSHV1IFBodW9jIDxtZUBwaHVvYy5uZz5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9ib29rbWFyay5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9ib29rbWFyay5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/bookmark/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/core/lib/cjs/core.js":
/*!*************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/core/lib/cjs/core.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar PdfJsApi = __webpack_require__(/*! pdfjs-dist */ \"./node_modules/pdfjs-dist/build/pdf.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\nvar PdfJsApi__namespace = /*#__PURE__*/_interopNamespace(PdfJsApi);\n\nexports.AnnotationType = void 0;\n(function (AnnotationType) {\n    AnnotationType[AnnotationType[\"Text\"] = 1] = \"Text\";\n    AnnotationType[AnnotationType[\"Link\"] = 2] = \"Link\";\n    AnnotationType[AnnotationType[\"FreeText\"] = 3] = \"FreeText\";\n    AnnotationType[AnnotationType[\"Line\"] = 4] = \"Line\";\n    AnnotationType[AnnotationType[\"Square\"] = 5] = \"Square\";\n    AnnotationType[AnnotationType[\"Circle\"] = 6] = \"Circle\";\n    AnnotationType[AnnotationType[\"Polygon\"] = 7] = \"Polygon\";\n    AnnotationType[AnnotationType[\"Polyline\"] = 8] = \"Polyline\";\n    AnnotationType[AnnotationType[\"Highlight\"] = 9] = \"Highlight\";\n    AnnotationType[AnnotationType[\"Underline\"] = 10] = \"Underline\";\n    AnnotationType[AnnotationType[\"Squiggly\"] = 11] = \"Squiggly\";\n    AnnotationType[AnnotationType[\"StrikeOut\"] = 12] = \"StrikeOut\";\n    AnnotationType[AnnotationType[\"Stamp\"] = 13] = \"Stamp\";\n    AnnotationType[AnnotationType[\"Caret\"] = 14] = \"Caret\";\n    AnnotationType[AnnotationType[\"Ink\"] = 15] = \"Ink\";\n    AnnotationType[AnnotationType[\"Popup\"] = 16] = \"Popup\";\n    AnnotationType[AnnotationType[\"FileAttachment\"] = 17] = \"FileAttachment\";\n})(exports.AnnotationType || (exports.AnnotationType = {}));\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nexports.TextDirection = void 0;\n(function (TextDirection) {\n    TextDirection[\"RightToLeft\"] = \"RTL\";\n    TextDirection[\"LeftToRight\"] = \"LTR\";\n})(exports.TextDirection || (exports.TextDirection = {}));\nvar ThemeContext = React__namespace.createContext({\n    currentTheme: 'light',\n    direction: exports.TextDirection.LeftToRight,\n    setCurrentTheme: function () { },\n});\n\nvar classNames = function (classes) {\n    var result = [];\n    Object.keys(classes).forEach(function (clazz) {\n        if (clazz && classes[clazz]) {\n            result.push(clazz);\n        }\n    });\n    return result.join(' ');\n};\n\nvar Button = function (_a) {\n    var children = _a.children, testId = _a.testId, onClick = _a.onClick;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var attrs = testId ? { 'data-testid': testId } : {};\n    return (React__namespace.createElement(\"button\", __assign({ className: classNames({\n            'rpv-core__button': true,\n            'rpv-core__button--rtl': isRtl,\n        }), type: \"button\", onClick: onClick }, attrs), children));\n};\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React__namespace.useLayoutEffect : React__namespace.useEffect;\n\nvar useIntersectionObserver = function (props) {\n    var containerRef = React__namespace.useRef(null);\n    var once = props.once, threshold = props.threshold, onVisibilityChanged = props.onVisibilityChanged;\n    useIsomorphicLayoutEffect(function () {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        var intersectionTracker = new IntersectionObserver(function (entries) {\n            entries.forEach(function (entry) {\n                var isVisible = entry.isIntersecting;\n                var ratio = entry.intersectionRatio;\n                onVisibilityChanged({ isVisible: isVisible, ratio: ratio });\n                if (isVisible && once) {\n                    intersectionTracker.unobserve(container);\n                    intersectionTracker.disconnect();\n                }\n            });\n        }, {\n            threshold: threshold || 0,\n        });\n        intersectionTracker.observe(container);\n        return function () {\n            intersectionTracker.unobserve(container);\n            intersectionTracker.disconnect();\n        };\n    }, []);\n    return containerRef;\n};\n\nvar LazyRender = function (_a) {\n    var attrs = _a.attrs, children = _a.children, testId = _a.testId;\n    var _b = React__namespace.useState(false), visible = _b[0], setVisible = _b[1];\n    var containerAttrs = testId ? __assign(__assign({}, attrs), { 'data-testid': testId }) : attrs;\n    var handleVisibilityChanged = function (params) {\n        if (params.isVisible) {\n            setVisible(true);\n        }\n    };\n    var containerRef = useIntersectionObserver({\n        once: true,\n        onVisibilityChanged: handleVisibilityChanged,\n    });\n    return (React__namespace.createElement(\"div\", __assign({ ref: containerRef }, containerAttrs), visible && children));\n};\n\nvar Menu = function (_a) {\n    var children = _a.children;\n    var containerRef = React__namespace.useRef();\n    var visibleMenuItemsRef = React__namespace.useRef([]);\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var handleKeyDown = function (e) {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        switch (e.key) {\n            case 'Tab':\n                e.preventDefault();\n                break;\n            case 'ArrowDown':\n                e.preventDefault();\n                moveToItem(function (_, currentIndex) { return currentIndex + 1; });\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n                moveToItem(function (_, currentIndex) { return currentIndex - 1; });\n                break;\n            case 'End':\n                e.preventDefault();\n                moveToItem(function (items, _) { return items.length - 1; });\n                break;\n            case 'Home':\n                e.preventDefault();\n                moveToItem(function (_, __) { return 0; });\n                break;\n        }\n    };\n    var moveToItem = function (getNextItem) {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        var items = visibleMenuItemsRef.current;\n        var currentIndex = items.findIndex(function (item) { return item.getAttribute('tabindex') === '0'; });\n        var targetIndex = Math.min(items.length - 1, Math.max(0, getNextItem(items, currentIndex)));\n        if (currentIndex >= 0 && currentIndex <= items.length - 1) {\n            items[currentIndex].setAttribute('tabindex', '-1');\n        }\n        items[targetIndex].setAttribute('tabindex', '0');\n        items[targetIndex].focus();\n    };\n    var findVisibleItems = function (container) {\n        var visibleItems = [];\n        container.querySelectorAll('.rpv-core__menu-item[role=\"menuitem\"]').forEach(function (item) {\n            if (item instanceof HTMLElement) {\n                var parent_1 = item.parentElement;\n                if (parent_1 === container) {\n                    visibleItems.push(item);\n                }\n                else {\n                    if (window.getComputedStyle(parent_1).display !== 'none') {\n                        visibleItems.push(item);\n                    }\n                }\n            }\n        });\n        return visibleItems;\n    };\n    useIsomorphicLayoutEffect(function () {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        var visibleItems = findVisibleItems(container);\n        visibleMenuItemsRef.current = visibleItems;\n    }, []);\n    useIsomorphicLayoutEffect(function () {\n        document.addEventListener('keydown', handleKeyDown);\n        return function () {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, []);\n    return (React__namespace.createElement(\"div\", { ref: containerRef, \"aria-orientation\": \"vertical\", className: classNames({\n            'rpv-core__menu': true,\n            'rpv-core__menu--rtl': isRtl,\n        }), role: \"menu\", tabIndex: 0 }, children));\n};\n\nvar MenuDivider = function () { return (React__namespace.createElement(\"div\", { \"aria-orientation\": \"horizontal\", className: \"rpv-core__menu-divider\", role: \"separator\" })); };\n\nvar Icon = function (_a) {\n    var children = _a.children, _b = _a.ignoreDirection, ignoreDirection = _b === void 0 ? false : _b, _c = _a.size, size = _c === void 0 ? 24 : _c;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = !ignoreDirection && direction === exports.TextDirection.RightToLeft;\n    var width = \"\".concat(size || 24, \"px\");\n    return (React__namespace.createElement(\"svg\", { \"aria-hidden\": \"true\", className: classNames({\n            'rpv-core__icon': true,\n            'rpv-core__icon--rtl': isRtl,\n        }), focusable: \"false\", height: width, viewBox: \"0 0 24 24\", width: width }, children));\n};\n\nvar CheckIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M23.5,0.499l-16.5,23l-6.5-6.5\" }))); };\n\nvar MenuItem = function (_a) {\n    var _b = _a.checked, checked = _b === void 0 ? false : _b, children = _a.children, _c = _a.icon, icon = _c === void 0 ? null : _c, _d = _a.isDisabled, isDisabled = _d === void 0 ? false : _d, testId = _a.testId, onClick = _a.onClick;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var attrs = testId ? { 'data-testid': testId } : {};\n    return (React__namespace.createElement(\"button\", __assign({ className: classNames({\n            'rpv-core__menu-item': true,\n            'rpv-core__menu-item--disabled': isDisabled,\n            'rpv-core__menu-item--ltr': !isRtl,\n            'rpv-core__menu-item--rtl': isRtl,\n        }), role: \"menuitem\", tabIndex: -1, type: \"button\", onClick: onClick }, attrs),\n        React__namespace.createElement(\"div\", { className: classNames({\n                'rpv-core__menu-item-icon': true,\n                'rpv-core__menu-item-icon--ltr': !isRtl,\n                'rpv-core__menu-item-icon--rtl': isRtl,\n            }) }, icon),\n        React__namespace.createElement(\"div\", { className: classNames({\n                'rpv-core__menu-item-label': true,\n                'rpv-core__menu-item-label--ltr': !isRtl,\n                'rpv-core__menu-item-label--rtl': isRtl,\n            }) }, children),\n        React__namespace.createElement(\"div\", { className: classNames({\n                'rpv-core__menu-item-check': true,\n                'rpv-core__menu-item-check--ltr': !isRtl,\n                'rpv-core__menu-item-check--rtl': isRtl,\n            }) }, checked && React__namespace.createElement(CheckIcon, null))));\n};\n\nvar MinimalButton = function (_a) {\n    var _b = _a.ariaLabel, ariaLabel = _b === void 0 ? '' : _b, _c = _a.ariaKeyShortcuts, ariaKeyShortcuts = _c === void 0 ? '' : _c, children = _a.children, _d = _a.isDisabled, isDisabled = _d === void 0 ? false : _d, _e = _a.isSelected, isSelected = _e === void 0 ? false : _e, testId = _a.testId, onClick = _a.onClick;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var attrs = testId ? { 'data-testid': testId } : {};\n    return (React__namespace.createElement(\"button\", __assign({ \"aria-label\": ariaLabel }, (ariaKeyShortcuts && { 'aria-keyshortcuts': ariaKeyShortcuts }), (isDisabled && { 'aria-disabled': true }), { className: classNames({\n            'rpv-core__minimal-button': true,\n            'rpv-core__minimal-button--disabled': isDisabled,\n            'rpv-core__minimal-button--rtl': isRtl,\n            'rpv-core__minimal-button--selected': isSelected,\n        }), type: \"button\", onClick: onClick }, attrs), children));\n};\n\nvar PrimaryButton = function (_a) {\n    var children = _a.children, testId = _a.testId, onClick = _a.onClick;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var attrs = testId ? { 'data-testid': testId } : {};\n    return (React__namespace.createElement(\"button\", __assign({ className: classNames({\n            'rpv-core__primary-button': true,\n            'rpv-core__primary-button--rtl': isRtl,\n        }), type: \"button\", onClick: onClick }, attrs), children));\n};\n\nvar ProgressBar = function (_a) {\n    var progress = _a.progress;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    return (React__namespace.createElement(\"div\", { className: classNames({\n            'rpv-core__progress-bar': true,\n            'rpv-core__progress-bar--rtl': isRtl,\n        }) },\n        React__namespace.createElement(\"div\", { className: \"rpv-core__progress-bar-progress\", style: { width: \"\".concat(progress, \"%\") } },\n            progress,\n            \"%\")));\n};\n\nvar Separator = function () { return React__namespace.createElement(\"div\", { className: \"rpv-core__separator\" }); };\n\nvar Spinner = function (_a) {\n    var _b = _a.size, size = _b === void 0 ? '4rem' : _b, testId = _a.testId;\n    var _c = React__namespace.useState(false), visible = _c[0], setVisible = _c[1];\n    var attrs = testId ? { 'data-testid': testId } : {};\n    var handleVisibilityChanged = function (params) {\n        setVisible(params.isVisible);\n    };\n    var containerRef = useIntersectionObserver({\n        onVisibilityChanged: handleVisibilityChanged,\n    });\n    return (React__namespace.createElement(\"div\", __assign({}, attrs, { className: classNames({\n            'rpv-core__spinner': true,\n            'rpv-core__spinner--animating': visible,\n        }), ref: containerRef, style: { height: size, width: size } })));\n};\n\nvar Splitter = function (_a) {\n    var constrain = _a.constrain;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var resizerRef = React__namespace.useRef();\n    var leftSideRef = React__namespace.useRef();\n    var rightSideRef = React__namespace.useRef();\n    var xRef = React__namespace.useRef(0);\n    var yRef = React__namespace.useRef(0);\n    var leftWidthRef = React__namespace.useRef(0);\n    var resizerWidthRef = React__namespace.useRef(0);\n    var eventOptions = {\n        capture: true,\n    };\n    var handleMouseMove = function (e) {\n        var resizerEle = resizerRef.current;\n        var leftSide = leftSideRef.current;\n        var rightSide = rightSideRef.current;\n        if (!resizerEle || !leftSide || !rightSide) {\n            return;\n        }\n        var resizerWidth = resizerWidthRef.current;\n        var dx = e.clientX - xRef.current;\n        var firstHalfSize = leftWidthRef.current + (isRtl ? -dx : dx);\n        var containerWidth = resizerEle.parentElement.getBoundingClientRect().width;\n        var firstHalfPercentage = (firstHalfSize * 100) / containerWidth;\n        resizerEle.classList.add('rpv-core__splitter--resizing');\n        if (constrain) {\n            var secondHalfSize = containerWidth - firstHalfSize - resizerWidth;\n            var secondHalfPercentage = (secondHalfSize * 100) / containerWidth;\n            if (!constrain({ firstHalfPercentage: firstHalfPercentage, firstHalfSize: firstHalfSize, secondHalfPercentage: secondHalfPercentage, secondHalfSize: secondHalfSize })) {\n                return;\n            }\n        }\n        leftSide.style.width = \"\".concat(firstHalfPercentage, \"%\");\n        document.body.classList.add('rpv-core__splitter-body--resizing');\n        leftSide.classList.add('rpv-core__splitter-sibling--resizing');\n        rightSide.classList.add('rpv-core__splitter-sibling--resizing');\n    };\n    var handleMouseUp = function (e) {\n        var resizerEle = resizerRef.current;\n        var leftSide = leftSideRef.current;\n        var rightSide = rightSideRef.current;\n        if (!resizerEle || !leftSide || !rightSide) {\n            return;\n        }\n        document.body.classList.remove('rpv-core__splitter-body--resizing');\n        resizerEle.classList.remove('rpv-core__splitter--resizing');\n        leftSide.classList.remove('rpv-core__splitter-sibling--resizing');\n        rightSide.classList.remove('rpv-core__splitter-sibling--resizing');\n        document.removeEventListener('mousemove', handleMouseMove, eventOptions);\n        document.removeEventListener('mouseup', handleMouseUp, eventOptions);\n    };\n    var handleMouseDown = function (e) {\n        var leftSide = leftSideRef.current;\n        if (!leftSide) {\n            return;\n        }\n        xRef.current = e.clientX;\n        yRef.current = e.clientY;\n        leftWidthRef.current = leftSide.getBoundingClientRect().width;\n        document.addEventListener('mousemove', handleMouseMove, eventOptions);\n        document.addEventListener('mouseup', handleMouseUp, eventOptions);\n    };\n    React__namespace.useEffect(function () {\n        var resizerEle = resizerRef.current;\n        if (!resizerEle) {\n            return;\n        }\n        resizerWidthRef.current = resizerEle.getBoundingClientRect().width;\n        leftSideRef.current = resizerEle.previousElementSibling;\n        rightSideRef.current = resizerEle.nextElementSibling;\n    }, []);\n    return React__namespace.createElement(\"div\", { ref: resizerRef, className: \"rpv-core__splitter\", onMouseDown: handleMouseDown });\n};\n\nvar TextBox = function (_a) {\n    var _b = _a.ariaLabel, ariaLabel = _b === void 0 ? '' : _b, _c = _a.autoFocus, autoFocus = _c === void 0 ? false : _c, _d = _a.placeholder, placeholder = _d === void 0 ? '' : _d, testId = _a.testId, _e = _a.type, type = _e === void 0 ? 'text' : _e, _f = _a.value, value = _f === void 0 ? '' : _f, onChange = _a.onChange, _g = _a.onKeyDown, onKeyDown = _g === void 0 ? function () { } : _g;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var textboxRef = React__namespace.useRef();\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var attrs = {\n        ref: textboxRef,\n        'data-testid': '',\n        'aria-label': ariaLabel,\n        className: classNames({\n            'rpv-core__textbox': true,\n            'rpv-core__textbox--rtl': isRtl,\n        }),\n        placeholder: placeholder,\n        value: value,\n        onChange: function (e) { return onChange(e.target.value); },\n        onKeyDown: onKeyDown,\n    };\n    if (testId) {\n        attrs['data-testid'] = testId;\n    }\n    useIsomorphicLayoutEffect(function () {\n        if (autoFocus) {\n            var textboxEle = textboxRef.current;\n            if (textboxEle) {\n                var x = window.scrollX;\n                var y = window.scrollY;\n                textboxEle.focus();\n                window.scrollTo(x, y);\n            }\n        }\n    }, []);\n    return type === 'text' ? React__namespace.createElement(\"input\", __assign({ type: \"text\" }, attrs)) : React__namespace.createElement(\"input\", __assign({ type: \"password\" }, attrs));\n};\n\nvar useIsMounted = function () {\n    var isMountedRef = React__namespace.useRef(false);\n    React__namespace.useEffect(function () {\n        isMountedRef.current = true;\n        return function () {\n            isMountedRef.current = false;\n        };\n    }, []);\n    return isMountedRef;\n};\n\nvar PageRenderStatus;\n(function (PageRenderStatus) {\n    PageRenderStatus[\"NotRenderedYet\"] = \"NotRenderedYet\";\n    PageRenderStatus[\"Rendering\"] = \"Rendering\";\n    PageRenderStatus[\"Rendered\"] = \"Rendered\";\n})(PageRenderStatus || (PageRenderStatus = {}));\nvar OUT_OF_RANGE_VISIBILITY = -9999;\nvar useRenderQueue = function (_a) {\n    var doc = _a.doc;\n    var numPages = doc.numPages;\n    var docId = doc.loadingTask.docId;\n    var initialPageVisibilities = React__namespace.useMemo(function () {\n        return Array(numPages)\n            .fill(null)\n            .map(function (_, pageIndex) { return ({\n            pageIndex: pageIndex,\n            renderStatus: PageRenderStatus.NotRenderedYet,\n            visibility: OUT_OF_RANGE_VISIBILITY,\n        }); });\n    }, [docId]);\n    var latestRef = React__namespace.useRef({\n        currentRenderingPage: -1,\n        startRange: 0,\n        endRange: numPages - 1,\n        visibilities: initialPageVisibilities,\n    });\n    var markNotRendered = function () {\n        for (var i = 0; i < numPages; i++) {\n            latestRef.current.visibilities[i].renderStatus = PageRenderStatus.NotRenderedYet;\n        }\n    };\n    var markRendered = function (pageIndex) {\n        latestRef.current.visibilities[pageIndex].renderStatus = PageRenderStatus.Rendered;\n    };\n    var markRendering = function (pageIndex) {\n        if (latestRef.current.currentRenderingPage !== -1 &&\n            latestRef.current.currentRenderingPage !== pageIndex &&\n            latestRef.current.visibilities[latestRef.current.currentRenderingPage].renderStatus ===\n                PageRenderStatus.Rendering) {\n            latestRef.current.visibilities[latestRef.current.currentRenderingPage].renderStatus =\n                PageRenderStatus.NotRenderedYet;\n        }\n        latestRef.current.visibilities[pageIndex].renderStatus = PageRenderStatus.Rendering;\n        latestRef.current.currentRenderingPage = pageIndex;\n    };\n    var setRange = function (startIndex, endIndex) {\n        latestRef.current.startRange = startIndex;\n        latestRef.current.endRange = endIndex;\n        for (var i = 0; i < numPages; i++) {\n            if (i < startIndex || i > endIndex) {\n                latestRef.current.visibilities[i].visibility = OUT_OF_RANGE_VISIBILITY;\n                latestRef.current.visibilities[i].renderStatus = PageRenderStatus.NotRenderedYet;\n            }\n        }\n    };\n    var setOutOfRange = function (pageIndex) {\n        setVisibility(pageIndex, OUT_OF_RANGE_VISIBILITY);\n    };\n    var setVisibility = function (pageIndex, visibility) {\n        latestRef.current.visibilities[pageIndex].visibility = visibility;\n    };\n    var getHighestPriorityPage = function () {\n        var visiblePages = latestRef.current.visibilities\n            .slice(latestRef.current.startRange, latestRef.current.endRange + 1)\n            .filter(function (item) { return item.visibility > OUT_OF_RANGE_VISIBILITY; });\n        if (!visiblePages.length) {\n            return -1;\n        }\n        var firstVisiblePage = visiblePages[0].pageIndex;\n        var lastVisiblePage = visiblePages[visiblePages.length - 1].pageIndex;\n        var numVisiblePages = visiblePages.length;\n        for (var i = 0; i < numVisiblePages; i++) {\n            if (visiblePages[i].renderStatus === PageRenderStatus.Rendering) {\n                return -1;\n            }\n            if (visiblePages[i].renderStatus === PageRenderStatus.NotRenderedYet) {\n                return visiblePages[i].pageIndex;\n            }\n        }\n        if (lastVisiblePage + 1 < numPages &&\n            latestRef.current.visibilities[lastVisiblePage + 1].renderStatus !== PageRenderStatus.Rendered) {\n            return lastVisiblePage + 1;\n        }\n        else if (firstVisiblePage - 1 >= 0 &&\n            latestRef.current.visibilities[firstVisiblePage - 1].renderStatus !== PageRenderStatus.Rendered) {\n            return firstVisiblePage - 1;\n        }\n        return -1;\n    };\n    var isInRange = function (pageIndex) {\n        return pageIndex >= latestRef.current.startRange && pageIndex <= latestRef.current.endRange;\n    };\n    return {\n        getHighestPriorityPage: getHighestPriorityPage,\n        isInRange: isInRange,\n        markNotRendered: markNotRendered,\n        markRendered: markRendered,\n        markRendering: markRendering,\n        setOutOfRange: setOutOfRange,\n        setRange: setRange,\n        setVisibility: setVisibility,\n    };\n};\n\nvar core = {\n\taskingPassword: {\n\t\trequirePasswordToOpen: \"This document requires a password to open\",\n\t\tsubmit: \"Submit\"\n\t},\n\twrongPassword: {\n\t\ttryAgain: \"The password is wrong. Please try again\"\n\t},\n\tpageLabel: \"Page {{pageIndex}}\"\n};\nvar enUs = {\n\tcore: core\n};\n\nvar DefaultLocalization = enUs;\nvar LocalizationContext = React__namespace.createContext({\n    l10n: DefaultLocalization,\n    setL10n: function () { },\n});\n\nvar id = 0;\nvar uniqueId = function () { return id++; };\n\nvar useClickOutside = function (closeOnClickOutside, targetRef, onClickOutside) {\n    var clickHandler = function (e) {\n        var target = targetRef.current;\n        if (target && !target.contains(e.target)) {\n            onClickOutside();\n        }\n    };\n    React__namespace.useEffect(function () {\n        if (!closeOnClickOutside) {\n            return;\n        }\n        var eventOptions = {\n            capture: true,\n        };\n        document.addEventListener('click', clickHandler, eventOptions);\n        return function () {\n            document.removeEventListener('click', clickHandler, eventOptions);\n        };\n    }, []);\n};\n\nvar useEscape = function (handler) {\n    var keyUpHandler = function (e) {\n        if (e.key === 'Escape') {\n            handler();\n        }\n    };\n    React__namespace.useEffect(function () {\n        document.addEventListener('keyup', keyUpHandler);\n        return function () {\n            document.removeEventListener('keyup', keyUpHandler);\n        };\n    }, []);\n};\n\nvar useLockScroll = function () {\n    React__namespace.useEffect(function () {\n        var originalStyle = window.getComputedStyle(document.body).overflow;\n        document.body.style.overflow = 'hidden';\n        return function () {\n            document.body.style.overflow = originalStyle;\n        };\n    }, []);\n};\n\nvar ModalBody = function (_a) {\n    var ariaControlsSuffix = _a.ariaControlsSuffix, children = _a.children, closeOnClickOutside = _a.closeOnClickOutside, closeOnEscape = _a.closeOnEscape, onToggle = _a.onToggle;\n    var contentRef = React__namespace.useRef();\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    useLockScroll();\n    useEscape(function () {\n        if (contentRef.current && closeOnEscape) {\n            onToggle();\n        }\n    });\n    useClickOutside(closeOnClickOutside, contentRef, onToggle);\n    useIsomorphicLayoutEffect(function () {\n        var contentEle = contentRef.current;\n        if (!contentEle) {\n            return;\n        }\n        var maxHeight = document.body.clientHeight * 0.75;\n        if (contentEle.getBoundingClientRect().height >= maxHeight) {\n            contentEle.style.overflow = 'auto';\n            contentEle.style.maxHeight = \"\".concat(maxHeight, \"px\");\n        }\n    }, []);\n    return (React__namespace.createElement(\"div\", { \"aria-modal\": \"true\", className: classNames({\n            'rpv-core__modal-body': true,\n            'rpv-core__modal-body--rtl': isRtl,\n        }), id: \"rpv-core__modal-body-\".concat(ariaControlsSuffix), ref: contentRef, role: \"dialog\", tabIndex: -1 }, children));\n};\n\nvar ModalOverlay = function (_a) {\n    var children = _a.children;\n    return React__namespace.createElement(\"div\", { className: \"rpv-core__modal-overlay\" }, children);\n};\n\nexports.ToggleStatus = void 0;\n(function (ToggleStatus) {\n    ToggleStatus[\"Close\"] = \"Close\";\n    ToggleStatus[\"Open\"] = \"Open\";\n    ToggleStatus[\"Toggle\"] = \"Toggle\";\n})(exports.ToggleStatus || (exports.ToggleStatus = {}));\n\nvar useToggle = function (isOpened) {\n    var _a = React__namespace.useState(isOpened), opened = _a[0], setOpened = _a[1];\n    var toggle = function (status) {\n        switch (status) {\n            case exports.ToggleStatus.Close:\n                setOpened(false);\n                break;\n            case exports.ToggleStatus.Open:\n                setOpened(true);\n                break;\n            case exports.ToggleStatus.Toggle:\n            default:\n                setOpened(function (isOpened) { return !isOpened; });\n                break;\n        }\n    };\n    return { opened: opened, toggle: toggle };\n};\n\nvar Portal = function (_a) {\n    var content = _a.content, _b = _a.isOpened, isOpened = _b === void 0 ? false : _b, target = _a.target;\n    var _c = useToggle(isOpened), opened = _c.opened, toggle = _c.toggle;\n    return (React__namespace.createElement(React__namespace.Fragment, null,\n        target && target(toggle, opened),\n        opened && content(toggle)));\n};\n\nvar Modal = function (_a) {\n    var ariaControlsSuffix = _a.ariaControlsSuffix, closeOnClickOutside = _a.closeOnClickOutside, closeOnEscape = _a.closeOnEscape, content = _a.content, _b = _a.isOpened, isOpened = _b === void 0 ? false : _b, target = _a.target;\n    var controlsSuffix = ariaControlsSuffix || \"\".concat(uniqueId());\n    var renderTarget = function (toggle, opened) { return (React__namespace.createElement(\"div\", { \"aria-expanded\": opened ? 'true' : 'false', \"aria-haspopup\": \"dialog\", \"aria-controls\": \"rpv-core__modal-body-\".concat(controlsSuffix) }, target(toggle, opened))); };\n    var renderContent = function (toggle) { return (React__namespace.createElement(ModalOverlay, null,\n        React__namespace.createElement(ModalBody, { ariaControlsSuffix: controlsSuffix, closeOnClickOutside: closeOnClickOutside, closeOnEscape: closeOnEscape, onToggle: toggle }, content(toggle)))); };\n    return React__namespace.createElement(Portal, { target: target ? renderTarget : null, content: renderContent, isOpened: isOpened });\n};\n\nexports.Position = void 0;\n(function (Position) {\n    Position[\"TopLeft\"] = \"TOP_LEFT\";\n    Position[\"TopCenter\"] = \"TOP_CENTER\";\n    Position[\"TopRight\"] = \"TOP_RIGHT\";\n    Position[\"RightTop\"] = \"RIGHT_TOP\";\n    Position[\"RightCenter\"] = \"RIGHT_CENTER\";\n    Position[\"RightBottom\"] = \"RIGHT_BOTTOM\";\n    Position[\"BottomLeft\"] = \"BOTTOM_LEFT\";\n    Position[\"BottomCenter\"] = \"BOTTOM_CENTER\";\n    Position[\"BottomRight\"] = \"BOTTOM_RIGHT\";\n    Position[\"LeftTop\"] = \"LEFT_TOP\";\n    Position[\"LeftCenter\"] = \"LEFT_CENTER\";\n    Position[\"LeftBottom\"] = \"LEFT_BOTTOM\";\n})(exports.Position || (exports.Position = {}));\n\nvar calculatePosition = function (content, target, position, offset) {\n    var targetRect = target.getBoundingClientRect();\n    var contentRect = content.getBoundingClientRect();\n    var height = contentRect.height, width = contentRect.width;\n    var top = 0;\n    var left = 0;\n    switch (position) {\n        case exports.Position.TopLeft:\n            top = targetRect.top - height;\n            left = targetRect.left;\n            break;\n        case exports.Position.TopCenter:\n            top = targetRect.top - height;\n            left = targetRect.left + targetRect.width / 2 - width / 2;\n            break;\n        case exports.Position.TopRight:\n            top = targetRect.top - height;\n            left = targetRect.left + targetRect.width - width;\n            break;\n        case exports.Position.RightTop:\n            top = targetRect.top;\n            left = targetRect.left + targetRect.width;\n            break;\n        case exports.Position.RightCenter:\n            top = targetRect.top + targetRect.height / 2 - height / 2;\n            left = targetRect.left + targetRect.width;\n            break;\n        case exports.Position.RightBottom:\n            top = targetRect.top + targetRect.height - height;\n            left = targetRect.left + targetRect.width;\n            break;\n        case exports.Position.BottomLeft:\n            top = targetRect.top + targetRect.height;\n            left = targetRect.left;\n            break;\n        case exports.Position.BottomCenter:\n            top = targetRect.top + targetRect.height;\n            left = targetRect.left + targetRect.width / 2 - width / 2;\n            break;\n        case exports.Position.BottomRight:\n            top = targetRect.top + targetRect.height;\n            left = targetRect.left + targetRect.width - width;\n            break;\n        case exports.Position.LeftTop:\n            top = targetRect.top;\n            left = targetRect.left - width;\n            break;\n        case exports.Position.LeftCenter:\n            top = targetRect.top + targetRect.height / 2 - height / 2;\n            left = targetRect.left - width;\n            break;\n        case exports.Position.LeftBottom:\n            top = targetRect.top + targetRect.height - height;\n            left = targetRect.left - width;\n            break;\n    }\n    return {\n        left: left + (offset.left || 0),\n        top: top + (offset.top || 0),\n    };\n};\n\nvar usePosition = function (contentRef, targetRef, anchorRef, position, offset) {\n    useIsomorphicLayoutEffect(function () {\n        var targetEle = targetRef.current;\n        var contentEle = contentRef.current;\n        var anchorEle = anchorRef.current;\n        if (!contentEle || !targetEle || !anchorEle) {\n            return;\n        }\n        var anchorRect = anchorEle.getBoundingClientRect();\n        var _a = calculatePosition(contentEle, targetEle, position, offset), top = _a.top, left = _a.left;\n        contentEle.style.top = \"\".concat(top - anchorRect.top, \"px\");\n        contentEle.style.left = \"\".concat(left - anchorRect.left, \"px\");\n    }, []);\n};\n\nvar Arrow = function (_a) {\n    var _b;\n    var customClassName = _a.customClassName, position = _a.position;\n    return (React__namespace.createElement(\"div\", { className: classNames((_b = {\n                'rpv-core__arrow': true,\n                'rpv-core__arrow--tl': position === exports.Position.TopLeft,\n                'rpv-core__arrow--tc': position === exports.Position.TopCenter,\n                'rpv-core__arrow--tr': position === exports.Position.TopRight,\n                'rpv-core__arrow--rt': position === exports.Position.RightTop,\n                'rpv-core__arrow--rc': position === exports.Position.RightCenter,\n                'rpv-core__arrow--rb': position === exports.Position.RightBottom,\n                'rpv-core__arrow--bl': position === exports.Position.BottomLeft,\n                'rpv-core__arrow--bc': position === exports.Position.BottomCenter,\n                'rpv-core__arrow--br': position === exports.Position.BottomRight,\n                'rpv-core__arrow--lt': position === exports.Position.LeftTop,\n                'rpv-core__arrow--lc': position === exports.Position.LeftCenter,\n                'rpv-core__arrow--lb': position === exports.Position.LeftBottom\n            },\n            _b[\"\".concat(customClassName)] = customClassName !== '',\n            _b)) }));\n};\n\nvar PopoverBody = function (_a) {\n    var ariaControlsSuffix = _a.ariaControlsSuffix, children = _a.children, closeOnClickOutside = _a.closeOnClickOutside, offset = _a.offset, position = _a.position, targetRef = _a.targetRef, onClose = _a.onClose;\n    var contentRef = React__namespace.useRef();\n    var innerRef = React__namespace.useRef();\n    var anchorRef = React__namespace.useRef();\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    useClickOutside(closeOnClickOutside, contentRef, onClose);\n    usePosition(contentRef, targetRef, anchorRef, position, offset);\n    useIsomorphicLayoutEffect(function () {\n        var innerContentEle = innerRef.current;\n        if (!innerContentEle) {\n            return;\n        }\n        var maxHeight = document.body.clientHeight * 0.75;\n        if (innerContentEle.getBoundingClientRect().height >= maxHeight) {\n            innerContentEle.style.overflow = 'auto';\n            innerContentEle.style.maxHeight = \"\".concat(maxHeight, \"px\");\n        }\n    }, []);\n    var innerId = \"rpv-core__popover-body-inner-\".concat(ariaControlsSuffix);\n    return (React__namespace.createElement(React__namespace.Fragment, null,\n        React__namespace.createElement(\"div\", { ref: anchorRef, style: { left: 0, position: 'absolute', top: 0 } }),\n        React__namespace.createElement(\"div\", { \"aria-describedby\": innerId, className: classNames({\n                'rpv-core__popover-body': true,\n                'rpv-core__popover-body--rtl': isRtl,\n            }), id: \"rpv-core__popover-body-\".concat(ariaControlsSuffix), ref: contentRef, role: \"dialog\", tabIndex: -1 },\n            React__namespace.createElement(Arrow, { customClassName: \"rpv-core__popover-body-arrow\", position: position }),\n            React__namespace.createElement(\"div\", { id: innerId, ref: innerRef }, children))));\n};\n\nvar PopoverOverlay = function (_a) {\n    var closeOnEscape = _a.closeOnEscape, onClose = _a.onClose;\n    var containerRef = React__namespace.useRef();\n    useEscape(function () {\n        if (containerRef.current && closeOnEscape) {\n            onClose();\n        }\n    });\n    return React__namespace.createElement(\"div\", { className: \"rpv-core__popover-overlay\", ref: containerRef });\n};\n\nvar Popover = function (_a) {\n    var _b = _a.ariaHasPopup, ariaHasPopup = _b === void 0 ? 'dialog' : _b, ariaControlsSuffix = _a.ariaControlsSuffix, closeOnClickOutside = _a.closeOnClickOutside, closeOnEscape = _a.closeOnEscape, content = _a.content, _c = _a.lockScroll, lockScroll = _c === void 0 ? true : _c, offset = _a.offset, position = _a.position, target = _a.target;\n    var _d = useToggle(false), opened = _d.opened, toggle = _d.toggle;\n    var targetRef = React__namespace.useRef();\n    var controlsSuffix = React__namespace.useMemo(function () { return ariaControlsSuffix || \"\".concat(uniqueId()); }, []);\n    return (React__namespace.createElement(\"div\", { ref: targetRef, \"aria-expanded\": opened ? 'true' : 'false', \"aria-haspopup\": ariaHasPopup, \"aria-controls\": \"rpv-core__popver-body-\".concat(controlsSuffix) },\n        target(toggle, opened),\n        opened && (React__namespace.createElement(React__namespace.Fragment, null,\n            lockScroll && React__namespace.createElement(PopoverOverlay, { closeOnEscape: closeOnEscape, onClose: toggle }),\n            React__namespace.createElement(PopoverBody, { ariaControlsSuffix: controlsSuffix, closeOnClickOutside: closeOnClickOutside, offset: offset, position: position, targetRef: targetRef, onClose: toggle }, content(toggle))))));\n};\n\nvar TooltipBody = function (_a) {\n    var ariaControlsSuffix = _a.ariaControlsSuffix, children = _a.children, contentRef = _a.contentRef, offset = _a.offset, position = _a.position, targetRef = _a.targetRef;\n    var anchorRef = React__namespace.useRef();\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    usePosition(contentRef, targetRef, anchorRef, position, offset);\n    return (React__namespace.createElement(React__namespace.Fragment, null,\n        React__namespace.createElement(\"div\", { ref: anchorRef, style: { left: 0, position: 'absolute', top: 0 } }),\n        React__namespace.createElement(\"div\", { className: classNames({\n                'rpv-core__tooltip-body': true,\n                'rpv-core__tooltip-body--rtl': isRtl,\n            }), id: \"rpv-core__tooltip-body-\".concat(ariaControlsSuffix), ref: contentRef, role: \"tooltip\" },\n            React__namespace.createElement(Arrow, { customClassName: \"rpv-core__tooltip-body-arrow\", position: position }),\n            React__namespace.createElement(\"div\", { className: \"rpv-core__tooltip-body-content\" }, children))));\n};\n\nvar Tooltip = function (_a) {\n    var ariaControlsSuffix = _a.ariaControlsSuffix, content = _a.content, offset = _a.offset, position = _a.position, target = _a.target;\n    var _b = useToggle(false), opened = _b.opened, toggle = _b.toggle;\n    var targetRef = React__namespace.useRef();\n    var contentRef = React__namespace.useRef();\n    var controlsSuffix = React__namespace.useMemo(function () { return ariaControlsSuffix || \"\".concat(uniqueId()); }, []);\n    useEscape(function () {\n        if (targetRef.current && document.activeElement && targetRef.current.contains(document.activeElement)) {\n            close();\n        }\n    });\n    var open = function () {\n        toggle(exports.ToggleStatus.Open);\n    };\n    var close = function () {\n        toggle(exports.ToggleStatus.Close);\n    };\n    var onBlur = function (e) {\n        var shouldHideTooltip = e.relatedTarget instanceof HTMLElement &&\n            e.currentTarget.parentElement &&\n            e.currentTarget.parentElement.contains(e.relatedTarget);\n        if (shouldHideTooltip) {\n            if (contentRef.current) {\n                contentRef.current.style.display = 'none';\n            }\n        }\n        else {\n            close();\n        }\n    };\n    return (React__namespace.createElement(React__namespace.Fragment, null,\n        React__namespace.createElement(\"div\", { ref: targetRef, \"aria-describedby\": \"rpv-core__tooltip-body-\".concat(controlsSuffix), onBlur: onBlur, onFocus: open, onMouseEnter: open, onMouseLeave: close }, target),\n        opened && (React__namespace.createElement(TooltipBody, { ariaControlsSuffix: controlsSuffix, contentRef: contentRef, offset: offset, position: position, targetRef: targetRef }, content()))));\n};\n\nfunction createStore(initialState) {\n    var state = initialState || {};\n    var listeners = {};\n    return {\n        subscribe: function (key, handler) {\n            listeners[key] = (listeners[key] || []).concat(handler);\n        },\n        unsubscribe: function (key, handler) {\n            listeners[key] = (listeners[key] || []).filter(function (f) { return f !== handler; });\n        },\n        update: function (key, data) {\n            var _a;\n            state = __assign(__assign({}, state), (_a = {}, _a[key] = data, _a));\n            (listeners[key] || []).forEach(function (handler) { return handler(state[key]); });\n        },\n        get: function (key) {\n            return state[key];\n        },\n    };\n}\n\nexports.LayerRenderStatus = void 0;\n(function (LayerRenderStatus) {\n    LayerRenderStatus[LayerRenderStatus[\"PreRender\"] = 0] = \"PreRender\";\n    LayerRenderStatus[LayerRenderStatus[\"DidRender\"] = 1] = \"DidRender\";\n})(exports.LayerRenderStatus || (exports.LayerRenderStatus = {}));\n\nexports.PageMode = void 0;\n(function (PageMode) {\n    PageMode[\"Attachments\"] = \"UseAttachments\";\n    PageMode[\"Bookmarks\"] = \"UseOutlines\";\n    PageMode[\"ContentGroup\"] = \"UseOC\";\n    PageMode[\"Default\"] = \"UserNone\";\n    PageMode[\"FullScreen\"] = \"FullScreen\";\n    PageMode[\"Thumbnails\"] = \"UseThumbs\";\n})(exports.PageMode || (exports.PageMode = {}));\n\nexports.RotateDirection = void 0;\n(function (RotateDirection) {\n    RotateDirection[\"Backward\"] = \"Backward\";\n    RotateDirection[\"Forward\"] = \"Forward\";\n})(exports.RotateDirection || (exports.RotateDirection = {}));\n\nexports.ScrollMode = void 0;\n(function (ScrollMode) {\n    ScrollMode[\"Horizontal\"] = \"Horizontal\";\n    ScrollMode[\"Vertical\"] = \"Vertical\";\n    ScrollMode[\"Wrapped\"] = \"Wrapped\";\n})(exports.ScrollMode || (exports.ScrollMode = {}));\n\nexports.SpecialZoomLevel = void 0;\n(function (SpecialZoomLevel) {\n    SpecialZoomLevel[\"ActualSize\"] = \"ActualSize\";\n    SpecialZoomLevel[\"PageFit\"] = \"PageFit\";\n    SpecialZoomLevel[\"PageWidth\"] = \"PageWidth\";\n})(exports.SpecialZoomLevel || (exports.SpecialZoomLevel = {}));\n\nvar isMac = function () { return (typeof window !== 'undefined' ? /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform) : false); };\n\nvar normalizeDestination = function (pageIndex, destArray) {\n    switch (destArray[1].name) {\n        case 'XYZ':\n            return {\n                bottomOffset: destArray[3],\n                leftOffset: destArray[2] || 0,\n                pageIndex: pageIndex,\n                scaleTo: destArray[4],\n            };\n        case 'Fit':\n        case 'FitB':\n            return {\n                bottomOffset: 0,\n                leftOffset: 0,\n                pageIndex: pageIndex,\n                scaleTo: exports.SpecialZoomLevel.PageFit,\n            };\n        case 'FitH':\n        case 'FitBH':\n            return {\n                bottomOffset: destArray[2],\n                leftOffset: 0,\n                pageIndex: pageIndex,\n                scaleTo: exports.SpecialZoomLevel.PageWidth,\n            };\n        default:\n            return {\n                bottomOffset: 0,\n                leftOffset: 0,\n                pageIndex: pageIndex,\n                scaleTo: 1,\n            };\n    }\n};\nvar pageOutlinesMap = new Map();\nvar pagesMap = new Map();\nvar generateRefKey = function (doc, outline) {\n    return \"\".concat(doc.loadingTask.docId, \"___\").concat(outline.num, \"R\").concat(outline.gen === 0 ? '' : outline.gen);\n};\nvar getPageIndex = function (doc, outline) {\n    return pageOutlinesMap.get(generateRefKey(doc, outline)) || null;\n};\nvar cacheOutlineRef = function (doc, outline, pageIndex) {\n    pageOutlinesMap.set(generateRefKey(doc, outline), pageIndex);\n};\nvar clearPagesCache = function () {\n    pageOutlinesMap.clear();\n    pagesMap.clear();\n};\nvar getPage = function (doc, pageIndex) {\n    if (!doc) {\n        return Promise.reject('The document is not loaded yet');\n    }\n    var pageKey = \"\".concat(doc.loadingTask.docId, \"___\").concat(pageIndex);\n    var page = pagesMap.get(pageKey);\n    if (page) {\n        return Promise.resolve(page);\n    }\n    return new Promise(function (resolve, _) {\n        doc.getPage(pageIndex + 1).then(function (page) {\n            pagesMap.set(pageKey, page);\n            if (page.ref) {\n                cacheOutlineRef(doc, page.ref, pageIndex);\n            }\n            resolve(page);\n        });\n    });\n};\nvar getDestination = function (doc, dest) {\n    return new Promise(function (res) {\n        new Promise(function (resolve) {\n            if (typeof dest === 'string') {\n                doc.getDestination(dest).then(function (destArray) {\n                    resolve(destArray);\n                });\n            }\n            else {\n                resolve(dest);\n            }\n        }).then(function (destArray) {\n            if ('object' === typeof destArray[0] && destArray[0] !== null) {\n                var outlineRef_1 = destArray[0];\n                var pageIndex = getPageIndex(doc, outlineRef_1);\n                if (pageIndex === null) {\n                    doc.getPageIndex(outlineRef_1).then(function (pageIndex) {\n                        cacheOutlineRef(doc, outlineRef_1, pageIndex);\n                        getDestination(doc, dest).then(function (result) { return res(result); });\n                    });\n                }\n                else {\n                    res(normalizeDestination(pageIndex, destArray));\n                }\n            }\n            else {\n                var target = normalizeDestination(destArray[0], destArray);\n                res(target);\n            }\n        });\n    });\n};\n\nfunction usePrevious(value) {\n    var ref = React__namespace.useRef(value);\n    React__namespace.useEffect(function () {\n        ref.current = value;\n    }, [value]);\n    return ref.current;\n}\n\nvar useDebounceCallback = function (callback, wait) {\n    var timeout = React__namespace.useRef();\n    var cleanup = function () {\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n    };\n    React__namespace.useEffect(function () {\n        return function () { return cleanup(); };\n    }, []);\n    return React__namespace.useCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        cleanup();\n        timeout.current = setTimeout(function () {\n            callback.apply(void 0, args);\n        }, wait);\n    }, [callback, wait]);\n};\n\nvar useTrackResize = function (_a) {\n    var targetRef = _a.targetRef, onResize = _a.onResize;\n    useIsomorphicLayoutEffect(function () {\n        var io = new ResizeObserver(function (entries) {\n            entries.forEach(function (entry) {\n                onResize(entry.target);\n            });\n        });\n        var container = targetRef.current;\n        if (!container) {\n            return;\n        }\n        io.observe(container);\n        return function () {\n            io.unobserve(container);\n        };\n    }, []);\n};\n\nvar clamp = function (min, max, value) { return Math.max(min, Math.min(value, max)); };\n\nvar findNearest = function (low, high, value, getItemValue) {\n    while (low <= high) {\n        var middle = ((low + high) / 2) | 0;\n        var currentValue = getItemValue(middle);\n        if (currentValue < value) {\n            low = middle + 1;\n        }\n        else if (currentValue > value) {\n            high = middle - 1;\n        }\n        else {\n            return middle;\n        }\n    }\n    return low > 0 ? low - 1 : 0;\n};\n\nvar rectReducer = function (state, action) {\n    var rect = action.rect;\n    return state.height !== rect.height || state.width !== rect.width ? rect : state;\n};\nvar useMeasureRect = function (_a) {\n    var elementRef = _a.elementRef;\n    var _b = React__namespace.useState(elementRef.current), element = _b[0], setElement = _b[1];\n    var initializedRectRef = React__namespace.useRef(false);\n    var _c = React__namespace.useReducer(rectReducer, { height: 0, width: 0 }), rect = _c[0], dispatch = _c[1];\n    useIsomorphicLayoutEffect(function () {\n        if (elementRef.current !== element) {\n            setElement(elementRef.current);\n        }\n    });\n    useIsomorphicLayoutEffect(function () {\n        if (element && !initializedRectRef.current) {\n            initializedRectRef.current = true;\n            var _a = element.getBoundingClientRect(), height = _a.height, width = _a.width;\n            dispatch({\n                rect: { height: height, width: width },\n            });\n        }\n    }, [element]);\n    React__namespace.useEffect(function () {\n        if (!element) {\n            return;\n        }\n        var tracker = new ResizeObserver(function (entries, __) {\n            entries.forEach(function (entry) {\n                if (entry.target === element) {\n                    var _a = entry.contentRect, height = _a.height, width = _a.width;\n                    dispatch({\n                        rect: { height: height, width: width },\n                    });\n                }\n            });\n        });\n        tracker.observe(element);\n        return function () {\n            tracker.unobserve(element);\n        };\n    }, [element]);\n    return rect;\n};\n\nvar easeOutQuart = function (t) { return 1 - Math.pow(1 - t, 4); };\n\nvar smoothScroll = function (ele, scrollMode, targetPosition, duration, easing, onReachTarget) {\n    if (easing === void 0) { easing = function (t) { return t; }; }\n    if (onReachTarget === void 0) { onReachTarget = function () { }; }\n    var start = 0;\n    switch (scrollMode) {\n        case exports.ScrollMode.Horizontal:\n            start = ele.scrollLeft;\n        case exports.ScrollMode.Vertical:\n        default:\n            start = ele.scrollTop;\n            break;\n    }\n    var startTime = -1;\n    var requestId;\n    var offset = start - targetPosition;\n    if (offset === 0) {\n        return;\n    }\n    var loop = function (currentTime) {\n        if (startTime === -1) {\n            startTime = currentTime;\n        }\n        var time = currentTime - startTime;\n        var percent = Math.min(time / duration, 1);\n        var easedPercent = easing(percent);\n        var updatePosition = start - offset * easedPercent;\n        switch (scrollMode) {\n            case exports.ScrollMode.Horizontal:\n                ele.scrollLeft = updatePosition;\n            case exports.ScrollMode.Vertical:\n            default:\n                ele.scrollTop = updatePosition;\n                break;\n        }\n        if (updatePosition === targetPosition) {\n            onReachTarget();\n        }\n        if (time < duration) {\n            requestId = window.requestAnimationFrame(loop);\n        }\n        else {\n            window.cancelAnimationFrame(requestId);\n        }\n    };\n    requestId = window.requestAnimationFrame(loop);\n};\n\nvar useRafState = function (initialState) {\n    var isMounted = useIsMounted();\n    var rafRef = React__namespace.useRef(0);\n    var _a = React__namespace.useState(initialState), state = _a[0], setState = _a[1];\n    var setRafState = React__namespace.useCallback(function (value) {\n        cancelAnimationFrame(rafRef.current);\n        rafRef.current = requestAnimationFrame(function () {\n            isMounted.current && setState(value);\n        });\n    }, []);\n    React__namespace.useEffect(function () {\n        return function () {\n            cancelAnimationFrame(rafRef.current);\n        };\n    }, []);\n    return [state, setRafState];\n};\n\nvar ZERO_OFFSET$1 = {\n    left: 0,\n    top: 0,\n};\nvar SCROLL_EVENT_OPTIONS = {\n    capture: false,\n    passive: true,\n};\nvar SCROLL_DURATION = 400;\nvar useScroll = function (_a) {\n    var elementRef = _a.elementRef, isRtl = _a.isRtl, scrollMode = _a.scrollMode, onSmoothScroll = _a.onSmoothScroll;\n    var _b = useRafState(ZERO_OFFSET$1), scrollOffset = _b[0], setScrollOffset = _b[1];\n    var _c = React__namespace.useState(elementRef.current), element = _c[0], setElement = _c[1];\n    var factor = isRtl ? -1 : 1;\n    var latestRef = React__namespace.useRef(scrollMode);\n    latestRef.current = scrollMode;\n    var handleSmoothScrollingComplete = React__namespace.useCallback(function () { return onSmoothScroll(false); }, []);\n    var handleScroll = React__namespace.useCallback(function () {\n        if (!element) {\n            return;\n        }\n        switch (latestRef.current) {\n            case exports.ScrollMode.Horizontal:\n                setScrollOffset({\n                    left: factor * element.scrollLeft,\n                    top: 0,\n                });\n                break;\n            case exports.ScrollMode.Vertical:\n            default:\n                setScrollOffset({\n                    left: 0,\n                    top: element.scrollTop,\n                });\n                break;\n        }\n    }, [element]);\n    useIsomorphicLayoutEffect(function () {\n        setElement(elementRef.current);\n    });\n    useIsomorphicLayoutEffect(function () {\n        if (!element) {\n            return;\n        }\n        element.addEventListener('scroll', handleScroll, SCROLL_EVENT_OPTIONS);\n        return function () {\n            element.removeEventListener('scroll', handleScroll, SCROLL_EVENT_OPTIONS);\n        };\n    }, [element]);\n    var scrollTo = React__namespace.useCallback(function (targetPosition, withSmoothScroll) {\n        var ele = elementRef.current;\n        if (!ele) {\n            return;\n        }\n        var updatePosition = 0;\n        var currentScrollMode = exports.ScrollMode.Vertical;\n        switch (latestRef.current) {\n            case exports.ScrollMode.Horizontal:\n                updatePosition = factor * targetPosition.left;\n                currentScrollMode = exports.ScrollMode.Horizontal;\n                break;\n            case exports.ScrollMode.Vertical:\n            default:\n                updatePosition = targetPosition.top;\n                currentScrollMode = exports.ScrollMode.Vertical;\n                break;\n        }\n        if (withSmoothScroll) {\n            onSmoothScroll(true);\n            smoothScroll(ele, currentScrollMode, updatePosition, SCROLL_DURATION, easeOutQuart, handleSmoothScrollingComplete);\n        }\n        else {\n            switch (latestRef.current) {\n                case exports.ScrollMode.Horizontal:\n                    ele.scrollLeft = updatePosition;\n                    break;\n                case exports.ScrollMode.Vertical:\n                default:\n                    ele.scrollTop = updatePosition;\n                    break;\n            }\n        }\n    }, [elementRef]);\n    return {\n        scrollOffset: scrollOffset,\n        scrollTo: scrollTo,\n    };\n};\n\nvar ZERO_RECT = {\n    height: 0,\n    width: 0,\n};\nvar ZERO_OFFSET = {\n    left: 0,\n    top: 0,\n};\nvar calculateRange = function (scrollMode, measurements, outerSize, scrollOffset) {\n    var currentOffset = 0;\n    switch (scrollMode) {\n        case exports.ScrollMode.Horizontal:\n            currentOffset = scrollOffset.left;\n            break;\n        case exports.ScrollMode.Vertical:\n        default:\n            currentOffset = scrollOffset.top;\n            break;\n    }\n    var size = measurements.length - 1;\n    var getOffset = function (index) {\n        switch (scrollMode) {\n            case exports.ScrollMode.Horizontal:\n                return measurements[index].start.left;\n            case exports.ScrollMode.Wrapped:\n            case exports.ScrollMode.Vertical:\n            default:\n                return measurements[index].start.top;\n        }\n    };\n    var start = findNearest(0, size, currentOffset, getOffset);\n    if (scrollMode === exports.ScrollMode.Wrapped) {\n        var startTop = measurements[start].start.top;\n        while (start - 1 >= 0 &&\n            measurements[start - 1].start.top === startTop &&\n            measurements[start - 1].start.left >= scrollOffset.left) {\n            start--;\n        }\n    }\n    var end = start;\n    var visibilities = {};\n    var maxVisbilityIndex = start;\n    var maxVisbility = -1;\n    while (end <= size) {\n        var itemRect = measurements[end].size;\n        var visibility = ZERO_RECT;\n        var topLeftCorner = {\n            top: measurements[end].start.top - scrollOffset.top,\n            left: measurements[end].start.left - scrollOffset.left,\n        };\n        var visibleSize = {\n            height: outerSize.height - topLeftCorner.top,\n            width: outerSize.width - topLeftCorner.left,\n        };\n        if (scrollMode === exports.ScrollMode.Horizontal && visibleSize.width < 0) {\n            end--;\n            break;\n        }\n        if (scrollMode === exports.ScrollMode.Vertical && visibleSize.height < 0) {\n            end--;\n            break;\n        }\n        if (scrollMode === exports.ScrollMode.Wrapped && (visibleSize.width < 0 || visibleSize.height < 0)) {\n            end--;\n            break;\n        }\n        if (scrollMode === exports.ScrollMode.Vertical) {\n            visibility.width = 1;\n        }\n        else if (topLeftCorner.left < 0) {\n            var visibleWidth = itemRect.width - -topLeftCorner.left;\n            visibility.width = visibleWidth <= outerSize.width ? visibleWidth / outerSize.width : 1;\n        }\n        else {\n            visibility.width = itemRect.width <= visibleSize.width ? 1 : visibleSize.width / itemRect.width;\n        }\n        if (scrollMode === exports.ScrollMode.Horizontal) {\n            visibility.height = 1;\n        }\n        else if (topLeftCorner.top < 0) {\n            var visibleHeight = itemRect.height - -topLeftCorner.top;\n            visibility.height = visibleHeight <= outerSize.height ? visibleHeight / outerSize.height : 1;\n        }\n        else {\n            visibility.height = itemRect.height <= visibleSize.height ? 1 : visibleSize.height / itemRect.height;\n        }\n        visibilities[end] = visibility.width * visibility.height;\n        if (maxVisbility < visibilities[end]) {\n            maxVisbility = visibilities[end];\n            maxVisbilityIndex = end;\n        }\n        end++;\n    }\n    return {\n        start: start,\n        end: end,\n        maxVisbilityIndex: maxVisbilityIndex,\n        visibilities: visibilities,\n    };\n};\nvar useVirtual = function (_a) {\n    var estimateSize = _a.estimateSize, isRtl = _a.isRtl, numberOfItems = _a.numberOfItems, setStartRange = _a.setStartRange, setEndRange = _a.setEndRange, parentRef = _a.parentRef, scrollMode = _a.scrollMode, transformSize = _a.transformSize;\n    var _b = React__namespace.useState(false), isSmoothScrolling = _b[0], setSmoothScrolling = _b[1];\n    var onSmoothScroll = React__namespace.useCallback(function (isSmoothScrolling) { return setSmoothScrolling(isSmoothScrolling); }, []);\n    var _c = useScroll({\n        elementRef: parentRef,\n        isRtl: isRtl,\n        scrollMode: scrollMode,\n        onSmoothScroll: onSmoothScroll,\n    }), scrollOffset = _c.scrollOffset, scrollTo = _c.scrollTo;\n    var parentRect = useMeasureRect({\n        elementRef: parentRef,\n    });\n    var latestRef = React__namespace.useRef({\n        scrollOffset: ZERO_OFFSET,\n        measurements: [],\n        parentRect: ZERO_RECT,\n        totalSize: ZERO_RECT,\n    });\n    latestRef.current.scrollOffset = scrollOffset;\n    latestRef.current.parentRect = parentRect;\n    var _d = React__namespace.useState({}), cacheMeasure = _d[0], setCacheMeasure = _d[1];\n    var measurements = React__namespace.useMemo(function () {\n        var measurements = [];\n        var totalWidth = 0;\n        var firstOfRow = {\n            left: 0,\n            top: 0,\n        };\n        var maxHeight = 0;\n        for (var i = 0; i < numberOfItems; i++) {\n            var size = cacheMeasure[i] || transformSize(estimateSize(i));\n            var start_1 = ZERO_OFFSET;\n            if (i === 0) {\n                totalWidth = size.width;\n                firstOfRow = {\n                    left: 0,\n                    top: 0,\n                };\n                maxHeight = size.height;\n            }\n            else {\n                switch (scrollMode) {\n                    case exports.ScrollMode.Wrapped:\n                        totalWidth += size.width;\n                        if (totalWidth < parentRect.width) {\n                            start_1 = {\n                                left: measurements[i - 1].end.left,\n                                top: firstOfRow.top,\n                            };\n                            maxHeight = Math.max(maxHeight, size.height);\n                        }\n                        else {\n                            totalWidth = size.width;\n                            start_1 = {\n                                left: firstOfRow.left,\n                                top: firstOfRow.top + maxHeight,\n                            };\n                            firstOfRow = {\n                                left: start_1.left,\n                                top: start_1.top,\n                            };\n                            maxHeight = size.height;\n                        }\n                        break;\n                    case exports.ScrollMode.Horizontal:\n                    case exports.ScrollMode.Vertical:\n                    default:\n                        start_1 = measurements[i - 1].end;\n                        break;\n                }\n            }\n            var end_1 = {\n                left: start_1.left + size.width,\n                top: start_1.top + size.height,\n            };\n            measurements[i] = {\n                index: i,\n                start: start_1,\n                size: size,\n                end: end_1,\n                visibility: -1,\n            };\n        }\n        return measurements;\n    }, [estimateSize, scrollMode, parentRect, cacheMeasure, transformSize]);\n    var totalSize = measurements[numberOfItems - 1]\n        ? {\n            height: measurements[numberOfItems - 1].end.top,\n            width: measurements[numberOfItems - 1].end.left,\n        }\n        : ZERO_RECT;\n    latestRef.current.measurements = measurements;\n    latestRef.current.totalSize = totalSize;\n    var _e = calculateRange(scrollMode, latestRef.current.measurements, latestRef.current.parentRect, latestRef.current.scrollOffset), maxVisbilityIndex = _e.maxVisbilityIndex, visibilities = _e.visibilities, start = _e.start, end = _e.end;\n    var startRange = setStartRange(start);\n    var endRange = setEndRange(end);\n    var virtualItems = React__namespace.useMemo(function () {\n        var virtualItems = [];\n        var _loop_1 = function (i) {\n            var item = measurements[i];\n            var virtualItem = __assign(__assign({}, item), { visibility: visibilities[i] !== undefined ? visibilities[i] : -1, measureRef: function (ele) {\n                    if (!ele) {\n                        return;\n                    }\n                    var rect = ele.getBoundingClientRect();\n                    if (rect.height === 0 && rect.width === 0) {\n                        return;\n                    }\n                    var measuredSize = transformSize({\n                        height: rect.height,\n                        width: rect.width,\n                    });\n                    if (measuredSize.height !== item.size.height || measuredSize.width !== item.size.width) {\n                        setCacheMeasure(function (old) {\n                            var _a;\n                            return (__assign(__assign({}, old), (_a = {}, _a[i] = measuredSize, _a)));\n                        });\n                    }\n                } });\n            virtualItems.push(virtualItem);\n        };\n        for (var i = startRange; i <= endRange; i++) {\n            _loop_1(i);\n        }\n        return virtualItems;\n    }, [transformSize, visibilities, measurements]);\n    var scrollToItem = React__namespace.useCallback(function (index, offset) {\n        var measurements = latestRef.current.measurements;\n        var normalizedIndex = clamp(0, numberOfItems - 1, index);\n        var measurement = measurements[normalizedIndex];\n        if (measurement) {\n            scrollTo({\n                left: offset.left + measurement.start.left,\n                top: offset.top + measurement.start.top,\n            }, true);\n        }\n    }, [scrollTo]);\n    var getContainerStyles = React__namespace.useCallback(function () {\n        switch (scrollMode) {\n            case exports.ScrollMode.Horizontal:\n                return {\n                    position: 'relative',\n                    height: '100%',\n                    width: \"\".concat(totalSize.width, \"px\"),\n                };\n            case exports.ScrollMode.Vertical:\n            default:\n                return {\n                    position: 'relative',\n                    height: \"\".concat(totalSize.height, \"px\"),\n                    width: '100%',\n                };\n        }\n    }, [scrollMode, totalSize]);\n    var getItemStyles = React__namespace.useCallback(function (item) {\n        var _a, _b, _c;\n        var sideProperty = isRtl ? 'right' : 'left';\n        var factor = isRtl ? -1 : 1;\n        switch (scrollMode) {\n            case exports.ScrollMode.Horizontal:\n                return _a = {\n                        height: '100%',\n                        width: \"\".concat(item.size.width, \"px\")\n                    },\n                    _a[sideProperty] = 0,\n                    _a.position = 'absolute',\n                    _a.top = 0,\n                    _a.transform = \"translateX(\".concat(item.start.left * factor, \"px)\"),\n                    _a;\n            case exports.ScrollMode.Wrapped:\n                return _b = {\n                        height: \"\".concat(item.size.height, \"px\"),\n                        width: \"\".concat(item.size.width, \"px\")\n                    },\n                    _b[sideProperty] = 0,\n                    _b.position = 'absolute',\n                    _b.top = 0,\n                    _b.transform = \"translate(\".concat(item.start.left * factor, \"px, \").concat(item.start.top, \"px)\"),\n                    _b;\n            case exports.ScrollMode.Vertical:\n            default:\n                return _c = {\n                        height: \"\".concat(item.size.height, \"px\"),\n                        width: '100%'\n                    },\n                    _c[sideProperty] = 0,\n                    _c.position = 'absolute',\n                    _c.top = 0,\n                    _c.transform = \"translateY(\".concat(item.start.top, \"px)\"),\n                    _c;\n        }\n    }, [isRtl, scrollMode]);\n    var zoom = React__namespace.useCallback(function (scale) {\n        setCacheMeasure({});\n        var scrollOffset = latestRef.current.scrollOffset;\n        var updateOffset = {\n            left: scrollOffset.left * scale,\n            top: scrollOffset.top * scale,\n        };\n        scrollTo(updateOffset, false);\n    }, []);\n    return {\n        isSmoothScrolling: isSmoothScrolling,\n        startIndex: start,\n        startRange: startRange,\n        endIndex: end,\n        endRange: endRange,\n        maxVisbilityIndex: maxVisbilityIndex,\n        virtualItems: virtualItems,\n        getContainerStyles: getContainerStyles,\n        getItemStyles: getItemStyles,\n        scrollToItem: scrollToItem,\n        zoom: zoom,\n    };\n};\n\nvar AnnotationBorderStyleType;\n(function (AnnotationBorderStyleType) {\n    AnnotationBorderStyleType[AnnotationBorderStyleType[\"Solid\"] = 1] = \"Solid\";\n    AnnotationBorderStyleType[AnnotationBorderStyleType[\"Dashed\"] = 2] = \"Dashed\";\n    AnnotationBorderStyleType[AnnotationBorderStyleType[\"Beveled\"] = 3] = \"Beveled\";\n    AnnotationBorderStyleType[AnnotationBorderStyleType[\"Inset\"] = 4] = \"Inset\";\n    AnnotationBorderStyleType[AnnotationBorderStyleType[\"Underline\"] = 5] = \"Underline\";\n})(AnnotationBorderStyleType || (AnnotationBorderStyleType = {}));\n\nvar dateRegex = new RegExp('^D:' +\n    '(\\\\d{4})' +\n    '(\\\\d{2})?' +\n    '(\\\\d{2})?' +\n    '(\\\\d{2})?' +\n    '(\\\\d{2})?' +\n    '(\\\\d{2})?' +\n    '([Z|+|-])?' +\n    '(\\\\d{2})?' +\n    \"'?\" +\n    '(\\\\d{2})?' +\n    \"'?\");\nvar parse = function (value, min, max, defaultValue) {\n    var parsed = parseInt(value, 10);\n    return parsed >= min && parsed <= max ? parsed : defaultValue;\n};\nvar convertDate = function (input) {\n    var matches = dateRegex.exec(input);\n    if (!matches) {\n        return null;\n    }\n    var year = parseInt(matches[1], 10);\n    var month = parse(matches[2], 1, 12, 1) - 1;\n    var day = parse(matches[3], 1, 31, 1);\n    var hour = parse(matches[4], 0, 23, 0);\n    var minute = parse(matches[5], 0, 59, 0);\n    var second = parse(matches[6], 0, 59, 0);\n    var universalTimeRelation = matches[7] || 'Z';\n    var offsetHour = parse(matches[8], 0, 23, 0);\n    var offsetMinute = parse(matches[9], 0, 59, 0);\n    switch (universalTimeRelation) {\n        case '-':\n            hour += offsetHour;\n            minute += offsetMinute;\n            break;\n        case '+':\n            hour -= offsetHour;\n            minute -= offsetMinute;\n            break;\n    }\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n};\n\nvar PopupWrapper = function (_a) {\n    var annotation = _a.annotation;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var containerRef = React__namespace.useRef();\n    var dateStr = '';\n    if (annotation.modificationDate) {\n        var date = convertDate(annotation.modificationDate);\n        dateStr = date ? \"\".concat(date.toLocaleDateString(), \", \").concat(date.toLocaleTimeString()) : '';\n    }\n    React__namespace.useLayoutEffect(function () {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        var annotationEle = document.querySelector(\"[data-annotation-id=\\\"\".concat(annotation.id, \"\\\"]\"));\n        if (!annotationEle) {\n            return;\n        }\n        var ele = annotationEle;\n        ele.style.zIndex += 1;\n        return function () {\n            ele.style.zIndex = \"\".concat(parseInt(ele.style.zIndex, 10) - 1);\n        };\n    }, []);\n    return (React__namespace.createElement(\"div\", { ref: containerRef, className: classNames({\n            'rpv-core__annotation-popup-wrapper': true,\n            'rpv-core__annotation-popup-wrapper--rtl': isRtl,\n        }), style: {\n            top: annotation.annotationType === exports.AnnotationType.Popup ? '' : '100%',\n        } },\n        annotation.title && (React__namespace.createElement(React__namespace.Fragment, null,\n            React__namespace.createElement(\"div\", { className: classNames({\n                    'rpv-core__annotation-popup-title': true,\n                    'rpv-core__annotation-popup-title--ltr': !isRtl,\n                    'rpv-core__annotation-popup-title--rtl': isRtl,\n                }) }, annotation.title),\n            React__namespace.createElement(\"div\", { className: \"rpv-core__annotation-popup-date\" }, dateStr))),\n        annotation.contents && (React__namespace.createElement(\"div\", { className: \"rpv-core__annotation-popup-content\" }, annotation.contents.split('\\n').map(function (item, index) { return (React__namespace.createElement(React__namespace.Fragment, { key: index },\n            item,\n            React__namespace.createElement(\"br\", null))); })))));\n};\n\nvar TogglePopupBy;\n(function (TogglePopupBy) {\n    TogglePopupBy[\"Click\"] = \"Click\";\n    TogglePopupBy[\"Hover\"] = \"Hover\";\n})(TogglePopupBy || (TogglePopupBy = {}));\nvar useTogglePopup = function () {\n    var _a = useToggle(false), opened = _a.opened, toggle = _a.toggle;\n    var _b = React__namespace.useState(TogglePopupBy.Hover), togglePopupBy = _b[0], setTooglePopupBy = _b[1];\n    var toggleOnClick = function () {\n        switch (togglePopupBy) {\n            case TogglePopupBy.Click:\n                opened && setTooglePopupBy(TogglePopupBy.Hover);\n                toggle(exports.ToggleStatus.Toggle);\n                break;\n            case TogglePopupBy.Hover:\n                setTooglePopupBy(TogglePopupBy.Click);\n                toggle(exports.ToggleStatus.Open);\n                break;\n        }\n    };\n    var openOnHover = function () {\n        togglePopupBy === TogglePopupBy.Hover && toggle(exports.ToggleStatus.Open);\n    };\n    var closeOnHover = function () {\n        togglePopupBy === TogglePopupBy.Hover && toggle(exports.ToggleStatus.Close);\n    };\n    return {\n        opened: opened,\n        closeOnHover: closeOnHover,\n        openOnHover: openOnHover,\n        toggleOnClick: toggleOnClick,\n    };\n};\n\nvar Annotation = function (_a) {\n    var annotation = _a.annotation, children = _a.children, ignoreBorder = _a.ignoreBorder, hasPopup = _a.hasPopup, isRenderable = _a.isRenderable, page = _a.page, viewport = _a.viewport;\n    var rect = annotation.rect;\n    var _b = useTogglePopup(), closeOnHover = _b.closeOnHover, opened = _b.opened, openOnHover = _b.openOnHover, toggleOnClick = _b.toggleOnClick;\n    var normalizeRect = function (r) { return [\n        Math.min(r[0], r[2]),\n        Math.min(r[1], r[3]),\n        Math.max(r[0], r[2]),\n        Math.max(r[1], r[3]),\n    ]; };\n    var bound = normalizeRect([\n        rect[0],\n        page.view[3] + page.view[1] - rect[1],\n        rect[2],\n        page.view[3] + page.view[1] - rect[3],\n    ]);\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var styles = {\n        borderColor: '',\n        borderRadius: '',\n        borderStyle: '',\n        borderWidth: '',\n    };\n    if (!ignoreBorder && annotation.borderStyle.width > 0) {\n        switch (annotation.borderStyle.style) {\n            case AnnotationBorderStyleType.Dashed:\n                styles.borderStyle = 'dashed';\n                break;\n            case AnnotationBorderStyleType.Solid:\n                styles.borderStyle = 'solid';\n                break;\n            case AnnotationBorderStyleType.Underline:\n                styles = Object.assign({\n                    borderBottomStyle: 'solid',\n                }, styles);\n                break;\n            case AnnotationBorderStyleType.Beveled:\n            case AnnotationBorderStyleType.Inset:\n        }\n        var borderWidth = annotation.borderStyle.width;\n        styles.borderWidth = \"\".concat(borderWidth, \"px\");\n        if (annotation.borderStyle.style !== AnnotationBorderStyleType.Underline) {\n            width = width - 2 * borderWidth;\n            height = height - 2 * borderWidth;\n        }\n        var _c = annotation.borderStyle, horizontalCornerRadius = _c.horizontalCornerRadius, verticalCornerRadius = _c.verticalCornerRadius;\n        if (horizontalCornerRadius > 0 || verticalCornerRadius > 0) {\n            styles.borderRadius = \"\".concat(horizontalCornerRadius, \"px / \").concat(verticalCornerRadius, \"px\");\n        }\n        annotation.color\n            ? (styles.borderColor = \"rgb(\".concat(annotation.color[0] | 0, \", \").concat(annotation.color[1] | 0, \", \").concat(annotation.color[2] | 0, \")\"))\n            :\n                (styles.borderWidth = '0');\n    }\n    return (React__namespace.createElement(React__namespace.Fragment, null, isRenderable &&\n        children({\n            popup: {\n                opened: opened,\n                closeOnHover: closeOnHover,\n                openOnHover: openOnHover,\n                toggleOnClick: toggleOnClick,\n            },\n            slot: {\n                attrs: {\n                    style: Object.assign({\n                        height: \"\".concat(height, \"px\"),\n                        left: \"\".concat(bound[0], \"px\"),\n                        top: \"\".concat(bound[1], \"px\"),\n                        transform: \"matrix(\".concat(viewport.transform.join(','), \")\"),\n                        transformOrigin: \"-\".concat(bound[0], \"px -\").concat(bound[1], \"px\"),\n                        width: \"\".concat(width, \"px\"),\n                    }, styles),\n                },\n                children: React__namespace.createElement(React__namespace.Fragment, null, hasPopup && opened && React__namespace.createElement(PopupWrapper, { annotation: annotation })),\n            },\n        })));\n};\n\nvar Caret = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--caret\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar Circle = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    var rect = annotation.rect;\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var borderWidth = annotation.borderStyle.width;\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--circle\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n        React__namespace.createElement(\"svg\", { height: \"\".concat(height, \"px\"), preserveAspectRatio: \"none\", version: \"1.1\", viewBox: \"0 0 \".concat(width, \" \").concat(height), width: \"\".concat(width, \"px\") },\n            React__namespace.createElement(\"circle\", { cy: height / 2, fill: \"none\", rx: width / 2 - borderWidth / 2, ry: height / 2 - borderWidth / 2, stroke: \"transparent\", strokeWidth: borderWidth || 1 })),\n        props.slot.children)); }));\n};\n\nvar getFileName = function (url) {\n    var str = url.split('/').pop();\n    return str ? str.split('#')[0].split('?')[0] : url;\n};\n\nvar downloadFile = function (url, data) {\n    var blobUrl = typeof data === 'string' ? '' : URL.createObjectURL(new Blob([data], { type: '' }));\n    var link = document.createElement('a');\n    link.style.display = 'none';\n    link.href = blobUrl || url;\n    link.setAttribute('download', getFileName(url));\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    if (blobUrl) {\n        URL.revokeObjectURL(blobUrl);\n    }\n};\n\nvar FileAttachment = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false && (!!annotation.title || !!annotation.contents);\n    var doubleClick = function () {\n        var file = annotation.file;\n        file && downloadFile(file.filename, file.content);\n    };\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: true, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--file-attachment\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onDoubleClick: doubleClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar FreeText = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--free-text\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar Popup = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var isRenderable = !!(annotation.title || annotation.contents);\n    var ignoredParents = ['Circle', 'Ink', 'Line', 'Polygon', 'PolyLine', 'Square'];\n    var hasPopup = !annotation.parentType || ignoredParents.indexOf(annotation.parentType) !== -1;\n    useIsomorphicLayoutEffect(function () {\n        if (!annotation.parentId) {\n            return;\n        }\n        var parent = document.querySelector(\"[data-annotation-id=\\\"\".concat(annotation.parentId, \"\\\"]\"));\n        var container = document.querySelector(\"[data-annotation-id=\\\"\".concat(annotation.id, \"\\\"]\"));\n        if (!parent || !container) {\n            return;\n        }\n        var left = parseFloat(parent.style.left);\n        var top = parseFloat(parent.style.top) + parseFloat(parent.style.height);\n        container.style.left = \"\".concat(left, \"px\");\n        container.style.top = \"\".concat(top, \"px\");\n        container.style.transformOrigin = \"-\".concat(left, \"px -\").concat(top, \"px\");\n    }, []);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: false, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--popup\", \"data-annotation-id\": annotation.id }),\n        React__namespace.createElement(PopupWrapper, { annotation: annotation }))); }));\n};\n\nvar Highlight = function (_a) {\n    var annotation = _a.annotation, childAnnotation = _a.childAnnotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    var hasQuadPoints = annotation.quadPoints && annotation.quadPoints.length > 0;\n    if (hasQuadPoints) {\n        var annotations = annotation.quadPoints.map(function (quadPoint) {\n            return Object.assign({}, annotation, {\n                rect: [quadPoint[2].x, quadPoint[2].y, quadPoint[1].x, quadPoint[1].y],\n                quadPoints: [],\n            });\n        });\n        return (React__namespace.createElement(React__namespace.Fragment, null, annotations.map(function (ann, index) { return (React__namespace.createElement(Highlight, { key: index, annotation: ann, childAnnotation: childAnnotation, page: page, viewport: viewport })); })));\n    }\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(React__namespace.Fragment, null,\n        React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--highlight\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children),\n        childAnnotation &&\n            childAnnotation.annotationType === exports.AnnotationType.Popup &&\n            props.popup.opened && React__namespace.createElement(Popup, { annotation: childAnnotation, page: page, viewport: viewport }))); }));\n};\n\nvar Ink = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    var rect = annotation.rect;\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var borderWidth = annotation.borderStyle.width;\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--ink\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n        annotation.inkLists && annotation.inkLists.length && (React__namespace.createElement(\"svg\", { height: \"\".concat(height, \"px\"), preserveAspectRatio: \"none\", version: \"1.1\", viewBox: \"0 0 \".concat(width, \" \").concat(height), width: \"\".concat(width, \"px\") }, annotation.inkLists.map(function (inkList, index) { return (React__namespace.createElement(\"polyline\", { key: index, fill: \"none\", stroke: \"transparent\", strokeWidth: borderWidth || 1, points: inkList.map(function (item) { return \"\".concat(item.x - rect[0], \",\").concat(rect[3] - item.y); }).join(' ') })); }))),\n        props.slot.children)); }));\n};\n\nvar Line = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    var rect = annotation.rect;\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var borderWidth = annotation.borderStyle.width;\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--line\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n        React__namespace.createElement(\"svg\", { height: \"\".concat(height, \"px\"), preserveAspectRatio: \"none\", version: \"1.1\", viewBox: \"0 0 \".concat(width, \" \").concat(height), width: \"\".concat(width, \"px\") },\n            React__namespace.createElement(\"line\", { stroke: \"transparent\", strokeWidth: borderWidth || 1, x1: rect[2] - annotation.lineCoordinates[0], x2: rect[2] - annotation.lineCoordinates[2], y1: rect[3] - annotation.lineCoordinates[1], y2: rect[3] - annotation.lineCoordinates[3] })),\n        props.slot.children)); }));\n};\n\nvar Link = function (_a) {\n    var annotation = _a.annotation, doc = _a.doc, page = _a.page, viewport = _a.viewport, onExecuteNamedAction = _a.onExecuteNamedAction, onJumpToDest = _a.onJumpToDest;\n    var link = function (e) {\n        e.preventDefault();\n        annotation.action\n            ? onExecuteNamedAction(annotation.action)\n            : getDestination(doc, annotation.dest).then(function (target) {\n                var pageIndex = target.pageIndex, bottomOffset = target.bottomOffset, leftOffset = target.leftOffset, scaleTo = target.scaleTo;\n                onJumpToDest(pageIndex, bottomOffset, leftOffset, scaleTo);\n            });\n    };\n    var isRenderable = !!(annotation.url || annotation.dest || annotation.action || annotation.unsafeUrl);\n    var externalUrl = annotation.url || annotation.unsafeUrl;\n    var attrs = externalUrl\n        ? {\n            'data-target': 'external',\n            href: externalUrl,\n            rel: 'noopener noreferrer nofollow',\n            target: annotation.newWindow ? '_blank' : '',\n            title: externalUrl,\n        }\n        : {\n            href: '',\n            'data-annotation-link-dest': annotation.dest,\n            onClick: link,\n        };\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: false, ignoreBorder: false, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--link\", \"data-annotation-id\": annotation.id, \"data-testid\": \"core__annotation--link-\".concat(annotation.id) }),\n        React__namespace.createElement(\"a\", __assign({}, attrs)))); }));\n};\n\nvar Polygon = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    var rect = annotation.rect;\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var borderWidth = annotation.borderStyle.width;\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--polygon\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n        annotation.vertices && annotation.vertices.length && (React__namespace.createElement(\"svg\", { height: \"\".concat(height, \"px\"), preserveAspectRatio: \"none\", version: \"1.1\", viewBox: \"0 0 \".concat(width, \" \").concat(height), width: \"\".concat(width, \"px\") },\n            React__namespace.createElement(\"polygon\", { fill: \"none\", stroke: \"transparent\", strokeWidth: borderWidth || 1, points: annotation.vertices\n                    .map(function (item) { return \"\".concat(item.x - rect[0], \",\").concat(rect[3] - item.y); })\n                    .join(' ') }))),\n        props.slot.children)); }));\n};\n\nvar Polyline = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    var rect = annotation.rect;\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var borderWidth = annotation.borderStyle.width;\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--polyline\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n        annotation.vertices && annotation.vertices.length && (React__namespace.createElement(\"svg\", { height: \"\".concat(height, \"px\"), preserveAspectRatio: \"none\", version: \"1.1\", viewBox: \"0 0 \".concat(width, \" \").concat(height), width: \"\".concat(width, \"px\") },\n            React__namespace.createElement(\"polyline\", { fill: \"none\", stroke: \"transparent\", strokeWidth: borderWidth || 1, points: annotation.vertices\n                    .map(function (item) { return \"\".concat(item.x - rect[0], \",\").concat(rect[3] - item.y); })\n                    .join(' ') }))),\n        props.slot.children)); }));\n};\n\nvar Square = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    var rect = annotation.rect;\n    var width = rect[2] - rect[0];\n    var height = rect[3] - rect[1];\n    var borderWidth = annotation.borderStyle.width;\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--square\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n        React__namespace.createElement(\"svg\", { height: \"\".concat(height, \"px\"), preserveAspectRatio: \"none\", version: \"1.1\", viewBox: \"0 0 \".concat(width, \" \").concat(height), width: \"\".concat(width, \"px\") },\n            React__namespace.createElement(\"rect\", { height: height - borderWidth, fill: \"none\", stroke: \"transparent\", strokeWidth: borderWidth || 1, x: borderWidth / 2, y: borderWidth / 2, width: width - borderWidth })),\n        props.slot.children)); }));\n};\n\nvar Squiggly = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--squiggly\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar Stamp = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--stamp\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar StrikeOut = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--strike-out\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar CommentIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M.5,16.5a1,1,0,0,0,1,1h2v4l4-4h15a1,1,0,0,0,1-1V3.5a1,1,0,0,0-1-1H1.5a1,1,0,0,0-1,1Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M7.25,9.75A.25.25,0,1,1,7,10a.25.25,0,0,1,.25-.25\" }),\n    React__namespace.createElement(\"path\", { d: \"M12,9.75a.25.25,0,1,1-.25.25A.25.25,0,0,1,12,9.75\" }),\n    React__namespace.createElement(\"path\", { d: \"M16.75,9.75a.25.25,0,1,1-.25.25.25.25,0,0,1,.25-.25\" }))); };\n\nvar HelpIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M0.500 12.001 A11.500 11.500 0 1 0 23.500 12.001 A11.500 11.500 0 1 0 0.500 12.001 Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M6.000 12.001 A6.000 6.000 0 1 0 18.000 12.001 A6.000 6.000 0 1 0 6.000 12.001 Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M21.423 5.406L17.415 9.414\" }),\n    React__namespace.createElement(\"path\", { d: \"M14.587 6.585L18.607 2.565\" }),\n    React__namespace.createElement(\"path\", { d: \"M5.405 21.424L9.413 17.416\" }),\n    React__namespace.createElement(\"path\", { d: \"M6.585 14.588L2.577 18.596\" }),\n    React__namespace.createElement(\"path\", { d: \"M18.602 21.419L14.595 17.412\" }),\n    React__namespace.createElement(\"path\", { d: \"M17.419 14.58L21.428 18.589\" }),\n    React__namespace.createElement(\"path\", { d: \"M2.582 5.399L6.588 9.406\" }),\n    React__namespace.createElement(\"path\", { d: \"M9.421 6.581L5.412 2.572\" }))); };\n\nvar KeyIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M4.000 18.500 A1.500 1.500 0 1 0 7.000 18.500 A1.500 1.500 0 1 0 4.000 18.500 Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M20.5.5l-9.782,9.783a7,7,0,1,0,3,3L17,10h1.5V8.5L19,8h1.5V6.5L21,6h1.5V4.5l1-1V.5Z\" }))); };\n\nvar NoteIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M2.000 2.500 L22.000 2.500 L22.000 23.500 L2.000 23.500 Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M6 4.5L6 0.5\" }),\n    React__namespace.createElement(\"path\", { d: \"M18 4.5L18 0.5\" }),\n    React__namespace.createElement(\"path\", { d: \"M10 4.5L10 0.5\" }),\n    React__namespace.createElement(\"path\", { d: \"M14 4.5L14 0.5\" }))); };\n\nvar ParagraphIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M17.5 0.498L17.5 23.498\" }),\n    React__namespace.createElement(\"path\", { d: \"M10.5 0.498L10.5 23.498\" }),\n    React__namespace.createElement(\"path\", { d: \"M23.5.5H6.5a6,6,0,0,0,0,12h4\" }))); };\n\nvar TriangleIcon = function () { return (React__namespace.createElement(Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M2.5 22.995L12 6.005 21.5 22.995 2.5 22.995z\" }))); };\n\nvar Text = function (_a) {\n    var annotation = _a.annotation, childAnnotation = _a.childAnnotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    var name = annotation.name ? annotation.name.toLowerCase() : '';\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: false, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(React__namespace.Fragment, null,\n        React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--text\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }),\n            name && (React__namespace.createElement(\"div\", { className: \"rpv-core__annotation-text-icon\" },\n                name === 'check' && React__namespace.createElement(CheckIcon, null),\n                name === 'comment' && React__namespace.createElement(CommentIcon, null),\n                name === 'help' && React__namespace.createElement(HelpIcon, null),\n                name === 'insert' && React__namespace.createElement(TriangleIcon, null),\n                name === 'key' && React__namespace.createElement(KeyIcon, null),\n                name === 'note' && React__namespace.createElement(NoteIcon, null),\n                (name === 'newparagraph' || name === 'paragraph') && React__namespace.createElement(ParagraphIcon, null))),\n            props.slot.children),\n        childAnnotation &&\n            childAnnotation.annotationType === exports.AnnotationType.Popup &&\n            props.popup.opened && React__namespace.createElement(Popup, { annotation: childAnnotation, page: page, viewport: viewport }))); }));\n};\n\nvar Underline = function (_a) {\n    var annotation = _a.annotation, page = _a.page, viewport = _a.viewport;\n    var hasPopup = annotation.hasPopup === false;\n    var isRenderable = !!(annotation.hasPopup || annotation.title || annotation.contents);\n    return (React__namespace.createElement(Annotation, { annotation: annotation, hasPopup: hasPopup, ignoreBorder: true, isRenderable: isRenderable, page: page, viewport: viewport }, function (props) { return (React__namespace.createElement(\"div\", __assign({}, props.slot.attrs, { className: \"rpv-core__annotation rpv-core__annotation--underline\", \"data-annotation-id\": annotation.id, onClick: props.popup.toggleOnClick, onMouseEnter: props.popup.openOnHover, onMouseLeave: props.popup.closeOnHover }), props.slot.children)); }));\n};\n\nvar AnnotationLayerBody = function (_a) {\n    var annotations = _a.annotations, doc = _a.doc, page = _a.page, pageIndex = _a.pageIndex, plugins = _a.plugins, rotation = _a.rotation, scale = _a.scale, onExecuteNamedAction = _a.onExecuteNamedAction, onJumpToDest = _a.onJumpToDest;\n    var containerRef = React__namespace.useRef();\n    var viewport = page.getViewport({ rotation: rotation, scale: scale });\n    var clonedViewPort = viewport.clone({ dontFlip: true });\n    var filterAnnotations = annotations.filter(function (annotation) { return !annotation.parentId; });\n    React__namespace.useEffect(function () {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        plugins.forEach(function (plugin) {\n            if (plugin.onAnnotationLayerRender) {\n                plugin.onAnnotationLayerRender({\n                    annotations: filterAnnotations,\n                    container: container,\n                    pageIndex: pageIndex,\n                    rotation: rotation,\n                    scale: scale,\n                });\n            }\n        });\n    }, []);\n    return (React__namespace.createElement(\"div\", { ref: containerRef, className: \"rpv-core__annotation-layer\", \"data-testid\": \"core__annotation-layer-\".concat(pageIndex) }, filterAnnotations.map(function (annotation) {\n        var childAnnotation = annotations.find(function (item) { return item.parentId === annotation.id; });\n        switch (annotation.annotationType) {\n            case exports.AnnotationType.Caret:\n                return (React__namespace.createElement(Caret, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Circle:\n                return (React__namespace.createElement(Circle, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.FileAttachment:\n                return (React__namespace.createElement(FileAttachment, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.FreeText:\n                return (React__namespace.createElement(FreeText, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Highlight:\n                return (React__namespace.createElement(Highlight, { key: annotation.id, annotation: annotation, childAnnotation: childAnnotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Ink:\n                return (React__namespace.createElement(Ink, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Line:\n                return (React__namespace.createElement(Line, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Link:\n                return (React__namespace.createElement(Link, { key: annotation.id, annotation: annotation, doc: doc, page: page, viewport: clonedViewPort, onExecuteNamedAction: onExecuteNamedAction, onJumpToDest: onJumpToDest }));\n            case exports.AnnotationType.Polygon:\n                return (React__namespace.createElement(Polygon, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Polyline:\n                return (React__namespace.createElement(Polyline, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Popup:\n                return (React__namespace.createElement(Popup, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Square:\n                return (React__namespace.createElement(Square, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Squiggly:\n                return (React__namespace.createElement(Squiggly, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Stamp:\n                return (React__namespace.createElement(Stamp, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.StrikeOut:\n                return (React__namespace.createElement(StrikeOut, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Text:\n                return (React__namespace.createElement(Text, { key: annotation.id, annotation: annotation, childAnnotation: childAnnotation, page: page, viewport: clonedViewPort }));\n            case exports.AnnotationType.Underline:\n                return (React__namespace.createElement(Underline, { key: annotation.id, annotation: annotation, page: page, viewport: clonedViewPort }));\n            default:\n                return React__namespace.createElement(React__namespace.Fragment, { key: annotation.id });\n        }\n    })));\n};\n\nvar AnnotationLoader = function (_a) {\n    var page = _a.page, renderAnnotations = _a.renderAnnotations;\n    var isMounted = useIsMounted();\n    var _b = React__namespace.useState({\n        loading: true,\n        annotations: [],\n    }), status = _b[0], setStatus = _b[1];\n    React__namespace.useEffect(function () {\n        page.getAnnotations({ intent: 'display' }).then(function (result) {\n            if (isMounted.current) {\n                setStatus({\n                    loading: false,\n                    annotations: result,\n                });\n            }\n        });\n    }, []);\n    return status.loading ? React__namespace.createElement(React__namespace.Fragment, null) : renderAnnotations(status.annotations);\n};\n\nvar AnnotationLayer = function (_a) {\n    var doc = _a.doc, page = _a.page, pageIndex = _a.pageIndex, plugins = _a.plugins, rotation = _a.rotation, scale = _a.scale, onExecuteNamedAction = _a.onExecuteNamedAction, onJumpToDest = _a.onJumpToDest;\n    var renderAnnotations = function (annotations) { return (React__namespace.createElement(AnnotationLayerBody, { annotations: annotations, doc: doc, page: page, pageIndex: pageIndex, plugins: plugins, rotation: rotation, scale: scale, onExecuteNamedAction: onExecuteNamedAction, onJumpToDest: onJumpToDest })); };\n    return React__namespace.createElement(AnnotationLoader, { page: page, renderAnnotations: renderAnnotations });\n};\n\nvar floatToRatio = function (x, limit) {\n    var _a, _b;\n    if (Math.floor(x) === x) {\n        return [x, 1];\n    }\n    var y = 1 / x;\n    if (y > limit) {\n        return [1, limit];\n    }\n    if (Math.floor(y) === y) {\n        return [1, y];\n    }\n    var value = x > 1 ? y : x;\n    var a = 0;\n    var b = 1;\n    var c = 1;\n    var d = 1;\n    while (true) {\n        var numerator = a + c;\n        var denominator = b + d;\n        if (denominator > limit) {\n            break;\n        }\n        value <= numerator / denominator ? (_a = [numerator, denominator], c = _a[0], d = _a[1], _a) : (_b = [numerator, denominator], a = _b[0], b = _b[1], _b);\n    }\n    var middle = (a / b + c / d) / 2;\n    return value < middle ? (value === x ? [a, b] : [b, a]) : value === x ? [c, d] : [d, c];\n};\n\nvar roundToDivide = function (a, b) {\n    var remainder = a % b;\n    return remainder === 0 ? a : Math.floor(a - remainder);\n};\n\nvar MAX_CANVAS_SIZE = 4096 * 4096;\nvar CanvasLayer = function (_a) {\n    var height = _a.height, page = _a.page, pageIndex = _a.pageIndex, plugins = _a.plugins, rotation = _a.rotation, scale = _a.scale, width = _a.width, onRenderCanvasCompleted = _a.onRenderCanvasCompleted;\n    var canvasRef = React__namespace.useRef();\n    var renderTask = React__namespace.useRef();\n    useIsomorphicLayoutEffect(function () {\n        var task = renderTask.current;\n        if (task) {\n            task.cancel();\n        }\n        var canvasEle = canvasRef.current;\n        plugins.forEach(function (plugin) {\n            if (plugin.onCanvasLayerRender) {\n                plugin.onCanvasLayerRender({\n                    ele: canvasEle,\n                    pageIndex: pageIndex,\n                    rotation: rotation,\n                    scale: scale,\n                    status: exports.LayerRenderStatus.PreRender,\n                });\n            }\n        });\n        var viewport = page.getViewport({\n            rotation: rotation,\n            scale: scale,\n        });\n        var outputScale = window.devicePixelRatio || 1;\n        var maxScale = Math.sqrt(MAX_CANVAS_SIZE / (viewport.width * viewport.height));\n        var shouldScaleByCSS = outputScale > maxScale;\n        shouldScaleByCSS ? (canvasEle.style.transform = \"scale(1, 1)\") : canvasEle.style.removeProperty('transform');\n        var possibleScale = Math.min(maxScale, outputScale);\n        var _a = floatToRatio(possibleScale, 8), x = _a[0], y = _a[1];\n        canvasEle.width = roundToDivide(viewport.width * possibleScale, x);\n        canvasEle.height = roundToDivide(viewport.height * possibleScale, x);\n        canvasEle.style.width = \"\".concat(roundToDivide(viewport.width, y), \"px\");\n        canvasEle.style.height = \"\".concat(roundToDivide(viewport.height, y), \"px\");\n        canvasEle.hidden = true;\n        var canvasContext = canvasEle.getContext('2d', { alpha: false });\n        var transform = shouldScaleByCSS || outputScale !== 1 ? [possibleScale, 0, 0, possibleScale, 0, 0] : null;\n        renderTask.current = page.render({ canvasContext: canvasContext, transform: transform, viewport: viewport });\n        renderTask.current.promise.then(function () {\n            canvasEle.hidden = false;\n            plugins.forEach(function (plugin) {\n                if (plugin.onCanvasLayerRender) {\n                    plugin.onCanvasLayerRender({\n                        ele: canvasEle,\n                        pageIndex: pageIndex,\n                        rotation: rotation,\n                        scale: scale,\n                        status: exports.LayerRenderStatus.DidRender,\n                    });\n                }\n            });\n            onRenderCanvasCompleted();\n        }, function () {\n            onRenderCanvasCompleted();\n        });\n        return function () {\n            if (canvasEle) {\n                canvasEle.width = 0;\n                canvasEle.height = 0;\n            }\n        };\n    }, []);\n    return (React__namespace.createElement(\"div\", { className: \"rpv-core__canvas-layer\", style: {\n            height: \"\".concat(height, \"px\"),\n            width: \"\".concat(width, \"px\"),\n        } },\n        React__namespace.createElement(\"canvas\", { ref: canvasRef })));\n};\n\nvar SvgLayer = function (_a) {\n    var height = _a.height, page = _a.page, rotation = _a.rotation, scale = _a.scale, width = _a.width;\n    var containerRef = React__namespace.useRef();\n    var empty = function () {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        containerEle.innerHTML = '';\n    };\n    useIsomorphicLayoutEffect(function () {\n        var containerEle = containerRef.current;\n        var viewport = page.getViewport({ rotation: rotation, scale: scale });\n        page.getOperatorList().then(function (operatorList) {\n            empty();\n            var graphic = new PdfJsApi__namespace.SVGGraphics(page.commonObjs, page.objs);\n            graphic.getSVG(operatorList, viewport).then(function (svg) {\n                svg.style.height = \"\".concat(height, \"px\");\n                svg.style.width = \"\".concat(width, \"px\");\n                containerEle.appendChild(svg);\n            });\n        });\n    }, []);\n    return React__namespace.createElement(\"div\", { className: \"rpv-core__svg-layer\", ref: containerRef });\n};\n\nvar TextLayer = function (_a) {\n    var page = _a.page, pageIndex = _a.pageIndex, plugins = _a.plugins, rotation = _a.rotation, scale = _a.scale, onRenderTextCompleted = _a.onRenderTextCompleted;\n    var containerRef = React__namespace.useRef();\n    var renderTask = React__namespace.useRef();\n    var empty = function () {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        var spans = [].slice.call(containerEle.querySelectorAll('.rpv-core__text-layer-text'));\n        spans.forEach(function (span) { return containerEle.removeChild(span); });\n        var breaks = [].slice.call(containerEle.querySelectorAll('br[role=\"presentation\"]'));\n        breaks.forEach(function (br) { return containerEle.removeChild(br); });\n    };\n    useIsomorphicLayoutEffect(function () {\n        var task = renderTask.current;\n        if (task) {\n            task.cancel();\n        }\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        containerEle.removeAttribute('data-testid');\n        var viewport = page.getViewport({ rotation: rotation, scale: scale });\n        plugins.forEach(function (plugin) {\n            if (plugin.onTextLayerRender) {\n                plugin.onTextLayerRender({\n                    ele: containerEle,\n                    pageIndex: pageIndex,\n                    scale: scale,\n                    status: exports.LayerRenderStatus.PreRender,\n                });\n            }\n        });\n        page.getTextContent().then(function (textContent) {\n            empty();\n            renderTask.current = PdfJsApi__namespace.renderTextLayer({\n                container: containerEle,\n                textContent: textContent,\n                viewport: viewport,\n                enhanceTextSelection: true,\n            });\n            renderTask.current.promise.then(function () {\n                containerEle.setAttribute('data-testid', \"core__text-layer-\".concat(pageIndex));\n                var spans = [].slice.call(containerEle.children);\n                spans.forEach(function (span) {\n                    if (!span.classList.contains('rpv-core__text-layer-text--not')) {\n                        span.classList.add('rpv-core__text-layer-text');\n                    }\n                });\n                plugins.forEach(function (plugin) {\n                    if (plugin.onTextLayerRender) {\n                        plugin.onTextLayerRender({\n                            ele: containerEle,\n                            pageIndex: pageIndex,\n                            scale: scale,\n                            status: exports.LayerRenderStatus.DidRender,\n                        });\n                    }\n                });\n                onRenderTextCompleted();\n            }, function () {\n                containerEle.removeAttribute('data-testid');\n                onRenderTextCompleted();\n            });\n        });\n        return function () {\n            var _a;\n            empty();\n            (_a = renderTask.current) === null || _a === void 0 ? void 0 : _a.cancel();\n        };\n    }, []);\n    return React__namespace.createElement(\"div\", { className: \"rpv-core__text-layer\", ref: containerRef });\n};\n\nvar PageLayer = function (_a) {\n    var doc = _a.doc, height = _a.height, measureRef = _a.measureRef, pageIndex = _a.pageIndex, pageRotation = _a.pageRotation, plugins = _a.plugins, renderPage = _a.renderPage, renderQueueKey = _a.renderQueueKey, rotation = _a.rotation, scale = _a.scale, shouldRender = _a.shouldRender, width = _a.width, onExecuteNamedAction = _a.onExecuteNamedAction, onJumpToDest = _a.onJumpToDest, onRenderCompleted = _a.onRenderCompleted, onRotatePage = _a.onRotatePage;\n    var isMounted = useIsMounted();\n    var _b = React__namespace.useState({\n        page: null,\n        pageHeight: height,\n        pageWidth: width,\n        viewportRotation: 0,\n    }), pageSize = _b[0], setPageSize = _b[1];\n    var _c = React__namespace.useState(false), canvasLayerRendered = _c[0], setCanvasLayerRendered = _c[1];\n    var _d = React__namespace.useState(false), textLayerRendered = _d[0], setTextLayerRendered = _d[1];\n    var page = pageSize.page, pageHeight = pageSize.pageHeight, pageWidth = pageSize.pageWidth;\n    var isVertical = Math.abs(rotation + pageRotation) % 180 === 0;\n    var scaledWidth = pageWidth * scale;\n    var scaledHeight = pageHeight * scale;\n    var w = isVertical ? scaledWidth : scaledHeight;\n    var h = isVertical ? scaledHeight : scaledWidth;\n    var rotationValue = (pageSize.viewportRotation + rotation + pageRotation) % 360;\n    var renderQueueKeyRef = React__namespace.useRef(0);\n    var determinePageSize = function () {\n        getPage(doc, pageIndex).then(function (pdfPage) {\n            var viewport = pdfPage.getViewport({ scale: 1 });\n            if (isMounted.current) {\n                renderQueueKeyRef.current = renderQueueKey;\n                setPageSize({\n                    page: pdfPage,\n                    pageHeight: viewport.height,\n                    pageWidth: viewport.width,\n                    viewportRotation: viewport.rotation,\n                });\n            }\n        });\n    };\n    var defaultPageRenderer = function (props) { return (React__namespace.createElement(React__namespace.Fragment, null,\n        props.canvasLayer.children,\n        props.textLayer.children,\n        props.annotationLayer.children)); };\n    var renderPageLayer = renderPage || defaultPageRenderer;\n    var handleRenderCanvasCompleted = function () {\n        if (isMounted.current) {\n            setCanvasLayerRendered(true);\n        }\n    };\n    var handleRenderTextCompleted = function () {\n        if (isMounted.current) {\n            setTextLayerRendered(true);\n        }\n    };\n    React__namespace.useEffect(function () {\n        setPageSize({\n            page: null,\n            pageHeight: height,\n            pageWidth: width,\n            viewportRotation: 0,\n        });\n        setCanvasLayerRendered(false);\n        setTextLayerRendered(false);\n    }, [pageRotation, rotation, scale]);\n    React__namespace.useEffect(function () {\n        if (shouldRender && isMounted.current && !page) {\n            determinePageSize();\n        }\n    }, [shouldRender, page]);\n    React__namespace.useEffect(function () {\n        if (canvasLayerRendered && textLayerRendered) {\n            if (renderQueueKey !== renderQueueKeyRef.current) {\n                setPageSize({\n                    page: null,\n                    pageHeight: height,\n                    pageWidth: width,\n                    viewportRotation: 0,\n                });\n                setCanvasLayerRendered(false);\n                setTextLayerRendered(false);\n            }\n            else {\n                onRenderCompleted(pageIndex);\n            }\n        }\n    }, [canvasLayerRendered, textLayerRendered]);\n    return (React__namespace.createElement(\"div\", { className: \"rpv-core__page-layer\", \"data-testid\": \"core__page-layer-\".concat(pageIndex), ref: measureRef, style: {\n            height: \"\".concat(h, \"px\"),\n            width: \"\".concat(w, \"px\"),\n        } }, !page ? (React__namespace.createElement(Spinner, { testId: \"core__page-layer-loading-\".concat(pageIndex) })) : (React__namespace.createElement(React__namespace.Fragment, null,\n        renderPageLayer({\n            annotationLayer: {\n                attrs: {},\n                children: (React__namespace.createElement(AnnotationLayer, { doc: doc, page: page, pageIndex: pageIndex, plugins: plugins, rotation: rotationValue, scale: scale, onExecuteNamedAction: onExecuteNamedAction, onJumpToDest: onJumpToDest })),\n            },\n            canvasLayer: {\n                attrs: {},\n                children: (React__namespace.createElement(CanvasLayer, { height: h, page: page, pageIndex: pageIndex, plugins: plugins, rotation: rotationValue, scale: scale, width: w, onRenderCanvasCompleted: handleRenderCanvasCompleted })),\n            },\n            canvasLayerRendered: canvasLayerRendered,\n            doc: doc,\n            height: h,\n            pageIndex: pageIndex,\n            rotation: rotationValue,\n            scale: scale,\n            svgLayer: {\n                attrs: {},\n                children: (React__namespace.createElement(SvgLayer, { height: h, page: page, rotation: rotationValue, scale: scale, width: w })),\n            },\n            textLayer: {\n                attrs: {},\n                children: (React__namespace.createElement(TextLayer, { page: page, pageIndex: pageIndex, plugins: plugins, rotation: rotationValue, scale: scale, onRenderTextCompleted: handleRenderTextCompleted })),\n            },\n            textLayerRendered: textLayerRendered,\n            width: w,\n            markRendered: onRenderCompleted,\n            onRotatePage: function (direction) { return onRotatePage(pageIndex, direction); },\n        }),\n        plugins.map(function (plugin, idx) {\n            return plugin.renderPageLayer ? (React__namespace.createElement(React__namespace.Fragment, { key: idx }, plugin.renderPageLayer({\n                doc: doc,\n                height: h,\n                pageIndex: pageIndex,\n                rotation: rotationValue,\n                scale: scale,\n                width: w,\n            }))) : (React__namespace.createElement(React__namespace.Fragment, { key: idx }));\n        })))));\n};\n\nvar getFileExt = function (url) {\n    var str = url.split(/\\./).pop();\n    return str ? str.toLowerCase() : '';\n};\n\nvar SCROLL_BAR_WIDTH = 17;\nvar PAGE_PADDING = 8;\nvar calculateScale = function (container, pageHeight, pageWidth, scale) {\n    switch (scale) {\n        case exports.SpecialZoomLevel.ActualSize:\n            return 1;\n        case exports.SpecialZoomLevel.PageFit:\n            return Math.min((container.clientWidth - SCROLL_BAR_WIDTH) / pageWidth, (container.clientHeight - 2 * PAGE_PADDING) / pageHeight);\n        case exports.SpecialZoomLevel.PageWidth:\n            return (container.clientWidth - SCROLL_BAR_WIDTH) / pageWidth;\n    }\n};\n\nvar NUM_OVERSCAN_PAGES = 3;\nvar Inner = function (_a) {\n    var currentFile = _a.currentFile, defaultScale = _a.defaultScale, doc = _a.doc, initialPage = _a.initialPage, pageSize = _a.pageSize, plugins = _a.plugins, renderPage = _a.renderPage, scrollMode = _a.scrollMode, viewerState = _a.viewerState, onDocumentLoad = _a.onDocumentLoad, onOpenFile = _a.onOpenFile, onPageChange = _a.onPageChange, onRotate = _a.onRotate, onRotatePage = _a.onRotatePage, onZoom = _a.onZoom;\n    var numPages = doc.numPages;\n    var docId = doc.loadingTask.docId;\n    var l10n = React__namespace.useContext(LocalizationContext).l10n;\n    var themeContext = React__namespace.useContext(ThemeContext);\n    var isRtl = themeContext.direction === exports.TextDirection.RightToLeft;\n    var containerRef = React__namespace.useRef();\n    var pagesRef = React__namespace.useRef();\n    var _b = React__namespace.useState(initialPage), currentPage = _b[0], setCurrentPage = _b[1];\n    var _c = React__namespace.useState(0), rotation = _c[0], setRotation = _c[1];\n    var _d = React__namespace.useState(false), pagesRotationChanged = _d[0], setPagesRotationChanged = _d[1];\n    var _e = React__namespace.useState(new Map()), pagesRotation = _e[0], setPagesRotation = _e[1];\n    var _f = React__namespace.useState(scrollMode), currentScrollMode = _f[0], setCurrentScrollMode = _f[1];\n    var previousScrollMode = usePrevious(currentScrollMode);\n    var _g = React__namespace.useState(pageSize.scale), scale = _g[0], setScale = _g[1];\n    var stateRef = React__namespace.useRef(viewerState);\n    var keepSpecialZoomLevelRef = React__namespace.useRef(typeof defaultScale === 'string' ? defaultScale : null);\n    var _h = React__namespace.useState(-1), renderPageIndex = _h[0], setRenderPageIndex = _h[1];\n    var _j = React__namespace.useState(0), renderQueueKey = _j[0], setRenderQueueKey = _j[1];\n    var renderQueue = useRenderQueue({ doc: doc });\n    React__namespace.useEffect(function () {\n        return function () {\n            clearPagesCache();\n        };\n    }, [docId]);\n    var estimateSize = React__namespace.useCallback(function () {\n        var sizes = [pageSize.pageHeight, pageSize.pageWidth];\n        var rect = Math.abs(rotation) % 180 === 0\n            ? {\n                height: sizes[0],\n                width: sizes[1],\n            }\n            : {\n                height: sizes[1],\n                width: sizes[0],\n            };\n        return {\n            height: rect.height * scale,\n            width: rect.width * scale,\n        };\n    }, [rotation, scale]);\n    var setStartRange = React__namespace.useCallback(function (startIndex) { return Math.max(startIndex - NUM_OVERSCAN_PAGES, 0); }, []);\n    var setEndRange = React__namespace.useCallback(function (endIndex) { return Math.min(endIndex + NUM_OVERSCAN_PAGES, numPages - 1); }, [numPages]);\n    var transformSize = React__namespace.useCallback(function (size) { return size; }, []);\n    var virtualizer = useVirtual({\n        estimateSize: estimateSize,\n        isRtl: isRtl,\n        numberOfItems: numPages,\n        parentRef: pagesRef,\n        scrollMode: currentScrollMode,\n        setStartRange: setStartRange,\n        setEndRange: setEndRange,\n        transformSize: transformSize,\n    });\n    var handlePagesResize = useDebounceCallback(function (_) {\n        if (keepSpecialZoomLevelRef.current) {\n            setRenderPageIndex(-1);\n            zoom(keepSpecialZoomLevelRef.current);\n        }\n    }, 200);\n    useTrackResize({\n        targetRef: pagesRef,\n        onResize: handlePagesResize,\n    });\n    var pageWidth = pageSize.pageWidth, pageHeight = pageSize.pageHeight;\n    var setViewerState = function (viewerState) {\n        var newState = viewerState;\n        plugins.forEach(function (plugin) {\n            if (plugin.onViewerStateChange) {\n                newState = plugin.onViewerStateChange(newState);\n            }\n        });\n        stateRef.current = newState;\n    };\n    var getPagesContainer = function () { return pagesRef.current; };\n    var getViewerState = function () { return stateRef.current; };\n    var jumpToDestination = React__namespace.useCallback(function (pageIndex, bottomOffset, leftOffset, scaleTo) {\n        var pagesContainer = pagesRef.current;\n        var currentState = stateRef.current;\n        if (!pagesContainer || !currentState) {\n            return;\n        }\n        getPage(doc, pageIndex).then(function (page) {\n            var viewport = page.getViewport({ scale: 1 });\n            var top = 0;\n            var bottom = (typeof bottomOffset === 'function'\n                ? bottomOffset(viewport.width, viewport.height)\n                : bottomOffset) || 0;\n            var left = (typeof leftOffset === 'function' ? leftOffset(viewport.width, viewport.height) : leftOffset) || 0;\n            var updateScale = currentState.scale;\n            switch (scaleTo) {\n                case exports.SpecialZoomLevel.PageFit:\n                    top = 0;\n                    left = 0;\n                    zoom(exports.SpecialZoomLevel.PageFit);\n                    break;\n                case exports.SpecialZoomLevel.PageWidth:\n                    updateScale = calculateScale(pagesContainer, pageHeight, pageWidth, exports.SpecialZoomLevel.PageWidth);\n                    top = (viewport.height - bottom) * updateScale;\n                    left = left * updateScale;\n                    zoom(updateScale);\n                    break;\n                default:\n                    var boundingRect = viewport.convertToViewportPoint(left, bottom);\n                    left = Math.max(boundingRect[0] * currentState.scale, 0);\n                    top = Math.max(boundingRect[1] * currentState.scale, 0);\n                    break;\n            }\n            switch (currentState.scrollMode) {\n                case exports.ScrollMode.Horizontal:\n                    virtualizer.scrollToItem(pageIndex, { left: left, top: 0 });\n                    break;\n                case exports.ScrollMode.Vertical:\n                default:\n                    virtualizer.scrollToItem(pageIndex, { left: 0, top: top });\n                    break;\n            }\n        });\n    }, []);\n    var jumpToPage = React__namespace.useCallback(function (pageIndex) {\n        if (0 <= pageIndex && pageIndex < numPages) {\n            virtualizer.scrollToItem(pageIndex, { left: 0, top: 0 });\n        }\n    }, []);\n    var openFile = React__namespace.useCallback(function (file) {\n        if (getFileExt(file.name).toLowerCase() !== 'pdf') {\n            return;\n        }\n        new Promise(function (resolve) {\n            var reader = new FileReader();\n            reader.readAsArrayBuffer(file);\n            reader.onload = function () {\n                var bytes = new Uint8Array(reader.result);\n                resolve(bytes);\n            };\n        }).then(function (data) {\n            onOpenFile(file.name, data);\n        });\n    }, [onOpenFile]);\n    var rotate = React__namespace.useCallback(function (direction) {\n        var degrees = direction === exports.RotateDirection.Backward ? -90 : 90;\n        var currentRotation = stateRef.current.rotation;\n        var updateRotation = currentRotation === 360 || currentRotation === -360 ? degrees : currentRotation + degrees;\n        renderQueue.markNotRendered();\n        setRotation(updateRotation);\n        setViewerState(__assign(__assign({}, stateRef.current), { rotation: updateRotation }));\n        onRotate({ direction: direction, doc: doc, rotation: updateRotation });\n    }, []);\n    var rotatePage = React__namespace.useCallback(function (pageIndex, direction) {\n        var degrees = direction === exports.RotateDirection.Backward ? -90 : 90;\n        var rotations = stateRef.current.pagesRotation;\n        var currentPageRotation = rotations.has(pageIndex) ? rotations.get(pageIndex) : 0;\n        var finalRotation = currentPageRotation + degrees;\n        var updateRotations = rotations.set(pageIndex, finalRotation);\n        setPagesRotation(updateRotations);\n        setPagesRotationChanged(function (value) { return !value; });\n        setViewerState(__assign(__assign({}, stateRef.current), { pagesRotation: updateRotations, rotatedPage: pageIndex }));\n        onRotatePage({ direction: direction, doc: doc, pageIndex: pageIndex, rotation: finalRotation });\n        renderQueue.markRendering(pageIndex);\n        setRenderPageIndex(pageIndex);\n    }, []);\n    var switchScrollMode = React__namespace.useCallback(function (scrollMode) {\n        setViewerState(__assign(__assign({}, stateRef.current), { scrollMode: scrollMode }));\n        setCurrentScrollMode(scrollMode);\n    }, []);\n    var zoom = React__namespace.useCallback(function (newScale) {\n        var pagesEle = pagesRef.current;\n        var updateScale = pagesEle\n            ? typeof newScale === 'string'\n                ? calculateScale(pagesEle, pageHeight, pageWidth, newScale)\n                : newScale\n            : 1;\n        keepSpecialZoomLevelRef.current = typeof newScale === 'string' ? newScale : null;\n        if (updateScale === stateRef.current.scale) {\n            return;\n        }\n        virtualizer.zoom(updateScale / stateRef.current.scale);\n        setRenderQueueKey(function (key) { return key + 1; });\n        renderQueue.markNotRendered();\n        setScale(updateScale);\n        onZoom({ doc: doc, scale: updateScale });\n        setViewerState(__assign(__assign({}, stateRef.current), { scale: updateScale }));\n    }, []);\n    React__namespace.useEffect(function () {\n        var pluginMethods = {\n            getPagesContainer: getPagesContainer,\n            getViewerState: getViewerState,\n            jumpToDestination: jumpToDestination,\n            jumpToPage: jumpToPage,\n            openFile: openFile,\n            rotate: rotate,\n            rotatePage: rotatePage,\n            setViewerState: setViewerState,\n            switchScrollMode: switchScrollMode,\n            zoom: zoom,\n        };\n        plugins.forEach(function (plugin) {\n            if (plugin.install) {\n                plugin.install(pluginMethods);\n            }\n        });\n        return function () {\n            plugins.forEach(function (plugin) {\n                if (plugin.uninstall) {\n                    plugin.uninstall(pluginMethods);\n                }\n            });\n        };\n    }, [docId]);\n    React__namespace.useEffect(function () {\n        onDocumentLoad({ doc: doc, file: currentFile });\n        plugins.forEach(function (plugin) {\n            plugin.onDocumentLoad && plugin.onDocumentLoad({ doc: doc, file: currentFile });\n        });\n        if (initialPage) {\n            jumpToPage(initialPage);\n        }\n    }, [docId]);\n    useIsomorphicLayoutEffect(function () {\n        var latestPage = stateRef.current.pageIndex;\n        if (latestPage > -1 && previousScrollMode !== currentScrollMode) {\n            virtualizer.scrollToItem(latestPage, { left: 0, top: 0 });\n        }\n    }, [currentScrollMode]);\n    React__namespace.useEffect(function () {\n        var isSmoothScrolling = virtualizer.isSmoothScrolling;\n        if (isSmoothScrolling) {\n            return;\n        }\n        if ((stateRef.current.pageIndex === -1 && currentPage === initialPage) ||\n            (currentPage === stateRef.current.pageIndex && currentPage !== initialPage)) {\n            onPageChange({ currentPage: currentPage, doc: doc });\n        }\n    }, [currentPage, virtualizer.isSmoothScrolling]);\n    React__namespace.useEffect(function () {\n        var startRange = virtualizer.startRange, endRange = virtualizer.endRange, maxVisbilityIndex = virtualizer.maxVisbilityIndex, virtualItems = virtualizer.virtualItems;\n        var currentPage = maxVisbilityIndex;\n        setCurrentPage(currentPage);\n        setViewerState(__assign(__assign({}, stateRef.current), { pageIndex: currentPage }));\n        renderQueue.setRange(startRange, endRange);\n        var _loop_1 = function (i) {\n            var item = virtualItems.find(function (item) { return item.index === i; });\n            if (item) {\n                renderQueue.setVisibility(i, item.visibility);\n            }\n        };\n        for (var i = startRange; i <= endRange; i++) {\n            _loop_1(i);\n        }\n        renderNextPage();\n    }, [\n        virtualizer.startRange,\n        virtualizer.endRange,\n        virtualizer.maxVisbilityIndex,\n        pagesRotationChanged,\n        rotation,\n        scale,\n    ]);\n    var handlePageRenderCompleted = React__namespace.useCallback(function (pageIndex) {\n        renderQueue.markRendered(pageIndex);\n        renderNextPage();\n    }, [renderQueueKey]);\n    var renderNextPage = function () {\n        var nextPage = renderQueue.getHighestPriorityPage();\n        if (nextPage > -1 && renderQueue.isInRange(nextPage)) {\n            renderQueue.markRendering(nextPage);\n            setRenderPageIndex(nextPage);\n        }\n    };\n    var executeNamedAction = function (action) {\n        var previousPage = currentPage - 1;\n        var nextPage = currentPage + 1;\n        switch (action) {\n            case 'FirstPage':\n                jumpToPage(0);\n                break;\n            case 'LastPage':\n                jumpToPage(numPages - 1);\n                break;\n            case 'NextPage':\n                nextPage < numPages && jumpToPage(nextPage);\n                break;\n            case 'PrevPage':\n                previousPage >= 0 && jumpToPage(previousPage);\n                break;\n        }\n    };\n    var renderViewer = React__namespace.useCallback(function () {\n        var pageLabel = l10n && l10n.core ? l10n.core.pageLabel : 'Page {{pageIndex}}';\n        var slot = {\n            attrs: {\n                'data-testid': 'core__inner-container',\n                ref: containerRef,\n                style: {\n                    height: '100%',\n                },\n            },\n            children: React__namespace.createElement(React__namespace.Fragment, null),\n            subSlot: {\n                attrs: {\n                    'data-testid': 'core__inner-pages',\n                    className: classNames({\n                        'rpv-core__inner-pages': true,\n                        'rpv-core__inner-pages--horizontal': currentScrollMode === exports.ScrollMode.Horizontal,\n                        'rpv-core__inner-pages--rtl': isRtl,\n                        'rpv-core__inner-pages--vertical': currentScrollMode === exports.ScrollMode.Vertical,\n                        'rpv-core__inner-pages--wrapped': currentScrollMode === exports.ScrollMode.Wrapped,\n                    }),\n                    ref: pagesRef,\n                    style: {\n                        height: '100%',\n                        overflow: 'auto',\n                        position: 'relative',\n                    },\n                },\n                children: (React__namespace.createElement(\"div\", { style: virtualizer.getContainerStyles() }, virtualizer.virtualItems.map(function (item) { return (React__namespace.createElement(\"div\", { \"aria-label\": pageLabel.replace('{{pageIndex}}', \"\".concat(item.index + 1)), className: \"rpv-core__inner-page\", key: item.index, role: \"region\", style: virtualizer.getItemStyles(item) },\n                    React__namespace.createElement(PageLayer, { doc: doc, height: pageHeight, measureRef: item.measureRef, pageIndex: item.index, pageRotation: pagesRotation.has(item.index) ? pagesRotation.get(item.index) : 0, plugins: plugins, renderPage: renderPage, renderQueueKey: renderQueueKey, rotation: rotation, scale: scale, shouldRender: renderPageIndex === item.index, width: pageWidth, onExecuteNamedAction: executeNamedAction, onJumpToDest: jumpToDestination, onRenderCompleted: handlePageRenderCompleted, onRotatePage: rotatePage }))); }))),\n            },\n        };\n        plugins.forEach(function (plugin) {\n            if (plugin.renderViewer) {\n                slot = plugin.renderViewer({\n                    containerRef: containerRef,\n                    doc: doc,\n                    pageHeight: pageHeight,\n                    pageWidth: pageWidth,\n                    pagesRotation: pagesRotation,\n                    rotation: rotation,\n                    slot: slot,\n                    themeContext: themeContext,\n                    jumpToPage: jumpToPage,\n                    openFile: openFile,\n                    rotate: rotate,\n                    rotatePage: rotatePage,\n                    switchScrollMode: switchScrollMode,\n                    zoom: zoom,\n                });\n            }\n        });\n        return slot;\n    }, [plugins, virtualizer]);\n    var renderSlot = React__namespace.useCallback(function (slot) { return (React__namespace.createElement(\"div\", __assign({}, slot.attrs, { style: slot.attrs && slot.attrs.style ? slot.attrs.style : {} }),\n        slot.children,\n        slot.subSlot && renderSlot(slot.subSlot))); }, []);\n    return renderSlot(renderViewer());\n};\n\nvar LEVELS = [\n    0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.3, 1.5, 1.7, 1.9, 2.1, 2.4, 2.7, 3.0, 3.3, 3.7, 4.1, 4.6,\n    5.1, 5.7, 6.3, 7.0, 7.7, 8.5, 9.4, 10,\n];\nvar decrease = function (currentLevel) {\n    var found = LEVELS.findIndex(function (item) { return item >= currentLevel; });\n    return found === -1 || found === 0 ? currentLevel : LEVELS[found - 1];\n};\n\nvar RESERVE_HEIGHT = 45;\nvar RESERVE_WIDTH = 45;\nvar PageSizeCalculator = function (_a) {\n    var defaultScale = _a.defaultScale, doc = _a.doc, render = _a.render, scrollMode = _a.scrollMode;\n    var pagesRef = React__namespace.useRef();\n    var _b = React__namespace.useState({\n        pageHeight: 0,\n        pageWidth: 0,\n        scale: 1,\n    }), pageSize = _b[0], setPageSize = _b[1];\n    React__namespace.useLayoutEffect(function () {\n        getPage(doc, 0).then(function (pdfPage) {\n            var viewport = pdfPage.getViewport({ scale: 1 });\n            var w = viewport.width;\n            var h = viewport.height;\n            var pagesEle = pagesRef.current;\n            if (!pagesEle) {\n                return;\n            }\n            var parentEle = pagesEle.parentElement;\n            var scaleWidth = (parentEle.clientWidth - RESERVE_WIDTH) / w;\n            var scaleHeight = (parentEle.clientHeight - RESERVE_HEIGHT) / h;\n            var scaled = scaleWidth;\n            switch (scrollMode) {\n                case exports.ScrollMode.Horizontal:\n                    scaled = Math.min(scaleWidth, scaleHeight);\n                    break;\n                case exports.ScrollMode.Vertical:\n                default:\n                    scaled = scaleWidth;\n                    break;\n            }\n            var scale = defaultScale\n                ? typeof defaultScale === 'string'\n                    ? calculateScale(parentEle, h, w, defaultScale)\n                    : defaultScale\n                : decrease(scaled);\n            setPageSize({\n                pageHeight: h,\n                pageWidth: w,\n                scale: scale,\n            });\n        });\n    }, [doc]);\n    var pageWidth = pageSize.pageWidth;\n    return pageWidth === 0 ? (React__namespace.createElement(\"div\", { className: \"rpv-core__page-size-calculator\", \"data-testid\": \"core__page-size-calculating\", ref: pagesRef },\n        React__namespace.createElement(Spinner, null))) : (render(pageSize));\n};\n\nvar LoadingStatus = (function () {\n    function LoadingStatus() {\n    }\n    return LoadingStatus;\n}());\n\nvar SubmitPassword;\n(function (SubmitPassword) {\n    SubmitPassword[SubmitPassword[\"REQUIRE_PASSWORD\"] = 0] = \"REQUIRE_PASSWORD\";\n    SubmitPassword[SubmitPassword[\"WRONG_PASSWORD\"] = 1] = \"WRONG_PASSWORD\";\n})(SubmitPassword || (SubmitPassword = {}));\nvar AskForPasswordState = (function (_super) {\n    __extends(AskForPasswordState, _super);\n    function AskForPasswordState(verifyPassword, submitPassword) {\n        var _this = _super.call(this) || this;\n        _this.verifyPassword = verifyPassword;\n        _this.submitPassword = submitPassword;\n        return _this;\n    }\n    return AskForPasswordState;\n}(LoadingStatus));\n\nvar AskingPassword = function (_a) {\n    var submitPassword = _a.submitPassword, verifyPassword = _a.verifyPassword, onDocumentAskPassword = _a.onDocumentAskPassword;\n    var l10n = React__namespace.useContext(LocalizationContext).l10n;\n    var _b = React__namespace.useState(''), password = _b[0], setPassword = _b[1];\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var submit = function () { return verifyPassword(password); };\n    var handleKeyDown = function (e) {\n        if (e.key === 'Enter') {\n            submit();\n        }\n    };\n    React__namespace.useEffect(function () {\n        if (onDocumentAskPassword) {\n            onDocumentAskPassword({\n                verifyPassword: verifyPassword,\n            });\n        }\n    }, []);\n    return (React__namespace.createElement(\"div\", { className: \"rpv-core__asking-password-wrapper\" },\n        React__namespace.createElement(\"div\", { className: classNames({\n                'rpv-core__asking-password': true,\n                'rpv-core__asking-password--rtl': isRtl,\n            }) },\n            React__namespace.createElement(\"div\", { className: \"rpv-core__asking-password-message\" },\n                submitPassword === SubmitPassword.REQUIRE_PASSWORD &&\n                    l10n.core.askingPassword\n                        .requirePasswordToOpen,\n                submitPassword === SubmitPassword.WRONG_PASSWORD &&\n                    l10n.core.wrongPassword.tryAgain),\n            React__namespace.createElement(\"div\", { className: \"rpv-core__asking-password-body\" },\n                React__namespace.createElement(\"div\", { className: classNames({\n                        'rpv-core__asking-password-input': true,\n                        'rpv-core__asking-password-input--ltr': !isRtl,\n                        'rpv-core__asking-password-input--rtl': isRtl,\n                    }) },\n                    React__namespace.createElement(TextBox, { testId: \"core__asking-password-input\", type: \"password\", value: password, onChange: setPassword, onKeyDown: handleKeyDown })),\n                React__namespace.createElement(PrimaryButton, { onClick: submit }, l10n.core.askingPassword.submit)))));\n};\n\nvar CompletedState = (function (_super) {\n    __extends(CompletedState, _super);\n    function CompletedState(doc) {\n        var _this = _super.call(this) || this;\n        _this.doc = doc;\n        return _this;\n    }\n    return CompletedState;\n}(LoadingStatus));\n\nvar FailureState = (function (_super) {\n    __extends(FailureState, _super);\n    function FailureState(error) {\n        var _this = _super.call(this) || this;\n        _this.error = error;\n        return _this;\n    }\n    return FailureState;\n}(LoadingStatus));\n\nvar LoadingState = (function (_super) {\n    __extends(LoadingState, _super);\n    function LoadingState(percentages) {\n        var _this = _super.call(this) || this;\n        _this.percentages = percentages;\n        return _this;\n    }\n    return LoadingState;\n}(LoadingStatus));\n\nvar DocumentLoader = function (_a) {\n    var characterMap = _a.characterMap, file = _a.file, httpHeaders = _a.httpHeaders, render = _a.render, renderError = _a.renderError, renderLoader = _a.renderLoader, transformGetDocumentParams = _a.transformGetDocumentParams, withCredentials = _a.withCredentials, onDocumentAskPassword = _a.onDocumentAskPassword;\n    var direction = React__namespace.useContext(ThemeContext).direction;\n    var isRtl = direction === exports.TextDirection.RightToLeft;\n    var _b = React__namespace.useState(new LoadingState(0)), status = _b[0], setStatus = _b[1];\n    var _c = React__namespace.useState(0); _c[0]; _c[1];\n    var docRef = React__namespace.useRef('');\n    var _d = React__namespace.useState(null); _d[0]; _d[1];\n    var isMounted = useIsMounted();\n    React__namespace.useEffect(function () {\n        docRef.current = '';\n        setStatus(new LoadingState(0));\n        var worker = new PdfJsApi__namespace.PDFWorker({ name: \"PDFWorker_\".concat(Date.now()) });\n        var params = Object.assign({\n            httpHeaders: httpHeaders,\n            withCredentials: withCredentials,\n            worker: worker,\n        }, 'string' === typeof file ? { url: file } : { data: file }, characterMap\n            ? {\n                cMapUrl: characterMap.url,\n                cMapPacked: characterMap.isCompressed,\n            }\n            : {});\n        var transformParams = transformGetDocumentParams ? transformGetDocumentParams(params) : params;\n        var loadingTask = PdfJsApi__namespace.getDocument(transformParams);\n        loadingTask.onPassword = function (verifyPassword, reason) {\n            switch (reason) {\n                case PdfJsApi__namespace.PasswordResponses.NEED_PASSWORD:\n                    isMounted.current &&\n                        setStatus(new AskForPasswordState(verifyPassword, SubmitPassword.REQUIRE_PASSWORD));\n                    break;\n                case PdfJsApi__namespace.PasswordResponses.INCORRECT_PASSWORD:\n                    isMounted.current &&\n                        setStatus(new AskForPasswordState(verifyPassword, SubmitPassword.WRONG_PASSWORD));\n                    break;\n            }\n        };\n        loadingTask.onProgress = function (progress) {\n            var loaded = progress.total > 0\n                ?\n                    Math.min(100, (100 * progress.loaded) / progress.total)\n                : 100;\n            if (isMounted.current && docRef.current === '') {\n                setStatus(new LoadingState(loaded));\n            }\n        };\n        loadingTask.promise.then(function (doc) {\n            docRef.current = doc.loadingTask.docId;\n            isMounted.current && setStatus(new CompletedState(doc));\n        }, function (err) {\n            return isMounted.current &&\n                !worker.destroyed &&\n                setStatus(new FailureState({\n                    message: err.message || 'Cannot load document',\n                    name: err.name,\n                }));\n        });\n        return function () {\n            loadingTask.destroy();\n            worker.destroy();\n        };\n    }, [file]);\n    if (status instanceof AskForPasswordState) {\n        return (React__namespace.createElement(AskingPassword, { submitPassword: status.submitPassword, verifyPassword: status.verifyPassword, onDocumentAskPassword: onDocumentAskPassword }));\n    }\n    if (status instanceof CompletedState) {\n        return render(status.doc);\n    }\n    if (status instanceof FailureState) {\n        return renderError ? (renderError(status.error)) : (React__namespace.createElement(\"div\", { className: classNames({\n                'rpv-core__doc-error': true,\n                'rpv-core__doc-error--rtl': isRtl,\n            }) },\n            React__namespace.createElement(\"div\", { className: \"rpv-core__doc-error-text\" }, status.error.message)));\n    }\n    return (React__namespace.createElement(\"div\", { \"data-testid\": \"core__doc-loading\", className: classNames({\n            'rpv-core__doc-loading': true,\n            'rpv-core__doc-loading--rtl': isRtl,\n        }) }, renderLoader ? renderLoader(status.percentages) : React__namespace.createElement(Spinner, null)));\n};\n\nvar isDarkMode = function () {\n    return typeof window !== 'undefined' && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n};\n\nvar withTheme = function (theme, onSwitchTheme) {\n    var initialTheme = React__namespace.useMemo(function () { return (theme === 'auto' ? (isDarkMode() ? 'dark' : 'light') : theme); }, []);\n    var _a = React__namespace.useState(initialTheme), currentTheme = _a[0], setCurrentTheme = _a[1];\n    var prevTheme = usePrevious(currentTheme);\n    React__namespace.useEffect(function () {\n        if (theme !== 'auto') {\n            return;\n        }\n        var media = window.matchMedia('(prefers-color-scheme: dark)');\n        var handler = function (e) {\n            setCurrentTheme(e.matches ? 'dark' : 'light');\n        };\n        media.addEventListener('change', handler);\n        return function () { return media.removeEventListener('change', handler); };\n    }, []);\n    React__namespace.useEffect(function () {\n        if (currentTheme !== prevTheme && onSwitchTheme) {\n            onSwitchTheme(currentTheme);\n        }\n    }, [currentTheme]);\n    React__namespace.useEffect(function () {\n        if (theme !== currentTheme) {\n            setCurrentTheme(theme);\n        }\n    }, [theme]);\n    return {\n        currentTheme: currentTheme,\n        setCurrentTheme: setCurrentTheme,\n    };\n};\n\nvar isSameUrl = function (a, b) {\n    var typeA = typeof a;\n    var typeB = typeof b;\n    if (typeA === 'string' && typeB === 'string' && a === b) {\n        return true;\n    }\n    if (typeA === 'object' && typeB === 'object') {\n        return a.length === b.length && a.every(function (v, i) { return v === b[i]; });\n    }\n    return false;\n};\n\nvar Viewer = function (_a) {\n    var characterMap = _a.characterMap, defaultScale = _a.defaultScale, fileUrl = _a.fileUrl, _b = _a.httpHeaders, httpHeaders = _b === void 0 ? {} : _b, _c = _a.initialPage, initialPage = _c === void 0 ? 0 : _c, localization = _a.localization, _d = _a.plugins, plugins = _d === void 0 ? [] : _d, renderError = _a.renderError, renderPage = _a.renderPage, renderLoader = _a.renderLoader, _e = _a.scrollMode, scrollMode = _e === void 0 ? exports.ScrollMode.Vertical : _e, transformGetDocumentParams = _a.transformGetDocumentParams, _f = _a.theme, theme = _f === void 0 ? {\n        direction: exports.TextDirection.LeftToRight,\n        theme: 'light',\n    } : _f, _g = _a.withCredentials, withCredentials = _g === void 0 ? false : _g, onDocumentAskPassword = _a.onDocumentAskPassword, _h = _a.onDocumentLoad, onDocumentLoad = _h === void 0 ? function () {\n    } : _h, _j = _a.onPageChange, onPageChange = _j === void 0 ? function () {\n    } : _j, _k = _a.onRotate, onRotate = _k === void 0 ? function () {\n    } : _k, _l = _a.onRotatePage, onRotatePage = _l === void 0 ? function () {\n    } : _l, _m = _a.onSwitchTheme, onSwitchTheme = _m === void 0 ? function () {\n    } : _m, _o = _a.onZoom, onZoom = _o === void 0 ? function () {\n    } : _o;\n    var _p = React__namespace.useState({\n        data: fileUrl,\n        name: typeof fileUrl === 'string' ? fileUrl : '',\n        shouldLoad: false,\n    }), file = _p[0], setFile = _p[1];\n    var openFile = function (fileName, data) {\n        setFile({\n            data: data,\n            name: fileName,\n            shouldLoad: true,\n        });\n    };\n    var _q = React__namespace.useState(false), visible = _q[0], setVisible = _q[1];\n    var prevFile = usePrevious(file);\n    React__namespace.useEffect(function () {\n        if (!isSameUrl(prevFile.data, fileUrl)) {\n            setFile({\n                data: fileUrl,\n                name: typeof fileUrl === 'string' ? fileUrl : '',\n                shouldLoad: visible,\n            });\n        }\n    }, [fileUrl, visible]);\n    var visibilityChanged = function (params) {\n        setVisible(params.isVisible);\n        if (params.isVisible) {\n            setFile(function (currentFile) { return Object.assign({}, currentFile, { shouldLoad: true }); });\n        }\n    };\n    var containerRef = useIntersectionObserver({\n        onVisibilityChanged: visibilityChanged,\n    });\n    var themeProps = typeof theme === 'string' ? { direction: exports.TextDirection.LeftToRight, theme: theme } : theme;\n    var _r = React__namespace.useState(localization || DefaultLocalization), l10n = _r[0], setL10n = _r[1];\n    var localizationContext = { l10n: l10n, setL10n: setL10n };\n    var themeContext = Object.assign({}, { direction: themeProps.direction }, withTheme(themeProps.theme || 'light', onSwitchTheme));\n    React__namespace.useEffect(function () {\n        if (localization) {\n            setL10n(localization);\n        }\n    }, [localization]);\n    return (React__namespace.createElement(LocalizationContext.Provider, { value: localizationContext },\n        React__namespace.createElement(ThemeContext.Provider, { value: themeContext },\n            React__namespace.createElement(\"div\", { ref: containerRef, className: \"rpv-core__viewer rpv-core__viewer--\".concat(themeContext.currentTheme), \"data-testid\": \"core__viewer\", style: {\n                    height: '100%',\n                    width: '100%',\n                } }, file.shouldLoad && (React__namespace.createElement(DocumentLoader, { characterMap: characterMap, file: file.data, httpHeaders: httpHeaders, render: function (doc) { return (React__namespace.createElement(PageSizeCalculator, { defaultScale: defaultScale, doc: doc, render: function (ps) { return (React__namespace.createElement(Inner, { currentFile: {\n                            data: file.data,\n                            name: file.name,\n                        }, defaultScale: defaultScale, doc: doc, initialPage: initialPage, pageSize: ps, plugins: plugins, renderPage: renderPage, scrollMode: scrollMode, viewerState: {\n                            file: file,\n                            pageIndex: -1,\n                            pageHeight: ps.pageHeight,\n                            pageWidth: ps.pageWidth,\n                            pagesRotation: new Map(),\n                            rotation: 0,\n                            scale: ps.scale,\n                            scrollMode: scrollMode,\n                        }, onDocumentLoad: onDocumentLoad, onOpenFile: openFile, onPageChange: onPageChange, onRotate: onRotate, onRotatePage: onRotatePage, onZoom: onZoom })); }, scrollMode: scrollMode })); }, renderError: renderError, renderLoader: renderLoader, transformGetDocumentParams: transformGetDocumentParams, withCredentials: withCredentials, onDocumentAskPassword: onDocumentAskPassword }))))));\n};\n\nvar Worker = function (_a) {\n    var children = _a.children, workerUrl = _a.workerUrl;\n    PdfJsApi__namespace.GlobalWorkerOptions.workerSrc = workerUrl;\n    return React__namespace.createElement(React__namespace.Fragment, null, children);\n};\n\nexports.Button = Button;\nexports.Icon = Icon;\nexports.LazyRender = LazyRender;\nexports.LocalizationContext = LocalizationContext;\nexports.Menu = Menu;\nexports.MenuDivider = MenuDivider;\nexports.MenuItem = MenuItem;\nexports.MinimalButton = MinimalButton;\nexports.Modal = Modal;\nexports.Popover = Popover;\nexports.PrimaryButton = PrimaryButton;\nexports.ProgressBar = ProgressBar;\nexports.Separator = Separator;\nexports.Spinner = Spinner;\nexports.Splitter = Splitter;\nexports.TextBox = TextBox;\nexports.ThemeContext = ThemeContext;\nexports.Tooltip = Tooltip;\nexports.Viewer = Viewer;\nexports.Worker = Worker;\nexports.classNames = classNames;\nexports.createStore = createStore;\nexports.getDestination = getDestination;\nexports.getPage = getPage;\nexports.isMac = isMac;\nexports.useIntersectionObserver = useIntersectionObserver;\nexports.useIsMounted = useIsMounted;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;\nexports.useRenderQueue = useRenderQueue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/core/lib/cjs/core.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/core/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/core/lib/index.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/core.js */ \"./node_modules/@react-pdf-viewer/core/lib/cjs/core.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvY29yZS9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixJQUFJLGtIQUF5QztBQUM3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvY29yZS9saWIvaW5kZXguanM/NzUxZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgUmVhY3QgY29tcG9uZW50IHRvIHZpZXcgYSBQREYgZG9jdW1lbnRcbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXZcbiAqIEBsaWNlbnNlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXYvbGljZW5zZVxuICogQGNvcHlyaWdodCAyMDE5LTIwMjIgTmd1eWVuIEh1dSBQaHVvYyA8bWVAcGh1b2Mubmc+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvY29yZS5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9jb3JlLmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/core/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/default-layout/lib/cjs/default-layout.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/default-layout/lib/cjs/default-layout.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar attachment = __webpack_require__(/*! @react-pdf-viewer/attachment */ \"./node_modules/@react-pdf-viewer/attachment/lib/index.js\");\nvar bookmark = __webpack_require__(/*! @react-pdf-viewer/bookmark */ \"./node_modules/@react-pdf-viewer/bookmark/lib/index.js\");\nvar thumbnail = __webpack_require__(/*! @react-pdf-viewer/thumbnail */ \"./node_modules/@react-pdf-viewer/thumbnail/lib/index.js\");\nvar toolbar = __webpack_require__(/*! @react-pdf-viewer/toolbar */ \"./node_modules/@react-pdf-viewer/toolbar/lib/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar BookmarkIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M11.5,1.5h11c0.552,0,1,0.448,1,1v20c0,0.552-0.448,1-1,1h-21c-0.552,0-1-0.448-1-1v-20c0-0.552,0.448-1,1-1h3\\n            M11.5,10.5c0,0.55-0.3,0.661-0.659,0.248L8,7.5l-2.844,3.246c-0.363,0.414-0.659,0.3-0.659-0.247v-9c0-0.552,0.448-1,1-1h5\\n            c0.552,0,1,0.448,1,1L11.5,10.5z\\n            M14.5,6.499h6\\n            M14.5,10.499h6\\n            M3.5,14.499h17\\n            M3.5,18.499h16.497\" }))); };\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar FileIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M7.618,15.345l8.666-8.666c0.78-0.812,2.071-0.838,2.883-0.058s0.838,2.071,0.058,2.883\\n            c-0.019,0.02-0.038,0.039-0.058,0.058L7.461,21.305c-1.593,1.593-4.175,1.592-5.767,0s-1.592-4.175,0-5.767c0,0,0,0,0,0\\n            L13.928,3.305c2.189-2.19,5.739-2.19,7.929-0.001s2.19,5.739,0,7.929l0,0L13.192,19.9\" }))); };\n\nvar ThumbnailIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M10.5,9.5c0,0.552-0.448,1-1,1h-8c-0.552,0-1-0.448-1-1v-8c0-0.552,0.448-1,1-1h8c0.552,0,1,0.448,1,1V9.5z\\n            M23.5,9.5c0,0.552-0.448,1-1,1h-8c-0.552,0-1-0.448-1-1v-8c0-0.552,0.448-1,1-1h8c0.552,0,1,0.448,1,1V9.5z\\n            M10.5,22.5 c0,0.552-0.448,1-1,1h-8c-0.552,0-1-0.448-1-1v-8c0-0.552,0.448-1,1-1h8c0.552,0,1,0.448,1,1V22.5z\\n            M23.5,22.5c0,0.552-0.448,1-1,1 h-8c-0.552,0-1-0.448-1-1v-8c0-0.552,0.448-1,1-1h8c0.552,0,1,0.448,1,1V22.5z\" }))); };\n\nvar TOOLTIP_OFFSET_LTR = { left: 8, top: 0 };\nvar TOOLTIP_OFFSET_RTL = { left: -8, top: 0 };\nvar Sidebar = function (_a) {\n    var attachmentTabContent = _a.attachmentTabContent, bookmarkTabContent = _a.bookmarkTabContent, store = _a.store, thumbnailTabContent = _a.thumbnailTabContent, tabs = _a.tabs;\n    var containerRef = React__namespace.useRef();\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var _b = React__namespace.useState(false), opened = _b[0], setOpened = _b[1];\n    var _c = React__namespace.useState(Math.max(store.get('currentTab') || 0, 0)), currentTab = _c[0], setCurrentTab = _c[1];\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var isRtl = direction === core.TextDirection.RightToLeft;\n    var resizeConstrain = function (size) { return size.firstHalfPercentage >= 20 && size.firstHalfPercentage <= 80; };\n    var defaultTabs = [\n        {\n            content: thumbnailTabContent,\n            icon: React__namespace.createElement(ThumbnailIcon, null),\n            title: l10n && l10n.defaultLayout\n                ? l10n.defaultLayout.thumbnail\n                : 'Thumbnail',\n        },\n        {\n            content: bookmarkTabContent,\n            icon: React__namespace.createElement(BookmarkIcon, null),\n            title: l10n && l10n.defaultLayout ? l10n.defaultLayout.bookmark : 'Bookmark',\n        },\n        {\n            content: attachmentTabContent,\n            icon: React__namespace.createElement(FileIcon, null),\n            title: l10n && l10n.defaultLayout\n                ? l10n.defaultLayout.attachment\n                : 'Attachment',\n        },\n    ];\n    var listTabs = tabs ? tabs(defaultTabs) : defaultTabs;\n    var toggleTab = function (index) {\n        if (currentTab === index) {\n            setOpened(function (isOpened) { return !isOpened; });\n            var container = containerRef.current;\n            if (container) {\n                var width = container.style.width;\n                if (width) {\n                    container.style.removeProperty('width');\n                }\n            }\n        }\n        else {\n            switchToTab(index);\n        }\n    };\n    var switchToTab = function (index) {\n        if (index >= 0 && index <= listTabs.length - 1) {\n            setOpened(true);\n            setCurrentTab(index);\n        }\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('currentTab', switchToTab);\n        return function () {\n            store.unsubscribe('currentTab', switchToTab);\n        };\n    }, []);\n    if (listTabs.length === 0) {\n        return React__namespace.createElement(React__namespace.Fragment, null);\n    }\n    return (React__namespace.createElement(React__namespace.Fragment, null,\n        React__namespace.createElement(\"div\", { \"data-testid\": \"default-layout__sidebar\", className: core.classNames({\n                'rpv-default-layout__sidebar': true,\n                'rpv-default-layout__sidebar--opened': opened,\n                'rpv-default-layout__sidebar--ltr': !isRtl,\n                'rpv-default-layout__sidebar--rtl': isRtl,\n            }), ref: containerRef },\n            React__namespace.createElement(\"div\", { className: \"rpv-default-layout__sidebar-tabs\" },\n                React__namespace.createElement(\"div\", { className: \"rpv-default-layout__sidebar-headers\", role: \"tablist\", \"aria-orientation\": \"vertical\" }, listTabs.map(function (tab, index) { return (React__namespace.createElement(\"div\", { \"aria-controls\": \"rpv-default-layout__sidebar-content\", \"aria-selected\": currentTab === index, key: index, className: \"rpv-default-layout__sidebar-header\", id: \"rpv-default-layout__sidebar-tab-\".concat(index), role: \"tab\" },\n                    React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"default-layout-sidebar-tab-\".concat(index), position: isRtl ? core.Position.LeftCenter : core.Position.RightCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: tab.title, isSelected: currentTab === index, onClick: function () { return toggleTab(index); } }, tab.icon), content: function () { return tab.title; }, offset: isRtl ? TOOLTIP_OFFSET_RTL : TOOLTIP_OFFSET_LTR }))); })),\n                React__namespace.createElement(\"div\", { \"aria-labelledby\": \"rpv-default-layout__sidebar-tab-\".concat(currentTab), id: \"rpv-default-layout__sidebar-content\", className: core.classNames({\n                        'rpv-default-layout__sidebar-content': true,\n                        'rpv-default-layout__sidebar-content--opened': opened,\n                        'rpv-default-layout__sidebar-content--ltr': !isRtl,\n                        'rpv-default-layout__sidebar-content--rtl': isRtl,\n                    }), role: \"tabpanel\", tabIndex: -1 }, listTabs[currentTab].content))),\n        opened && React__namespace.createElement(core.Splitter, { constrain: resizeConstrain })));\n};\n\nvar defaultLayoutPlugin = function (props) {\n    var store = React__namespace.useMemo(function () {\n        return core.createStore({\n            currentTab: 0,\n        });\n    }, []);\n    var attachmentPluginInstance = attachment.attachmentPlugin();\n    var bookmarkPluginInstance = bookmark.bookmarkPlugin();\n    var thumbnailPluginInstance = thumbnail.thumbnailPlugin(props ? props.thumbnailPlugin : {});\n    var toolbarPluginInstance = toolbar.toolbarPlugin(props ? props.toolbarPlugin : {});\n    var Attachments = attachmentPluginInstance.Attachments;\n    var Bookmarks = bookmarkPluginInstance.Bookmarks;\n    var Thumbnails = thumbnailPluginInstance.Thumbnails;\n    var Toolbar = toolbarPluginInstance.Toolbar;\n    var sidebarTabs = props ? props.sidebarTabs : function (defaultTabs) { return defaultTabs; };\n    var plugins = [attachmentPluginInstance, bookmarkPluginInstance, thumbnailPluginInstance, toolbarPluginInstance];\n    return {\n        attachmentPluginInstance: attachmentPluginInstance,\n        bookmarkPluginInstance: bookmarkPluginInstance,\n        thumbnailPluginInstance: thumbnailPluginInstance,\n        toolbarPluginInstance: toolbarPluginInstance,\n        activateTab: function (index) {\n            store.update('currentTab', index);\n        },\n        install: function (pluginFunctions) {\n            plugins.forEach(function (plugin) {\n                if (plugin.install) {\n                    plugin.install(pluginFunctions);\n                }\n            });\n        },\n        renderPageLayer: function (renderProps) { return (React__namespace.createElement(React__namespace.Fragment, null, plugins.map(function (plugin, idx) {\n            return plugin.renderPageLayer ? (React__namespace.createElement(React__namespace.Fragment, { key: idx }, plugin.renderPageLayer(renderProps))) : (React__namespace.createElement(React__namespace.Fragment, { key: idx },\n                React__namespace.createElement(React__namespace.Fragment, null)));\n        }))); },\n        renderViewer: function (renderProps) {\n            var slot = renderProps.slot;\n            plugins.forEach(function (plugin) {\n                if (plugin.renderViewer) {\n                    slot = plugin.renderViewer(__assign(__assign({}, renderProps), { slot: slot }));\n                }\n            });\n            var mergeSubSlot = slot.subSlot && slot.subSlot.attrs\n                ? {\n                    className: slot.subSlot.attrs.className,\n                    'data-testid': slot.subSlot.attrs['data-testid'],\n                    ref: slot.subSlot.attrs.ref,\n                    style: slot.subSlot.attrs.style,\n                }\n                : {};\n            slot.children = (React__namespace.createElement(\"div\", { className: \"rpv-default-layout__container\" },\n                React__namespace.createElement(\"div\", { \"data-testid\": \"default-layout__main\", className: core.classNames({\n                        'rpv-default-layout__main': true,\n                        'rpv-default-layout__main--rtl': renderProps.themeContext.direction === core.TextDirection.RightToLeft,\n                    }) },\n                    React__namespace.createElement(Sidebar, { attachmentTabContent: React__namespace.createElement(Attachments, null), bookmarkTabContent: React__namespace.createElement(Bookmarks, null), store: store, thumbnailTabContent: React__namespace.createElement(Thumbnails, null), tabs: sidebarTabs }),\n                    React__namespace.createElement(\"div\", { className: \"rpv-default-layout__body\", \"data-testid\": \"default-layout__body\" },\n                        React__namespace.createElement(\"div\", { className: \"rpv-default-layout__toolbar\" }, props && props.renderToolbar ? props.renderToolbar(Toolbar) : React__namespace.createElement(Toolbar, null)),\n                        React__namespace.createElement(\"div\", __assign({}, mergeSubSlot), slot.subSlot.children))),\n                slot.children));\n            slot.subSlot.attrs = {};\n            slot.subSlot.children = React__namespace.createElement(React__namespace.Fragment, null);\n            return slot;\n        },\n        uninstall: function (pluginFunctions) {\n            plugins.forEach(function (plugin) {\n                if (plugin.uninstall) {\n                    plugin.uninstall(pluginFunctions);\n                }\n            });\n        },\n        onDocumentLoad: function (documentLoadProps) {\n            plugins.forEach(function (plugin) {\n                if (plugin.onDocumentLoad) {\n                    plugin.onDocumentLoad(documentLoadProps);\n                }\n            });\n            if (props && props.setInitialTab) {\n                props.setInitialTab(documentLoadProps.doc).then(function (initialTab) {\n                    store.update('currentTab', initialTab);\n                });\n            }\n        },\n        onAnnotationLayerRender: function (props) {\n            plugins.forEach(function (plugin) {\n                if (plugin.onAnnotationLayerRender) {\n                    plugin.onAnnotationLayerRender(props);\n                }\n            });\n        },\n        onTextLayerRender: function (props) {\n            plugins.forEach(function (plugin) {\n                if (plugin.onTextLayerRender) {\n                    plugin.onTextLayerRender(props);\n                }\n            });\n        },\n        onViewerStateChange: function (viewerState) {\n            var newState = viewerState;\n            plugins.forEach(function (plugin) {\n                if (plugin.onViewerStateChange) {\n                    newState = plugin.onViewerStateChange(newState);\n                }\n            });\n            return newState;\n        },\n    };\n};\n\nvar setInitialTabFromPageMode = function (doc) {\n    return new Promise(function (resolve, _) {\n        doc.getPageMode().then(function (pageMode) {\n            if (!pageMode) {\n                resolve(-1);\n            }\n            else {\n                switch (pageMode) {\n                    case core.PageMode.Attachments:\n                        resolve(2);\n                        break;\n                    case core.PageMode.Bookmarks:\n                        resolve(1);\n                        break;\n                    case core.PageMode.Thumbnails:\n                        resolve(0);\n                        break;\n                    default:\n                        resolve(-1);\n                        break;\n                }\n            }\n        });\n    });\n};\n\nexports.BookmarkIcon = BookmarkIcon;\nexports.FileIcon = FileIcon;\nexports.ThumbnailIcon = ThumbnailIcon;\nexports.defaultLayoutPlugin = defaultLayoutPlugin;\nexports.setInitialTabFromPageMode = setInitialTabFromPageMode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/default-layout/lib/cjs/default-layout.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/default-layout/lib/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/default-layout/lib/index.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/default-layout.js */ \"./node_modules/@react-pdf-viewer/default-layout/lib/cjs/default-layout.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvZGVmYXVsdC1sYXlvdXQvbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsSUFBSSxnSkFBbUQ7QUFDdkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC1wZGYtdmlld2VyL2RlZmF1bHQtbGF5b3V0L2xpYi9pbmRleC5qcz80NDdkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBSZWFjdCBjb21wb25lbnQgdG8gdmlldyBhIFBERiBkb2N1bWVudFxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldlxuICogQGxpY2Vuc2UgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldi9saWNlbnNlXG4gKiBAY29weXJpZ2h0IDIwMTktMjAyMiBOZ3V5ZW4gSHV1IFBodW9jIDxtZUBwaHVvYy5uZz5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9kZWZhdWx0LWxheW91dC5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9kZWZhdWx0LWxheW91dC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/default-layout/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/full-screen/lib/cjs/full-screen.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/full-screen/lib/cjs/full-screen.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar ExitFullScreenIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M11.5 23.499L11.5 14.499\" }),\n    React__namespace.createElement(\"path\", { d: \"M7.5 18.499L11.5 14.499 15.5 18.499\" }),\n    React__namespace.createElement(\"path\", { d: \"M11.5 1.499L11.5 10.499\" }),\n    React__namespace.createElement(\"path\", { d: \"M7.5 6.499L11.5 10.499 15.5 6.499\" }),\n    React__namespace.createElement(\"path\", { d: \"M20.5 12.499L1.5 12.499\" }))); };\n\nvar FullScreenIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M0.5 12L23.5 12\" }),\n    React__namespace.createElement(\"path\", { d: \"M11.5 1L11.5 23\" }),\n    React__namespace.createElement(\"path\", { d: \"M8.5 4L11.5 1 14.5 4\" }),\n    React__namespace.createElement(\"path\", { d: \"M20.5 9L23.5 12 20.5 15\" }),\n    React__namespace.createElement(\"path\", { d: \"M3.5 15L0.5 12 3.5 9\" }),\n    React__namespace.createElement(\"path\", { d: \"M14.5 20L11.5 23 8.5 20\" }))); };\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar Api;\n(function (Api) {\n    Api[Api[\"ExitFullScreen\"] = 0] = \"ExitFullScreen\";\n    Api[Api[\"FullScreenChange\"] = 1] = \"FullScreenChange\";\n    Api[Api[\"FullScreenElement\"] = 2] = \"FullScreenElement\";\n    Api[Api[\"FullScreenEnabled\"] = 3] = \"FullScreenEnabled\";\n    Api[Api[\"RequestFullScreen\"] = 4] = \"RequestFullScreen\";\n})(Api || (Api = {}));\nvar defaultVendor = {\n    ExitFullScreen: 'exitFullscreen',\n    FullScreenChange: 'fullscreenchange',\n    FullScreenElement: 'fullscreenElement',\n    FullScreenEnabled: 'fullscreenEnabled',\n    RequestFullScreen: 'requestFullscreen',\n};\nvar webkitVendor = {\n    ExitFullScreen: 'webkitExitFullscreen',\n    FullScreenChange: 'webkitfullscreenchange',\n    FullScreenElement: 'webkitFullscreenElement',\n    FullScreenEnabled: 'webkitFullscreenEnabled',\n    RequestFullScreen: 'webkitRequestFullscreen',\n};\nvar msVendor = {\n    ExitFullScreen: 'msExitFullscreen',\n    FullScreenChange: 'msFullscreenChange',\n    FullScreenElement: 'msFullscreenElement',\n    FullScreenEnabled: 'msFullscreenEnabled',\n    RequestFullScreen: 'msRequestFullscreen',\n};\nvar isBrowser = typeof window !== 'undefined';\nvar vendor = isBrowser\n    ? (Api.FullScreenEnabled in document && defaultVendor) ||\n        (webkitVendor.FullScreenEnabled in document && webkitVendor) ||\n        (msVendor.FullScreenEnabled in document && msVendor) ||\n        defaultVendor\n    : defaultVendor;\nvar isFullScreenEnabled = function () {\n    return isBrowser && vendor.FullScreenEnabled in document && document[vendor.FullScreenEnabled] === true;\n};\nvar addFullScreenChangeListener = function (handler) {\n    if (isBrowser) {\n        document.addEventListener(vendor.FullScreenChange, handler);\n    }\n};\nvar exitFullScreenMode = function (element) {\n    return isBrowser\n        ?\n            element[vendor.ExitFullScreen]()\n        : Promise.resolve({});\n};\nvar getFullScreenElement = function () {\n    return isBrowser ? document[vendor.FullScreenElement] : null;\n};\nvar requestFullScreen = function (element) {\n    if (isBrowser) {\n        element[vendor.RequestFullScreen]();\n    }\n};\n\nvar TOOLTIP_OFFSET$1 = { left: 0, top: 8 };\nvar EnterFullScreenButton = function (_a) {\n    var enableShortcuts = _a.enableShortcuts, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.fullScreen ? l10n.fullScreen.enterFullScreen : 'Full screen';\n    var ariaKeyShortcuts = enableShortcuts ? (core.isMac() ? 'Meta+Ctrl+F' : 'F11') : '';\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"full-screen-enter\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaKeyShortcuts: ariaKeyShortcuts, ariaLabel: label, isDisabled: !isFullScreenEnabled(), testId: \"full-screen__enter-button\", onClick: onClick },\n            React__namespace.createElement(FullScreenIcon, null)), content: function () { return label; }, offset: TOOLTIP_OFFSET$1 }));\n};\n\nvar TOOLTIP_OFFSET = { left: 0, top: 8 };\nvar ExitFullScreenButtonWithTooltip = function (_a) {\n    var onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var exitFullScreenLabel = l10n && l10n.fullScreen ? l10n.fullScreen.exitFullScreen : 'Exit full screen';\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"full-screen-exit\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaKeyShortcuts: \"Esc\", ariaLabel: exitFullScreenLabel, testId: \"full-screen__exit-button-with-tooltip\", onClick: onClick },\n            React__namespace.createElement(ExitFullScreenIcon, null)), content: function () { return exitFullScreenLabel; }, offset: TOOLTIP_OFFSET }));\n};\n\nvar useEnterFullScreen = function (getFullScreenTarget, store, onEnterFullScreen, onExitFullScreen) {\n    var _a = React__namespace.useState(false), isFullScreen = _a[0], setFullScreen = _a[1];\n    var pagesRef = React__namespace.useRef(store.get('getPagesContainer') ? store.get('getPagesContainer')() : null);\n    var closeOtherFullScreen = function () {\n        var pagesEle = pagesRef.current;\n        if (!pagesEle) {\n            return Promise.resolve();\n        }\n        var ele = getFullScreenElement();\n        return ele && ele !== getFullScreenTarget(pagesEle) ? exitFullScreenMode(ele) : Promise.resolve();\n    };\n    var enterFullScreen = function () {\n        if (!isFullScreenEnabled()) {\n            return;\n        }\n        var pagesEle = pagesRef.current;\n        if (!pagesEle) {\n            return;\n        }\n        closeOtherFullScreen().then(function () {\n            requestFullScreen(getFullScreenTarget(pagesEle));\n        });\n    };\n    var onFullScreenChange = function () {\n        var ele = getFullScreenElement();\n        var pagesEle = pagesRef.current;\n        var isFullScreenMode = ele === getFullScreenTarget(pagesEle);\n        store.update('isFullScreen', isFullScreenMode);\n        isFullScreenMode\n            ? pagesEle.classList.add('rpv-full-screen__pages')\n            : pagesEle.classList.remove('rpv-full-screen__pages');\n        var zoom = store.get('zoom');\n        if (zoom) {\n            isFullScreenMode ? onEnterFullScreen(zoom) : onExitFullScreen(zoom);\n        }\n    };\n    var handlePagesContainer = function (getPagesContainer) {\n        pagesRef.current = getPagesContainer();\n        addFullScreenChangeListener(onFullScreenChange);\n    };\n    var handleFullScreen = function (fullScreen) {\n        setFullScreen(fullScreen);\n    };\n    var exitFullScreen = function () {\n        setFullScreen(false);\n        var getPagesContainer = store.get('getPagesContainer');\n        if (!getPagesContainer) {\n            return;\n        }\n        var pagesEle = getPagesContainer();\n        if (!pagesEle) {\n            return;\n        }\n        var ele = getFullScreenElement();\n        if (ele && ele === getFullScreenTarget(pagesEle)) {\n            exitFullScreenMode(document);\n        }\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('isFullScreen', handleFullScreen);\n        store.subscribe('getPagesContainer', handlePagesContainer);\n        return function () {\n            store.unsubscribe('getPagesContainer', handlePagesContainer);\n            store.unsubscribe('isFullScreen', handleFullScreen);\n        };\n    }, []);\n    return {\n        enterFullScreen: enterFullScreen,\n        exitFullScreen: exitFullScreen,\n        isFullScreen: isFullScreen,\n    };\n};\n\nvar EnterFullScreen = function (_a) {\n    var children = _a.children, enableShortcuts = _a.enableShortcuts, getFullScreenTarget = _a.getFullScreenTarget, store = _a.store, onEnterFullScreen = _a.onEnterFullScreen, onExitFullScreen = _a.onExitFullScreen;\n    var _b = useEnterFullScreen(getFullScreenTarget, store, onEnterFullScreen, onExitFullScreen), enterFullScreen = _b.enterFullScreen, exitFullScreen = _b.exitFullScreen, isFullScreen = _b.isFullScreen;\n    var defaultChildren = function (props) {\n        return isFullScreen ? (React__namespace.createElement(ExitFullScreenButtonWithTooltip, { onClick: props.onClick })) : (React__namespace.createElement(EnterFullScreenButton, { enableShortcuts: enableShortcuts, onClick: props.onClick }));\n    };\n    var render = children || defaultChildren;\n    return render({\n        onClick: isFullScreen ? exitFullScreen : enterFullScreen,\n    });\n};\n\nvar EnterFullScreenMenuItem = function (_a) {\n    var onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.fullScreen ? l10n.fullScreen.enterFullScreen : 'Full screen';\n    return (React__namespace.createElement(core.MenuItem, { icon: React__namespace.createElement(FullScreenIcon, null), isDisabled: !isFullScreenEnabled(), testId: \"full-screen__enter-menu\", onClick: onClick }, label));\n};\n\nvar ExitFullScreenButton = function (_a) {\n    var onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var isRtl = direction === core.TextDirection.RightToLeft;\n    var exitFullScreenLabel = l10n && l10n.fullScreen ? l10n.fullScreen.exitFullScreen : 'Exit full screen';\n    return (React__namespace.createElement(\"div\", { className: core.classNames({\n            'rpv-full-screen__exit-button': true,\n            'rpv-full-screen__exit-button--ltr': !isRtl,\n            'rpv-full-screen__exit-button--rtl': isRtl,\n        }) },\n        React__namespace.createElement(core.MinimalButton, { ariaLabel: exitFullScreenLabel, testId: \"full-screen__exit-button\", onClick: onClick },\n            React__namespace.createElement(ExitFullScreenIcon, null))));\n};\n\nvar ExitFullScreen = function (_a) {\n    var children = _a.children, getFullScreenTarget = _a.getFullScreenTarget, store = _a.store, onEnterFullScreen = _a.onEnterFullScreen, onExitFullScreen = _a.onExitFullScreen;\n    var _b = useEnterFullScreen(getFullScreenTarget, store, onEnterFullScreen, onExitFullScreen), enterFullScreen = _b.enterFullScreen, exitFullScreen = _b.exitFullScreen, isFullScreen = _b.isFullScreen;\n    var defaultChildren = function (props) { return React__namespace.createElement(ExitFullScreenButton, { onClick: props.onClick }); };\n    var render = children || defaultChildren;\n    return (isFullScreen &&\n        render({\n            onClick: isFullScreen ? exitFullScreen : enterFullScreen,\n        }));\n};\n\nvar ShortcutHandler = function (_a) {\n    var containerRef = _a.containerRef, getFullScreenTarget = _a.getFullScreenTarget, store = _a.store, onEnterFullScreen = _a.onEnterFullScreen, onExitFullScreen = _a.onExitFullScreen;\n    var enterFullScreen = useEnterFullScreen(getFullScreenTarget, store, onEnterFullScreen, onExitFullScreen).enterFullScreen;\n    var keydownHandler = function (e) {\n        if (e.shiftKey || e.altKey) {\n            return;\n        }\n        var areShortcutsPressed = core.isMac() ? e.metaKey && e.ctrlKey && e.key === 'f' : e.key === 'F11';\n        if (!areShortcutsPressed) {\n            return;\n        }\n        var containerEle = containerRef.current;\n        if (!containerEle || !document.activeElement || !containerEle.contains(document.activeElement)) {\n            return;\n        }\n        e.preventDefault();\n        enterFullScreen();\n    };\n    React__namespace.useEffect(function () {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        document.addEventListener('keydown', keydownHandler);\n        return function () {\n            document.removeEventListener('keydown', keydownHandler);\n        };\n    }, [containerRef.current]);\n    return React__namespace.createElement(React__namespace.Fragment, null);\n};\n\nvar fullScreenPlugin = function (props) {\n    var defaultFullScreenTarget = function (ele) { return ele; };\n    var getFullScreenTarget = (props === null || props === void 0 ? void 0 : props.getFullScreenTarget) || defaultFullScreenTarget;\n    var fullScreenPluginProps = React__namespace.useMemo(function () {\n        return Object.assign({}, { enableShortcuts: true, onEnterFullScreen: function () { }, onExitFullScreen: function () { } }, props);\n    }, []);\n    var store = React__namespace.useMemo(function () { return core.createStore({}); }, []);\n    var EnterFullScreenDecorator = function (props) { return (React__namespace.createElement(EnterFullScreen, __assign({}, props, { enableShortcuts: fullScreenPluginProps.enableShortcuts, getFullScreenTarget: getFullScreenTarget, store: store, onEnterFullScreen: fullScreenPluginProps.onEnterFullScreen, onExitFullScreen: fullScreenPluginProps.onExitFullScreen }))); };\n    var EnterFullScreenButtonDecorator = function () { return (React__namespace.createElement(EnterFullScreenDecorator, null, function (renderProps) { return (React__namespace.createElement(EnterFullScreenButton, __assign({ enableShortcuts: fullScreenPluginProps.enableShortcuts }, renderProps))); })); };\n    var EnterFullScreenMenuItemDecorator = function (props) { return (React__namespace.createElement(EnterFullScreenDecorator, null, function (p) { return (React__namespace.createElement(EnterFullScreenMenuItem, { onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    var ExitFullScreenDecorator = function () { return (React__namespace.createElement(ExitFullScreen, { getFullScreenTarget: getFullScreenTarget, store: store, onEnterFullScreen: fullScreenPluginProps.onEnterFullScreen, onExitFullScreen: fullScreenPluginProps.onExitFullScreen }, props === null || props === void 0 ? void 0 : props.renderExitFullScreenButton)); };\n    var renderViewer = function (props) {\n        var currentSlot = props.slot;\n        if (currentSlot.subSlot) {\n            currentSlot.subSlot.children = (React__namespace.createElement(React__namespace.Fragment, null,\n                fullScreenPluginProps.enableShortcuts && (React__namespace.createElement(ShortcutHandler, { containerRef: props.containerRef, getFullScreenTarget: getFullScreenTarget, store: store, onEnterFullScreen: fullScreenPluginProps.onEnterFullScreen, onExitFullScreen: fullScreenPluginProps.onExitFullScreen })),\n                React__namespace.createElement(ExitFullScreenDecorator, null),\n                currentSlot.subSlot.children));\n        }\n        return currentSlot;\n    };\n    return {\n        install: function (pluginFunctions) {\n            store.update('getPagesContainer', pluginFunctions.getPagesContainer);\n            store.update('zoom', pluginFunctions.zoom);\n        },\n        renderViewer: renderViewer,\n        EnterFullScreen: EnterFullScreenDecorator,\n        EnterFullScreenButton: EnterFullScreenButtonDecorator,\n        EnterFullScreenMenuItem: EnterFullScreenMenuItemDecorator,\n    };\n};\n\nexports.ExitFullScreenIcon = ExitFullScreenIcon;\nexports.FullScreenIcon = FullScreenIcon;\nexports.fullScreenPlugin = fullScreenPlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/full-screen/lib/cjs/full-screen.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/full-screen/lib/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/full-screen/lib/index.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/full-screen.js */ \"./node_modules/@react-pdf-viewer/full-screen/lib/cjs/full-screen.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvZnVsbC1zY3JlZW4vbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsSUFBSSx1SUFBZ0Q7QUFDcEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC1wZGYtdmlld2VyL2Z1bGwtc2NyZWVuL2xpYi9pbmRleC5qcz83MTg3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBSZWFjdCBjb21wb25lbnQgdG8gdmlldyBhIFBERiBkb2N1bWVudFxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldlxuICogQGxpY2Vuc2UgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldi9saWNlbnNlXG4gKiBAY29weXJpZ2h0IDIwMTktMjAyMiBOZ3V5ZW4gSHV1IFBodW9jIDxtZUBwaHVvYy5uZz5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9mdWxsLXNjcmVlbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9mdWxsLXNjcmVlbi5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/full-screen/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/get-file/lib/cjs/get-file.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/get-file/lib/cjs/get-file.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar DownloadIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M5.5,11.5c-.275,0-.341.159-.146.354l6.292,6.293a.5.5,0,0,0,.709,0l6.311-6.275c.2-.193.13-.353-.145-.355L15.5,11.5V1.5a1,1,0,0,0-1-1h-5a1,1,0,0,0-1,1V11a.5.5,0,0,1-.5.5Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M23.5,18.5v4a1,1,0,0,1-1,1H1.5a1,1,0,0,1-1-1v-4\" }))); };\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar TOOLTIP_OFFSET = { left: 0, top: 8 };\nvar DownloadButton = function (_a) {\n    var onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.download ? l10n.download.download : 'Download';\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"get-file\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: label, testId: \"get-file__download-button\", onClick: onClick },\n            React__namespace.createElement(DownloadIcon, null)), content: function () { return label; }, offset: TOOLTIP_OFFSET }));\n};\n\nvar isChromeIOS = function () { return /iphone|ipod|ipad/i.test(navigator.userAgent) && /CriOS/i.test(navigator.userAgent); };\nvar isSafariIOS = function () { return /iphone|ipod|ipad/i.test(navigator.userAgent) && !/CriOS/i.test(navigator.userAgent); };\nvar encodeUint8Array = function (data) {\n    return btoa(Array(data.length)\n        .fill('')\n        .map(function (_, i) { return String.fromCharCode(data[i]); })\n        .join(''));\n};\nvar download = function (url, saveAs) {\n    var link = document.createElement('a');\n    link.style.display = 'none';\n    link.href = url;\n    link.setAttribute('download', saveAs);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n};\nvar downloadBlob = function (data, saveAs, mimeType) {\n    var blobUrl = URL.createObjectURL(new Blob([data], { type: mimeType }));\n    download(blobUrl, saveAs);\n    if (blobUrl) {\n        URL.revokeObjectURL(blobUrl);\n    }\n    return;\n};\nvar downloadFile = function (doc, saveAs) {\n    doc.getData().then(function (data) {\n        isSafariIOS()\n            ?\n                downloadBlob(data, saveAs, 'application/octet-stream')\n            : isChromeIOS()\n                ? download(\"data:application/pdf;base64,\".concat(encodeUint8Array(data)), saveAs)\n                : downloadBlob(data, saveAs, 'application/pdf');\n    });\n};\n\nvar Download = function (_a) {\n    var children = _a.children, fileNameGenerator = _a.fileNameGenerator, store = _a.store;\n    var _b = React__namespace.useState(store.get('file')), currentFile = _b[0], setCurrentFile = _b[1];\n    var _c = React__namespace.useState(store.get('doc')), currentDocument = _c[0], setCurrentDocument = _c[1];\n    var handleDocumentChanged = function (doc) {\n        setCurrentDocument(doc);\n    };\n    var handleFileChanged = function (file) {\n        setCurrentFile(file);\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('doc', handleDocumentChanged);\n        store.subscribe('file', handleFileChanged);\n        return function () {\n            store.subscribe('doc', handleDocumentChanged);\n            store.unsubscribe('file', handleFileChanged);\n        };\n    }, []);\n    var download = function () {\n        if (currentDocument && currentFile) {\n            downloadFile(currentDocument, fileNameGenerator(currentFile));\n        }\n    };\n    var defaultChildren = function (props) { return React__namespace.createElement(DownloadButton, { onClick: props.onClick }); };\n    var render = children || defaultChildren;\n    return render({\n        onClick: download,\n    });\n};\n\nvar DownloadMenuItem = function (_a) {\n    var onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.download ? l10n.download.download : 'Download';\n    return (React__namespace.createElement(core.MenuItem, { icon: React__namespace.createElement(DownloadIcon, null), testId: \"get-file__download-menu\", onClick: onClick }, label));\n};\n\nvar getFileName = function (url) {\n    var str = url.split('/').pop();\n    return str ? str.split('#')[0].split('?')[0] : url;\n};\n\nvar getFilePlugin = function (props) {\n    var store = React__namespace.useMemo(function () { return core.createStore({}); }, []);\n    var defaultFileNameGenerator = function (file) { return (file.name ? getFileName(file.name) : 'document.pdf'); };\n    var DownloadDecorator = function (downloadProps) { return (React__namespace.createElement(Download, __assign({}, downloadProps, { fileNameGenerator: props ? props.fileNameGenerator || defaultFileNameGenerator : defaultFileNameGenerator, store: store }))); };\n    var DownloadButtonDecorator = function () { return (React__namespace.createElement(DownloadDecorator, null, function (props) { return React__namespace.createElement(DownloadButton, __assign({}, props)); })); };\n    var DownloadMenuItemDecorator = function (props) { return (React__namespace.createElement(DownloadDecorator, null, function (p) { return (React__namespace.createElement(DownloadMenuItem, { onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    return {\n        onDocumentLoad: function (props) {\n            store.update('doc', props.doc);\n            store.update('file', props.file);\n        },\n        Download: DownloadDecorator,\n        DownloadButton: DownloadButtonDecorator,\n        DownloadMenuItem: DownloadMenuItemDecorator,\n    };\n};\n\nexports.DownloadIcon = DownloadIcon;\nexports.getFilePlugin = getFilePlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/get-file/lib/cjs/get-file.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/get-file/lib/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/get-file/lib/index.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/get-file.js */ \"./node_modules/@react-pdf-viewer/get-file/lib/cjs/get-file.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvZ2V0LWZpbGUvbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsSUFBSSw4SEFBNkM7QUFDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC1wZGYtdmlld2VyL2dldC1maWxlL2xpYi9pbmRleC5qcz83YjBjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBSZWFjdCBjb21wb25lbnQgdG8gdmlldyBhIFBERiBkb2N1bWVudFxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldlxuICogQGxpY2Vuc2UgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldi9saWNlbnNlXG4gKiBAY29weXJpZ2h0IDIwMTktMjAyMiBOZ3V5ZW4gSHV1IFBodW9jIDxtZUBwaHVvYy5uZz5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9nZXQtZmlsZS5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9nZXQtZmlsZS5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/get-file/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/open/lib/cjs/open.js":
/*!*************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/open/lib/cjs/open.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar OpenFileIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M18.5,7.5c.275,0,.341-.159.146-.354L12.354.854a.5.5,0,0,0-.708,0L5.354,7.147c-.2.195-.129.354.146.354h3v10a1,1,0,0,0,1,1h5a1,1,0,0,0,1-1V7.5Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M23.5,18.5v4a1,1,0,0,1-1,1H1.5a1,1,0,0,1-1-1v-4\" }))); };\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar useTriggerOpen = function (store) {\n    var inputRef = React__namespace.useRef();\n    var openFile = function () {\n        var inputEle = inputRef.current;\n        if (inputEle) {\n            inputEle.click();\n            if (store.get('triggerOpenFile')) {\n                store.update('triggerOpenFile', false);\n            }\n        }\n    };\n    var handleOpenFileTriggered = function (trigger) {\n        if (trigger) {\n            openFile();\n        }\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('triggerOpenFile', handleOpenFileTriggered);\n        return function () {\n            store.unsubscribe('triggerOpenFile', handleOpenFileTriggered);\n        };\n    }, []);\n    return {\n        inputRef: inputRef,\n        openFile: openFile,\n    };\n};\n\nvar TOOLTIP_OFFSET = { left: 0, top: 8 };\nvar OpenButton = function (_a) {\n    var enableShortcuts = _a.enableShortcuts, store = _a.store, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.open ? l10n.open.openFile : 'Open file';\n    var _b = useTriggerOpen(store), inputRef = _b.inputRef, openFile = _b.openFile;\n    var ariaKeyShortcuts = enableShortcuts ? (core.isMac() ? 'Meta+O' : 'Ctrl+O') : '';\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"open\", position: core.Position.BottomCenter, target: React__namespace.createElement(\"div\", { className: \"rpv-open__input-wrapper\" },\n            React__namespace.createElement(\"input\", { ref: inputRef, className: \"rpv-open__input\", multiple: false, tabIndex: -1, title: \"\", type: \"file\", onChange: onClick }),\n            React__namespace.createElement(core.MinimalButton, { ariaKeyShortcuts: ariaKeyShortcuts, ariaLabel: label, testId: \"open__button\", onClick: openFile },\n                React__namespace.createElement(OpenFileIcon, null))), content: function () { return label; }, offset: TOOLTIP_OFFSET }));\n};\n\nvar Open = function (_a) {\n    var children = _a.children, enableShortcuts = _a.enableShortcuts, store = _a.store;\n    var handleOpenFiles = function (e) {\n        var files = e.target.files;\n        if (!files || !files.length) {\n            return;\n        }\n        var openFile = store.get('openFile');\n        if (openFile) {\n            openFile(files[0]);\n        }\n    };\n    var defaultChildren = function (props) { return (React__namespace.createElement(OpenButton, { enableShortcuts: enableShortcuts, store: store, onClick: props.onClick })); };\n    var render = children || defaultChildren;\n    return render({\n        onClick: handleOpenFiles,\n    });\n};\n\nvar OpenMenuItem = function (_a) {\n    var store = _a.store, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.open ? l10n.open.openFile : 'Open file';\n    var _b = useTriggerOpen(store), inputRef = _b.inputRef, openFile = _b.openFile;\n    return (React__namespace.createElement(core.MenuItem, { icon: React__namespace.createElement(OpenFileIcon, null), testId: \"open__menu\", onClick: openFile },\n        React__namespace.createElement(\"div\", { className: \"rpv-open__input-wrapper\" },\n            React__namespace.createElement(\"input\", { ref: inputRef, className: \"rpv-open__input\", multiple: false, tabIndex: -1, title: \"\", type: \"file\", onChange: onClick }),\n            label)));\n};\n\nvar ShortcutHandler = function (_a) {\n    var containerRef = _a.containerRef, store = _a.store;\n    var keydownHandler = function (e) {\n        if (e.shiftKey || e.altKey || e.key !== 'o') {\n            return;\n        }\n        var isCommandPressed = core.isMac() ? e.metaKey : e.ctrlKey;\n        if (!isCommandPressed) {\n            return;\n        }\n        var containerEle = containerRef.current;\n        if (!containerEle || !document.activeElement || !containerEle.contains(document.activeElement)) {\n            return;\n        }\n        e.preventDefault();\n        store.update('triggerOpenFile', true);\n    };\n    React__namespace.useEffect(function () {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        document.addEventListener('keydown', keydownHandler);\n        return function () {\n            document.removeEventListener('keydown', keydownHandler);\n        };\n    }, [containerRef.current]);\n    return React__namespace.createElement(React__namespace.Fragment, null);\n};\n\nvar openPlugin = function (props) {\n    var openPluginProps = React__namespace.useMemo(function () { return Object.assign({}, { enableShortcuts: true }, props); }, []);\n    var store = React__namespace.useMemo(function () { return core.createStore({}); }, []);\n    var OpenDecorator = function (props) { return (React__namespace.createElement(Open, __assign({ enableShortcuts: openPluginProps.enableShortcuts }, props, { store: store }))); };\n    var OpenButtonDecorator = function () { return React__namespace.createElement(OpenDecorator, null); };\n    var OpenMenuItemDecorator = function () { return (React__namespace.createElement(OpenDecorator, null, function (p) { return React__namespace.createElement(OpenMenuItem, { store: store, onClick: p.onClick }); })); };\n    var renderViewer = function (props) {\n        var slot = props.slot;\n        var updateSlot = {\n            children: (React__namespace.createElement(React__namespace.Fragment, null,\n                openPluginProps.enableShortcuts && (React__namespace.createElement(ShortcutHandler, { containerRef: props.containerRef, store: store })),\n                slot.children)),\n        };\n        return __assign(__assign({}, slot), updateSlot);\n    };\n    return {\n        install: function (pluginFunctions) {\n            store.update('openFile', pluginFunctions.openFile);\n        },\n        renderViewer: renderViewer,\n        Open: OpenDecorator,\n        OpenButton: OpenButtonDecorator,\n        OpenMenuItem: OpenMenuItemDecorator,\n    };\n};\n\nexports.OpenFileIcon = OpenFileIcon;\nexports.openPlugin = openPlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/open/lib/cjs/open.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/open/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/open/lib/index.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/open.js */ \"./node_modules/@react-pdf-viewer/open/lib/cjs/open.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvb3Blbi9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixJQUFJLGtIQUF5QztBQUM3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvb3Blbi9saWIvaW5kZXguanM/YjhiZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgUmVhY3QgY29tcG9uZW50IHRvIHZpZXcgYSBQREYgZG9jdW1lbnRcbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXZcbiAqIEBsaWNlbnNlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXYvbGljZW5zZVxuICogQGNvcHlyaWdodCAyMDE5LTIwMjIgTmd1eWVuIEh1dSBQaHVvYyA8bWVAcGh1b2Mubmc+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvb3Blbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9vcGVuLmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/open/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/page-navigation/lib/cjs/page-navigation.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/page-navigation/lib/cjs/page-navigation.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar DownArrowIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M2.32,2.966h19.452c0.552,0.001,1,0.449,0.999,1.001c0,0.182-0.05,0.36-0.144,0.516L12.9,20.552\\n            c-0.286,0.472-0.901,0.624-1.373,0.338c-0.138-0.084-0.254-0.2-0.338-0.338L1.465,4.483C1.179,4.01,1.331,3.396,1.804,3.11\\n            C1.96,3.016,2.138,2.966,2.32,2.966z\" }))); };\n\nvar NextIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M0.541,5.627L11.666,18.2c0.183,0.207,0.499,0.226,0.706,0.043c0.015-0.014,0.03-0.028,0.043-0.043\\n            L23.541,5.627\" }))); };\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar useCurrentPage = function (store) {\n    var _a = React__namespace.useState(store.get('currentPage') || 0), currentPage = _a[0], setCurrentPage = _a[1];\n    var handleCurrentPageChanged = function (currentPageIndex) {\n        setCurrentPage(currentPageIndex);\n    };\n    core.useIsomorphicLayoutEffect(function () {\n        store.subscribe('currentPage', handleCurrentPageChanged);\n        return function () {\n            store.unsubscribe('currentPage', handleCurrentPageChanged);\n        };\n    }, []);\n    return { currentPage: currentPage };\n};\n\nvar useNumberOfPages = function (store) {\n    var _a = React__namespace.useState(store.get('numberOfPages') || 0), numberOfPages = _a[0], setNumberOfPages = _a[1];\n    var handleNumberOfPages = function (total) {\n        setNumberOfPages(total);\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('numberOfPages', handleNumberOfPages);\n        return function () {\n            store.unsubscribe('numberOfPages', handleNumberOfPages);\n        };\n    }, []);\n    return { numberOfPages: numberOfPages };\n};\n\nvar CurrentPageInput = function (_a) {\n    var store = _a.store;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var _b = React__namespace.useState('1'), editingPage = _b[0], setEditingPage = _b[1];\n    var currentPage = useCurrentPage(store).currentPage;\n    var numberOfPages = useNumberOfPages(store).numberOfPages;\n    React__namespace.useEffect(function () { return setEditingPage(\"\".concat(currentPage + 1)); }, [currentPage]);\n    var gotoNextPage = function () {\n        var nextPage = currentPage + 1;\n        if (nextPage < numberOfPages) {\n            setEditingPage(\"\".concat(nextPage + 1));\n            jumpTo(nextPage);\n        }\n    };\n    var gotoPreviousPage = function () {\n        var previousPage = currentPage - 1;\n        if (previousPage >= 0) {\n            setEditingPage(\"\".concat(previousPage + 1));\n            jumpTo(previousPage);\n        }\n    };\n    var jumpTo = function (page) {\n        var jumpToPage = store.get('jumpToPage');\n        if (jumpToPage) {\n            jumpToPage(page);\n        }\n    };\n    var jump = function () {\n        var newPage = parseInt(editingPage, 10);\n        editingPage === '' || newPage < 1 || newPage > numberOfPages\n            ? setEditingPage(\"\".concat(currentPage + 1))\n            : jumpTo(newPage - 1);\n    };\n    var keydownPage = function (e) {\n        switch (e.key) {\n            case 'ArrowUp':\n                gotoPreviousPage();\n                break;\n            case 'ArrowDown':\n                gotoNextPage();\n                break;\n            case 'Enter':\n                jump();\n                break;\n        }\n    };\n    var label = l10n && l10n.pageNavigation\n        ? l10n.pageNavigation.enterPageNumber\n        : 'Enter a page number';\n    return (React__namespace.createElement(\"span\", { className: \"rpv-page-navigation__current-page-input\" },\n        React__namespace.createElement(core.TextBox, { ariaLabel: label, testId: \"page-navigation__current-page-input\", type: \"text\", value: editingPage, onChange: setEditingPage, onKeyDown: keydownPage })));\n};\n\nvar FetchLabels = function (_a) {\n    var children = _a.children, doc = _a.doc;\n    var isMounted = core.useIsMounted();\n    var _b = React__namespace.useState({\n        loading: true,\n        labels: [],\n    }), status = _b[0], setStatus = _b[1];\n    React__namespace.useEffect(function () {\n        doc.getPageLabels().then(function (result) {\n            isMounted.current && setStatus({ loading: false, labels: result || [] });\n        });\n    }, [doc.loadingTask.docId]);\n    return status.loading ? React__namespace.createElement(React__namespace.Fragment, null) : children(status.labels);\n};\n\nvar useDocument = function (store) {\n    var _a = React__namespace.useState(store.get('doc')), currentDoc = _a[0], setCurrentDoc = _a[1];\n    var handleDocumentChanged = function (doc) {\n        setCurrentDoc(doc);\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('doc', handleDocumentChanged);\n        return function () {\n            store.unsubscribe('doc', handleDocumentChanged);\n        };\n    }, []);\n    return currentDoc;\n};\n\nvar CurrentPageLabel = function (_a) {\n    var children = _a.children, store = _a.store;\n    var currentDoc = useDocument(store);\n    var currentPage = useCurrentPage(store).currentPage;\n    var numberOfPages = useNumberOfPages(store).numberOfPages;\n    var defaultChildren = function (props) { return React__namespace.createElement(React__namespace.Fragment, null, props.currentPage + 1); };\n    var render = children || defaultChildren;\n    return currentDoc ? (React__namespace.createElement(FetchLabels, { doc: currentDoc }, function (labels) {\n        var pageLabel = labels.length === numberOfPages && numberOfPages > 0 ? labels[currentPage] : '';\n        return render({\n            currentPage: currentPage,\n            numberOfPages: numberOfPages,\n            pageLabel: pageLabel,\n        });\n    })) : (React__namespace.createElement(React__namespace.Fragment, null));\n};\n\nvar UpArrowIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M21.783,21.034H2.332c-0.552,0-1-0.448-1-1c0-0.182,0.05-0.361,0.144-0.517L11.2,3.448\\n            c0.286-0.472,0.901-0.624,1.373-0.338c0.138,0.084,0.254,0.2,0.338,0.338l9.726,16.069c0.286,0.473,0.134,1.087-0.339,1.373\\n            C22.143,20.984,21.965,21.034,21.783,21.034z\" }))); };\n\nvar TOOLTIP_OFFSET$3 = { left: 0, top: 8 };\nvar GoToFirstPageButton = function (_a) {\n    var isDisabled = _a.isDisabled, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.pageNavigation ? l10n.pageNavigation.goToFirstPage : 'First page';\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"page-navigation-first\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: label, isDisabled: isDisabled, testId: \"page-navigation__first-button\", onClick: onClick },\n            React__namespace.createElement(UpArrowIcon, null)), content: function () { return label; }, offset: TOOLTIP_OFFSET$3 }));\n};\n\nvar GoToFirstPage = function (_a) {\n    var children = _a.children, store = _a.store;\n    var currentPage = useCurrentPage(store).currentPage;\n    var goToFirstPage = function () {\n        var jumpToPage = store.get('jumpToPage');\n        if (jumpToPage) {\n            jumpToPage(0);\n        }\n    };\n    var defaultChildren = function (props) { return (React__namespace.createElement(GoToFirstPageButton, { isDisabled: props.isDisabled, onClick: props.onClick })); };\n    var render = children || defaultChildren;\n    return render({\n        isDisabled: currentPage === 0,\n        onClick: goToFirstPage,\n    });\n};\n\nvar GoToFirstPageMenuItem = function (_a) {\n    var isDisabled = _a.isDisabled, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.pageNavigation ? l10n.pageNavigation.goToFirstPage : 'First page';\n    return (React__namespace.createElement(core.MenuItem, { icon: React__namespace.createElement(UpArrowIcon, null), isDisabled: isDisabled, testId: \"page-navigation__first-menu\", onClick: onClick }, label));\n};\n\nvar TOOLTIP_OFFSET$2 = { left: 0, top: 8 };\nvar GoToLastPageButton = function (_a) {\n    var isDisabled = _a.isDisabled, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.pageNavigation ? l10n.pageNavigation.goToLastPage : 'Last page';\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"page-navigation-last\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: label, isDisabled: isDisabled, testId: \"page-navigation__last-button\", onClick: onClick },\n            React__namespace.createElement(DownArrowIcon, null)), content: function () { return label; }, offset: TOOLTIP_OFFSET$2 }));\n};\n\nvar GoToLastPage = function (_a) {\n    var children = _a.children, store = _a.store;\n    var currentPage = useCurrentPage(store).currentPage;\n    var numberOfPages = useNumberOfPages(store).numberOfPages;\n    var goToLastPage = function () {\n        var jumpToPage = store.get('jumpToPage');\n        if (jumpToPage) {\n            jumpToPage(numberOfPages - 1);\n        }\n    };\n    var defaultChildren = function (props) { return (React__namespace.createElement(GoToLastPageButton, { isDisabled: props.isDisabled, onClick: props.onClick })); };\n    var render = children || defaultChildren;\n    return render({\n        isDisabled: currentPage + 1 >= numberOfPages,\n        onClick: goToLastPage,\n    });\n};\n\nvar GoToLastPageMenuItem = function (_a) {\n    var isDisabled = _a.isDisabled, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.pageNavigation ? l10n.pageNavigation.goToLastPage : 'Last page';\n    return (React__namespace.createElement(core.MenuItem, { icon: React__namespace.createElement(DownArrowIcon, null), isDisabled: isDisabled, testId: \"page-navigation__last-menu\", onClick: onClick }, label));\n};\n\nvar TOOLTIP_OFFSET$1 = { left: 0, top: 8 };\nvar GoToNextPageButton = function (_a) {\n    var isDisabled = _a.isDisabled, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.pageNavigation ? l10n.pageNavigation.goToNextPage : 'Next page';\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"page-navigation-next\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: label, isDisabled: isDisabled, testId: \"page-navigation__next-button\", onClick: onClick },\n            React__namespace.createElement(NextIcon, null)), content: function () { return label; }, offset: TOOLTIP_OFFSET$1 }));\n};\n\nvar GoToNextPage = function (_a) {\n    var children = _a.children, store = _a.store;\n    var currentPage = useCurrentPage(store).currentPage;\n    var numberOfPages = useNumberOfPages(store).numberOfPages;\n    var goToNextPage = function () {\n        var jumpToPage = store.get('jumpToPage');\n        if (jumpToPage) {\n            jumpToPage(currentPage + 1);\n        }\n    };\n    var defaultChildren = function (props) { return (React__namespace.createElement(GoToNextPageButton, { onClick: props.onClick, isDisabled: props.isDisabled })); };\n    var render = children || defaultChildren;\n    return render({\n        isDisabled: currentPage + 1 >= numberOfPages,\n        onClick: goToNextPage,\n    });\n};\n\nvar GoToNextPageMenuItem = function (_a) {\n    var isDisabled = _a.isDisabled, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.pageNavigation ? l10n.pageNavigation.goToNextPage : 'Next page';\n    return (React__namespace.createElement(core.MenuItem, { icon: React__namespace.createElement(NextIcon, null), isDisabled: isDisabled, testId: \"page-navigation__next-menu\", onClick: onClick }, label));\n};\n\nvar PreviousIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M23.535,18.373L12.409,5.8c-0.183-0.207-0.499-0.226-0.706-0.043C11.688,5.77,11.674,5.785,11.66,5.8\\n            L0.535,18.373\" }))); };\n\nvar TOOLTIP_OFFSET = { left: 0, top: 8 };\nvar GoToPreviousPageButton = function (_a) {\n    var isDisabled = _a.isDisabled, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.pageNavigation\n        ? l10n.pageNavigation.goToPreviousPage\n        : 'Previous page';\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"page-navigation-previous\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: label, isDisabled: isDisabled, testId: \"page-navigation__previous-button\", onClick: onClick },\n            React__namespace.createElement(PreviousIcon, null)), content: function () { return label; }, offset: TOOLTIP_OFFSET }));\n};\n\nvar GoToPreviousPage = function (_a) {\n    var store = _a.store, children = _a.children;\n    var currentPage = useCurrentPage(store).currentPage;\n    var goToPreviousPage = function () {\n        var jumpToPage = store.get('jumpToPage');\n        if (jumpToPage) {\n            jumpToPage(currentPage - 1);\n        }\n    };\n    var defaultChildren = function (props) { return (React__namespace.createElement(GoToPreviousPageButton, { isDisabled: props.isDisabled, onClick: props.onClick })); };\n    var render = children || defaultChildren;\n    return render({\n        isDisabled: currentPage <= 0,\n        onClick: goToPreviousPage,\n    });\n};\n\nvar GoToPreviousPageMenuItem = function (_a) {\n    var isDisabled = _a.isDisabled, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.pageNavigation\n        ? l10n.pageNavigation.goToPreviousPage\n        : 'Previous page';\n    return (React__namespace.createElement(core.MenuItem, { icon: React__namespace.createElement(PreviousIcon, null), isDisabled: isDisabled, testId: \"page-navigation__previous-menu\", onClick: onClick }, label));\n};\n\nvar NumberOfPages = function (_a) {\n    var children = _a.children, store = _a.store;\n    var numberOfPages = useNumberOfPages(store).numberOfPages;\n    return children ? children({ numberOfPages: numberOfPages }) : React__namespace.createElement(React__namespace.Fragment, null, numberOfPages);\n};\n\nvar ShortcutHandler = function (_a) {\n    var containerRef = _a.containerRef, numPages = _a.numPages, store = _a.store;\n    var currentPage = useCurrentPage(store).currentPage;\n    var currentPageRef = React__namespace.useRef(currentPage);\n    currentPageRef.current = currentPage;\n    var _b = React__namespace.useState(true), isMouseInside = _b[0], setMouseInside = _b[1];\n    var handleMouseEnter = function () { return setMouseInside(true); };\n    var handleMouseLeave = function () { return setMouseInside(false); };\n    var goToNextPage = function () {\n        var jumpToPage = store.get('jumpToPage');\n        var targetPage = currentPageRef.current + 1;\n        if (jumpToPage && targetPage < numPages) {\n            jumpToPage(targetPage);\n        }\n    };\n    var goToPreviousPage = function () {\n        var jumpToPage = store.get('jumpToPage');\n        var targetPage = currentPageRef.current - 1;\n        if (jumpToPage && targetPage >= 0) {\n            jumpToPage(targetPage);\n        }\n    };\n    var handleKeydown = function (e) {\n        var containerEle = containerRef.current;\n        var shouldHandleShortcuts = isMouseInside || (document.activeElement && containerEle.contains(document.activeElement));\n        if (!containerEle || !shouldHandleShortcuts) {\n            return;\n        }\n        var shouldGoToNextPage = (e.altKey && e.key === 'ArrowDown') || (!e.shiftKey && !e.altKey && e.key === 'PageDown');\n        var shouldGoToPreviousPage = (e.altKey && e.key === 'ArrowUp') || (!e.shiftKey && !e.altKey && e.key === 'PageUp');\n        if (shouldGoToNextPage) {\n            e.preventDefault();\n            goToNextPage();\n        }\n        else if (shouldGoToPreviousPage) {\n            e.preventDefault();\n            goToPreviousPage();\n        }\n    };\n    React__namespace.useEffect(function () {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        document.addEventListener('keydown', handleKeydown);\n        containerEle.addEventListener('mouseenter', handleMouseEnter);\n        containerEle.addEventListener('mouseleave', handleMouseLeave);\n        return function () {\n            document.removeEventListener('keydown', handleKeydown);\n            containerEle.removeEventListener('mouseenter', handleMouseEnter);\n            containerEle.removeEventListener('mouseleave', handleMouseLeave);\n        };\n    }, [containerRef.current]);\n    return React__namespace.createElement(React__namespace.Fragment, null);\n};\n\nvar pageNavigationPlugin = function (props) {\n    var pageNavigationPluginProps = React__namespace.useMemo(function () { return Object.assign({}, { enableShortcuts: true }, props); }, []);\n    var store = React__namespace.useMemo(function () { return core.createStore(); }, []);\n    var CurrentPageInputDecorator = function () { return React__namespace.createElement(CurrentPageInput, { store: store }); };\n    var CurrentPageLabelDecorator = function (props) { return React__namespace.createElement(CurrentPageLabel, __assign({}, props, { store: store })); };\n    var GoToFirstPageDecorator = function (props) { return React__namespace.createElement(GoToFirstPage, __assign({}, props, { store: store })); };\n    var GoToFirstPageButtonDecorator = function () { return (React__namespace.createElement(GoToFirstPageDecorator, null, function (props) { return React__namespace.createElement(GoToFirstPageButton, __assign({}, props)); })); };\n    var GoToFirstPageMenuItemDecorator = function (props) { return (React__namespace.createElement(GoToFirstPageDecorator, null, function (p) { return (React__namespace.createElement(GoToFirstPageMenuItem, { isDisabled: p.isDisabled, onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    var GoToLastPageDecorator = function (props) { return React__namespace.createElement(GoToLastPage, __assign({}, props, { store: store })); };\n    var GoToLastPageButtonDecorator = function () { return (React__namespace.createElement(GoToLastPageDecorator, null, function (props) { return React__namespace.createElement(GoToLastPageButton, __assign({}, props)); })); };\n    var GoToLastPageMenuItemDecorator = function (props) { return (React__namespace.createElement(GoToLastPageDecorator, null, function (p) { return (React__namespace.createElement(GoToLastPageMenuItem, { isDisabled: p.isDisabled, onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    var GoToNextPageDecorator = function (props) { return React__namespace.createElement(GoToNextPage, __assign({}, props, { store: store })); };\n    var GoToNextPageButtonDecorator = function () { return (React__namespace.createElement(GoToNextPageDecorator, null, function (props) { return React__namespace.createElement(GoToNextPageButton, __assign({}, props)); })); };\n    var GoToNextPageMenuItemDecorator = function (props) { return (React__namespace.createElement(GoToNextPageDecorator, null, function (p) { return (React__namespace.createElement(GoToNextPageMenuItem, { isDisabled: p.isDisabled, onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    var GoToPreviousPageDecorator = function (props) { return React__namespace.createElement(GoToPreviousPage, __assign({}, props, { store: store })); };\n    var GoToPreviousPageButtonDecorator = function () { return (React__namespace.createElement(GoToPreviousPageDecorator, null, function (props) { return React__namespace.createElement(GoToPreviousPageButton, __assign({}, props)); })); };\n    var GoToPreviousPageMenuItemDecorator = function (props) { return (React__namespace.createElement(GoToPreviousPageDecorator, null, function (p) { return (React__namespace.createElement(GoToPreviousPageMenuItem, { isDisabled: p.isDisabled, onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    var NumberOfPagesDecorator = function (props) { return React__namespace.createElement(NumberOfPages, __assign({}, props, { store: store })); };\n    var renderViewer = function (props) {\n        var slot = props.slot;\n        if (!pageNavigationPluginProps.enableShortcuts) {\n            return slot;\n        }\n        var updateSlot = {\n            children: (React__namespace.createElement(React__namespace.Fragment, null,\n                React__namespace.createElement(ShortcutHandler, { containerRef: props.containerRef, numPages: props.doc.numPages, store: store }),\n                slot.children)),\n        };\n        return __assign(__assign({}, slot), updateSlot);\n    };\n    return {\n        install: function (pluginFunctions) {\n            store.update('jumpToPage', pluginFunctions.jumpToPage);\n        },\n        renderViewer: renderViewer,\n        onDocumentLoad: function (props) {\n            store.update('doc', props.doc);\n            store.update('numberOfPages', props.doc.numPages);\n        },\n        onViewerStateChange: function (viewerState) {\n            store.update('currentPage', viewerState.pageIndex);\n            return viewerState;\n        },\n        jumpToPage: function (pageIndex) {\n            var jumpTo = store.get('jumpToPage');\n            if (jumpTo) {\n                jumpTo(pageIndex);\n            }\n        },\n        CurrentPageInput: CurrentPageInputDecorator,\n        CurrentPageLabel: CurrentPageLabelDecorator,\n        GoToFirstPage: GoToFirstPageDecorator,\n        GoToFirstPageButton: GoToFirstPageButtonDecorator,\n        GoToFirstPageMenuItem: GoToFirstPageMenuItemDecorator,\n        GoToLastPage: GoToLastPageDecorator,\n        GoToLastPageButton: GoToLastPageButtonDecorator,\n        GoToLastPageMenuItem: GoToLastPageMenuItemDecorator,\n        GoToNextPage: GoToNextPageDecorator,\n        GoToNextPageButton: GoToNextPageButtonDecorator,\n        GoToNextPageMenuItem: GoToNextPageMenuItemDecorator,\n        GoToPreviousPage: GoToPreviousPageDecorator,\n        GoToPreviousPageButton: GoToPreviousPageButtonDecorator,\n        GoToPreviousPageMenuItem: GoToPreviousPageMenuItemDecorator,\n        NumberOfPages: NumberOfPagesDecorator,\n    };\n};\n\nexports.DownArrowIcon = DownArrowIcon;\nexports.NextIcon = NextIcon;\nexports.PreviousIcon = PreviousIcon;\nexports.UpArrowIcon = UpArrowIcon;\nexports.pageNavigationPlugin = pageNavigationPlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvcGFnZS1uYXZpZ2F0aW9uL2xpYi9janMvcGFnZS1uYXZpZ2F0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhDQUE2QyxFQUFFLGFBQWEsRUFBQzs7QUFFN0QsV0FBVyxtQkFBTyxDQUFDLGtGQUF3QjtBQUMzQyxZQUFZLG1CQUFPLENBQUMsNENBQU87O0FBRTNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QztBQUN2QyxpQkFBaUI7QUFDakI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsa0NBQWtDLG9EQUFvRCxVQUFVO0FBQ2hHLDZDQUE2Qyx3UkFBd1I7O0FBRXJVLDZCQUE2QixvREFBb0QsVUFBVTtBQUMzRiw2Q0FBNkMsaUlBQWlJOztBQUU5SztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGFBQWE7QUFDYjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsb0RBQW9EO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxzREFBc0Q7QUFDM0csdURBQXVELHFKQUFxSjtBQUM1TTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDZDQUE2QyxzQ0FBc0M7QUFDbkYsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLHVFQUF1RSxpQkFBaUI7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7O0FBRUEsZ0NBQWdDLG9EQUFvRCxVQUFVO0FBQzlGLDZDQUE2Qyx3UkFBd1I7O0FBRXJVLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxnSkFBZ0oscUdBQXFHO0FBQ2hULHVGQUF1RixlQUFlLDRCQUE0QjtBQUNsSTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsOERBQThELHNEQUFzRDtBQUNqSztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCwwSUFBMEk7QUFDdE07O0FBRUEseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELCtJQUErSSxvR0FBb0c7QUFDOVMseUZBQXlGLGVBQWUsNEJBQTRCO0FBQ3BJOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLDZEQUE2RCxzREFBc0Q7QUFDaEs7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsMklBQTJJO0FBQ3ZNOztBQUVBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCwrSUFBK0ksb0dBQW9HO0FBQzlTLG9GQUFvRixlQUFlLDRCQUE0QjtBQUMvSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qyw2REFBNkQsc0RBQXNEO0FBQ2hLO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELHNJQUFzSTtBQUNsTTs7QUFFQSxpQ0FBaUMsb0RBQW9ELFVBQVU7QUFDL0YsNkNBQTZDLG1JQUFtSTs7QUFFaEwsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxtSkFBbUosd0dBQXdHO0FBQ3RULHdGQUF3RixlQUFlLDBCQUEwQjtBQUNqSTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsaUVBQWlFLHNEQUFzRDtBQUNwSztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsOElBQThJO0FBQzFNOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyw4QkFBOEI7QUFDL0Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDLHlDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSwyRUFBMkUsdUJBQXVCLElBQUksdUJBQXVCLFdBQVc7QUFDeEksdURBQXVELDRCQUE0QjtBQUNuRixrREFBa0QsMERBQTBELGNBQWM7QUFDMUgsdURBQXVELG1FQUFtRSxXQUFXLGNBQWM7QUFDbkosb0RBQW9ELGdFQUFnRSxXQUFXLGNBQWM7QUFDN0kscURBQXFELHdGQUF3RixzRUFBc0UsWUFBWTtBQUMvTiw0REFBNEQsb0ZBQW9GLGdFQUFnRTtBQUNoTjtBQUNBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLG1EQUFtRCwrREFBK0QsV0FBVyxjQUFjO0FBQzNJLG9EQUFvRCx1RkFBdUYscUVBQXFFLFlBQVk7QUFDNU4sMkRBQTJELG1GQUFtRiwrREFBK0Q7QUFDN007QUFDQTtBQUNBLFdBQVcsS0FBSztBQUNoQixtREFBbUQsK0RBQStELFdBQVcsY0FBYztBQUMzSSxvREFBb0QsdUZBQXVGLHFFQUFxRSxZQUFZO0FBQzVOLDJEQUEyRCxtRkFBbUYsK0RBQStEO0FBQzdNO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsdURBQXVELG1FQUFtRSxXQUFXLGNBQWM7QUFDbkosd0RBQXdELDJGQUEyRix5RUFBeUUsWUFBWTtBQUN4TywrREFBK0QsdUZBQXVGLG1FQUFtRTtBQUN6TjtBQUNBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLG9EQUFvRCxnRUFBZ0UsV0FBVyxjQUFjO0FBQzdJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLDhFQUE4RTtBQUNoSjtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCO0FBQ3JCLGdCQUFnQjtBQUNoQixvQkFBb0I7QUFDcEIsbUJBQW1CO0FBQ25CLDRCQUE0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvcGFnZS1uYXZpZ2F0aW9uL2xpYi9janMvcGFnZS1uYXZpZ2F0aW9uLmpzPzJlZDUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG52YXIgY29yZSA9IHJlcXVpcmUoJ0ByZWFjdC1wZGYtdmlld2VyL2NvcmUnKTtcbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wTmFtZXNwYWNlKGUpIHtcbiAgICBpZiAoZSAmJiBlLl9fZXNNb2R1bGUpIHJldHVybiBlO1xuICAgIHZhciBuID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICBpZiAoZSkge1xuICAgICAgICBPYmplY3Qua2V5cyhlKS5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7XG4gICAgICAgICAgICBpZiAoayAhPT0gJ2RlZmF1bHQnKSB7XG4gICAgICAgICAgICAgICAgdmFyIGQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIGspO1xuICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuLCBrLCBkLmdldCA/IGQgOiB7XG4gICAgICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZVtrXTsgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgbltcImRlZmF1bHRcIl0gPSBlO1xuICAgIHJldHVybiBPYmplY3QuZnJlZXplKG4pO1xufVxuXG52YXIgUmVhY3RfX25hbWVzcGFjZSA9IC8qI19fUFVSRV9fKi9faW50ZXJvcE5hbWVzcGFjZShSZWFjdCk7XG5cbnZhciBEb3duQXJyb3dJY29uID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gKFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChjb3JlLkljb24sIHsgc2l6ZTogMTYgfSxcbiAgICBSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHsgZDogXCJNMi4zMiwyLjk2NmgxOS40NTJjMC41NTIsMC4wMDEsMSwwLjQ0OSwwLjk5OSwxLjAwMWMwLDAuMTgyLTAuMDUsMC4zNi0wLjE0NCwwLjUxNkwxMi45LDIwLjU1MlxcbiAgICAgICAgICAgIGMtMC4yODYsMC40NzItMC45MDEsMC42MjQtMS4zNzMsMC4zMzhjLTAuMTM4LTAuMDg0LTAuMjU0LTAuMi0wLjMzOC0wLjMzOEwxLjQ2NSw0LjQ4M0MxLjE3OSw0LjAxLDEuMzMxLDMuMzk2LDEuODA0LDMuMTFcXG4gICAgICAgICAgICBDMS45NiwzLjAxNiwyLjEzOCwyLjk2NiwyLjMyLDIuOTY2elwiIH0pKSk7IH07XG5cbnZhciBOZXh0SWNvbiA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIChSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoY29yZS5JY29uLCB7IHNpemU6IDE2IH0sXG4gICAgUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7IGQ6IFwiTTAuNTQxLDUuNjI3TDExLjY2NiwxOC4yYzAuMTgzLDAuMjA3LDAuNDk5LDAuMjI2LDAuNzA2LDAuMDQzYzAuMDE1LTAuMDE0LDAuMDMtMC4wMjgsMC4wNDMtMC4wNDNcXG4gICAgICAgICAgICBMMjMuNTQxLDUuNjI3XCIgfSkpKTsgfTtcblxuLyohICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbkNvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxyXG5cclxuUGVybWlzc2lvbiB0byB1c2UsIGNvcHksIG1vZGlmeSwgYW5kL29yIGRpc3RyaWJ1dGUgdGhpcyBzb2Z0d2FyZSBmb3IgYW55XHJcbnB1cnBvc2Ugd2l0aCBvciB3aXRob3V0IGZlZSBpcyBoZXJlYnkgZ3JhbnRlZC5cclxuXHJcblRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIgQU5EIFRIRSBBVVRIT1IgRElTQ0xBSU1TIEFMTCBXQVJSQU5USUVTIFdJVEhcclxuUkVHQVJEIFRPIFRISVMgU09GVFdBUkUgSU5DTFVESU5HIEFMTCBJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZXHJcbkFORCBGSVRORVNTLiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SIEJFIExJQUJMRSBGT1IgQU5ZIFNQRUNJQUwsIERJUkVDVCxcclxuSU5ESVJFQ1QsIE9SIENPTlNFUVVFTlRJQUwgREFNQUdFUyBPUiBBTlkgREFNQUdFUyBXSEFUU09FVkVSIFJFU1VMVElORyBGUk9NXHJcbkxPU1MgT0YgVVNFLCBEQVRBIE9SIFBST0ZJVFMsIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBORUdMSUdFTkNFIE9SXHJcbk9USEVSIFRPUlRJT1VTIEFDVElPTiwgQVJJU0lORyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBVU0UgT1JcclxuUEVSRk9STUFOQ0UgT0YgVEhJUyBTT0ZUV0FSRS5cclxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKi9cclxuXHJcbnZhciBfX2Fzc2lnbiA9IGZ1bmN0aW9uKCkge1xyXG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uIF9fYXNzaWduKHQpIHtcclxuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcclxuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcclxuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKSB0W3BdID0gc1twXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbn07XG5cbnZhciB1c2VDdXJyZW50UGFnZSA9IGZ1bmN0aW9uIChzdG9yZSkge1xuICAgIHZhciBfYSA9IFJlYWN0X19uYW1lc3BhY2UudXNlU3RhdGUoc3RvcmUuZ2V0KCdjdXJyZW50UGFnZScpIHx8IDApLCBjdXJyZW50UGFnZSA9IF9hWzBdLCBzZXRDdXJyZW50UGFnZSA9IF9hWzFdO1xuICAgIHZhciBoYW5kbGVDdXJyZW50UGFnZUNoYW5nZWQgPSBmdW5jdGlvbiAoY3VycmVudFBhZ2VJbmRleCkge1xuICAgICAgICBzZXRDdXJyZW50UGFnZShjdXJyZW50UGFnZUluZGV4KTtcbiAgICB9O1xuICAgIGNvcmUudXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHN0b3JlLnN1YnNjcmliZSgnY3VycmVudFBhZ2UnLCBoYW5kbGVDdXJyZW50UGFnZUNoYW5nZWQpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc3RvcmUudW5zdWJzY3JpYmUoJ2N1cnJlbnRQYWdlJywgaGFuZGxlQ3VycmVudFBhZ2VDaGFuZ2VkKTtcbiAgICAgICAgfTtcbiAgICB9LCBbXSk7XG4gICAgcmV0dXJuIHsgY3VycmVudFBhZ2U6IGN1cnJlbnRQYWdlIH07XG59O1xuXG52YXIgdXNlTnVtYmVyT2ZQYWdlcyA9IGZ1bmN0aW9uIChzdG9yZSkge1xuICAgIHZhciBfYSA9IFJlYWN0X19uYW1lc3BhY2UudXNlU3RhdGUoc3RvcmUuZ2V0KCdudW1iZXJPZlBhZ2VzJykgfHwgMCksIG51bWJlck9mUGFnZXMgPSBfYVswXSwgc2V0TnVtYmVyT2ZQYWdlcyA9IF9hWzFdO1xuICAgIHZhciBoYW5kbGVOdW1iZXJPZlBhZ2VzID0gZnVuY3Rpb24gKHRvdGFsKSB7XG4gICAgICAgIHNldE51bWJlck9mUGFnZXModG90YWwpO1xuICAgIH07XG4gICAgUmVhY3RfX25hbWVzcGFjZS51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBzdG9yZS5zdWJzY3JpYmUoJ251bWJlck9mUGFnZXMnLCBoYW5kbGVOdW1iZXJPZlBhZ2VzKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHN0b3JlLnVuc3Vic2NyaWJlKCdudW1iZXJPZlBhZ2VzJywgaGFuZGxlTnVtYmVyT2ZQYWdlcyk7XG4gICAgICAgIH07XG4gICAgfSwgW10pO1xuICAgIHJldHVybiB7IG51bWJlck9mUGFnZXM6IG51bWJlck9mUGFnZXMgfTtcbn07XG5cbnZhciBDdXJyZW50UGFnZUlucHV0ID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgdmFyIHN0b3JlID0gX2Euc3RvcmU7XG4gICAgdmFyIGwxMG4gPSBSZWFjdF9fbmFtZXNwYWNlLnVzZUNvbnRleHQoY29yZS5Mb2NhbGl6YXRpb25Db250ZXh0KS5sMTBuO1xuICAgIHZhciBfYiA9IFJlYWN0X19uYW1lc3BhY2UudXNlU3RhdGUoJzEnKSwgZWRpdGluZ1BhZ2UgPSBfYlswXSwgc2V0RWRpdGluZ1BhZ2UgPSBfYlsxXTtcbiAgICB2YXIgY3VycmVudFBhZ2UgPSB1c2VDdXJyZW50UGFnZShzdG9yZSkuY3VycmVudFBhZ2U7XG4gICAgdmFyIG51bWJlck9mUGFnZXMgPSB1c2VOdW1iZXJPZlBhZ2VzKHN0b3JlKS5udW1iZXJPZlBhZ2VzO1xuICAgIFJlYWN0X19uYW1lc3BhY2UudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNldEVkaXRpbmdQYWdlKFwiXCIuY29uY2F0KGN1cnJlbnRQYWdlICsgMSkpOyB9LCBbY3VycmVudFBhZ2VdKTtcbiAgICB2YXIgZ290b05leHRQYWdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbmV4dFBhZ2UgPSBjdXJyZW50UGFnZSArIDE7XG4gICAgICAgIGlmIChuZXh0UGFnZSA8IG51bWJlck9mUGFnZXMpIHtcbiAgICAgICAgICAgIHNldEVkaXRpbmdQYWdlKFwiXCIuY29uY2F0KG5leHRQYWdlICsgMSkpO1xuICAgICAgICAgICAganVtcFRvKG5leHRQYWdlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIGdvdG9QcmV2aW91c1BhZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBwcmV2aW91c1BhZ2UgPSBjdXJyZW50UGFnZSAtIDE7XG4gICAgICAgIGlmIChwcmV2aW91c1BhZ2UgPj0gMCkge1xuICAgICAgICAgICAgc2V0RWRpdGluZ1BhZ2UoXCJcIi5jb25jYXQocHJldmlvdXNQYWdlICsgMSkpO1xuICAgICAgICAgICAganVtcFRvKHByZXZpb3VzUGFnZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHZhciBqdW1wVG8gPSBmdW5jdGlvbiAocGFnZSkge1xuICAgICAgICB2YXIganVtcFRvUGFnZSA9IHN0b3JlLmdldCgnanVtcFRvUGFnZScpO1xuICAgICAgICBpZiAoanVtcFRvUGFnZSkge1xuICAgICAgICAgICAganVtcFRvUGFnZShwYWdlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIGp1bXAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBuZXdQYWdlID0gcGFyc2VJbnQoZWRpdGluZ1BhZ2UsIDEwKTtcbiAgICAgICAgZWRpdGluZ1BhZ2UgPT09ICcnIHx8IG5ld1BhZ2UgPCAxIHx8IG5ld1BhZ2UgPiBudW1iZXJPZlBhZ2VzXG4gICAgICAgICAgICA/IHNldEVkaXRpbmdQYWdlKFwiXCIuY29uY2F0KGN1cnJlbnRQYWdlICsgMSkpXG4gICAgICAgICAgICA6IGp1bXBUbyhuZXdQYWdlIC0gMSk7XG4gICAgfTtcbiAgICB2YXIga2V5ZG93blBhZ2UgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICBzd2l0Y2ggKGUua2V5KSB7XG4gICAgICAgICAgICBjYXNlICdBcnJvd1VwJzpcbiAgICAgICAgICAgICAgICBnb3RvUHJldmlvdXNQYWdlKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdBcnJvd0Rvd24nOlxuICAgICAgICAgICAgICAgIGdvdG9OZXh0UGFnZSgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnRW50ZXInOlxuICAgICAgICAgICAgICAgIGp1bXAoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIGxhYmVsID0gbDEwbiAmJiBsMTBuLnBhZ2VOYXZpZ2F0aW9uXG4gICAgICAgID8gbDEwbi5wYWdlTmF2aWdhdGlvbi5lbnRlclBhZ2VOdW1iZXJcbiAgICAgICAgOiAnRW50ZXIgYSBwYWdlIG51bWJlcic7XG4gICAgcmV0dXJuIChSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcInJwdi1wYWdlLW5hdmlnYXRpb25fX2N1cnJlbnQtcGFnZS1pbnB1dFwiIH0sXG4gICAgICAgIFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChjb3JlLlRleHRCb3gsIHsgYXJpYUxhYmVsOiBsYWJlbCwgdGVzdElkOiBcInBhZ2UtbmF2aWdhdGlvbl9fY3VycmVudC1wYWdlLWlucHV0XCIsIHR5cGU6IFwidGV4dFwiLCB2YWx1ZTogZWRpdGluZ1BhZ2UsIG9uQ2hhbmdlOiBzZXRFZGl0aW5nUGFnZSwgb25LZXlEb3duOiBrZXlkb3duUGFnZSB9KSkpO1xufTtcblxudmFyIEZldGNoTGFiZWxzID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gX2EuY2hpbGRyZW4sIGRvYyA9IF9hLmRvYztcbiAgICB2YXIgaXNNb3VudGVkID0gY29yZS51c2VJc01vdW50ZWQoKTtcbiAgICB2YXIgX2IgPSBSZWFjdF9fbmFtZXNwYWNlLnVzZVN0YXRlKHtcbiAgICAgICAgbG9hZGluZzogdHJ1ZSxcbiAgICAgICAgbGFiZWxzOiBbXSxcbiAgICB9KSwgc3RhdHVzID0gX2JbMF0sIHNldFN0YXR1cyA9IF9iWzFdO1xuICAgIFJlYWN0X19uYW1lc3BhY2UudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZG9jLmdldFBhZ2VMYWJlbHMoKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgIGlzTW91bnRlZC5jdXJyZW50ICYmIHNldFN0YXR1cyh7IGxvYWRpbmc6IGZhbHNlLCBsYWJlbHM6IHJlc3VsdCB8fCBbXSB9KTtcbiAgICAgICAgfSk7XG4gICAgfSwgW2RvYy5sb2FkaW5nVGFzay5kb2NJZF0pO1xuICAgIHJldHVybiBzdGF0dXMubG9hZGluZyA/IFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChSZWFjdF9fbmFtZXNwYWNlLkZyYWdtZW50LCBudWxsKSA6IGNoaWxkcmVuKHN0YXR1cy5sYWJlbHMpO1xufTtcblxudmFyIHVzZURvY3VtZW50ID0gZnVuY3Rpb24gKHN0b3JlKSB7XG4gICAgdmFyIF9hID0gUmVhY3RfX25hbWVzcGFjZS51c2VTdGF0ZShzdG9yZS5nZXQoJ2RvYycpKSwgY3VycmVudERvYyA9IF9hWzBdLCBzZXRDdXJyZW50RG9jID0gX2FbMV07XG4gICAgdmFyIGhhbmRsZURvY3VtZW50Q2hhbmdlZCA9IGZ1bmN0aW9uIChkb2MpIHtcbiAgICAgICAgc2V0Q3VycmVudERvYyhkb2MpO1xuICAgIH07XG4gICAgUmVhY3RfX25hbWVzcGFjZS51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBzdG9yZS5zdWJzY3JpYmUoJ2RvYycsIGhhbmRsZURvY3VtZW50Q2hhbmdlZCk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzdG9yZS51bnN1YnNjcmliZSgnZG9jJywgaGFuZGxlRG9jdW1lbnRDaGFuZ2VkKTtcbiAgICAgICAgfTtcbiAgICB9LCBbXSk7XG4gICAgcmV0dXJuIGN1cnJlbnREb2M7XG59O1xuXG52YXIgQ3VycmVudFBhZ2VMYWJlbCA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuLCBzdG9yZSA9IF9hLnN0b3JlO1xuICAgIHZhciBjdXJyZW50RG9jID0gdXNlRG9jdW1lbnQoc3RvcmUpO1xuICAgIHZhciBjdXJyZW50UGFnZSA9IHVzZUN1cnJlbnRQYWdlKHN0b3JlKS5jdXJyZW50UGFnZTtcbiAgICB2YXIgbnVtYmVyT2ZQYWdlcyA9IHVzZU51bWJlck9mUGFnZXMoc3RvcmUpLm51bWJlck9mUGFnZXM7XG4gICAgdmFyIGRlZmF1bHRDaGlsZHJlbiA9IGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KFJlYWN0X19uYW1lc3BhY2UuRnJhZ21lbnQsIG51bGwsIHByb3BzLmN1cnJlbnRQYWdlICsgMSk7IH07XG4gICAgdmFyIHJlbmRlciA9IGNoaWxkcmVuIHx8IGRlZmF1bHRDaGlsZHJlbjtcbiAgICByZXR1cm4gY3VycmVudERvYyA/IChSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoRmV0Y2hMYWJlbHMsIHsgZG9jOiBjdXJyZW50RG9jIH0sIGZ1bmN0aW9uIChsYWJlbHMpIHtcbiAgICAgICAgdmFyIHBhZ2VMYWJlbCA9IGxhYmVscy5sZW5ndGggPT09IG51bWJlck9mUGFnZXMgJiYgbnVtYmVyT2ZQYWdlcyA+IDAgPyBsYWJlbHNbY3VycmVudFBhZ2VdIDogJyc7XG4gICAgICAgIHJldHVybiByZW5kZXIoe1xuICAgICAgICAgICAgY3VycmVudFBhZ2U6IGN1cnJlbnRQYWdlLFxuICAgICAgICAgICAgbnVtYmVyT2ZQYWdlczogbnVtYmVyT2ZQYWdlcyxcbiAgICAgICAgICAgIHBhZ2VMYWJlbDogcGFnZUxhYmVsLFxuICAgICAgICB9KTtcbiAgICB9KSkgOiAoUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KFJlYWN0X19uYW1lc3BhY2UuRnJhZ21lbnQsIG51bGwpKTtcbn07XG5cbnZhciBVcEFycm93SWNvbiA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIChSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoY29yZS5JY29uLCB7IHNpemU6IDE2IH0sXG4gICAgUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7IGQ6IFwiTTIxLjc4MywyMS4wMzRIMi4zMzJjLTAuNTUyLDAtMS0wLjQ0OC0xLTFjMC0wLjE4MiwwLjA1LTAuMzYxLDAuMTQ0LTAuNTE3TDExLjIsMy40NDhcXG4gICAgICAgICAgICBjMC4yODYtMC40NzIsMC45MDEtMC42MjQsMS4zNzMtMC4zMzhjMC4xMzgsMC4wODQsMC4yNTQsMC4yLDAuMzM4LDAuMzM4bDkuNzI2LDE2LjA2OWMwLjI4NiwwLjQ3MywwLjEzNCwxLjA4Ny0wLjMzOSwxLjM3M1xcbiAgICAgICAgICAgIEMyMi4xNDMsMjAuOTg0LDIxLjk2NSwyMS4wMzQsMjEuNzgzLDIxLjAzNHpcIiB9KSkpOyB9O1xuXG52YXIgVE9PTFRJUF9PRkZTRVQkMyA9IHsgbGVmdDogMCwgdG9wOiA4IH07XG52YXIgR29Ub0ZpcnN0UGFnZUJ1dHRvbiA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBpc0Rpc2FibGVkID0gX2EuaXNEaXNhYmxlZCwgb25DbGljayA9IF9hLm9uQ2xpY2s7XG4gICAgdmFyIGwxMG4gPSBSZWFjdF9fbmFtZXNwYWNlLnVzZUNvbnRleHQoY29yZS5Mb2NhbGl6YXRpb25Db250ZXh0KS5sMTBuO1xuICAgIHZhciBsYWJlbCA9IGwxMG4gJiYgbDEwbi5wYWdlTmF2aWdhdGlvbiA/IGwxMG4ucGFnZU5hdmlnYXRpb24uZ29Ub0ZpcnN0UGFnZSA6ICdGaXJzdCBwYWdlJztcbiAgICByZXR1cm4gKFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChjb3JlLlRvb2x0aXAsIHsgYXJpYUNvbnRyb2xzU3VmZml4OiBcInBhZ2UtbmF2aWdhdGlvbi1maXJzdFwiLCBwb3NpdGlvbjogY29yZS5Qb3NpdGlvbi5Cb3R0b21DZW50ZXIsIHRhcmdldDogUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KGNvcmUuTWluaW1hbEJ1dHRvbiwgeyBhcmlhTGFiZWw6IGxhYmVsLCBpc0Rpc2FibGVkOiBpc0Rpc2FibGVkLCB0ZXN0SWQ6IFwicGFnZS1uYXZpZ2F0aW9uX19maXJzdC1idXR0b25cIiwgb25DbGljazogb25DbGljayB9LFxuICAgICAgICAgICAgUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KFVwQXJyb3dJY29uLCBudWxsKSksIGNvbnRlbnQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGxhYmVsOyB9LCBvZmZzZXQ6IFRPT0xUSVBfT0ZGU0VUJDMgfSkpO1xufTtcblxudmFyIEdvVG9GaXJzdFBhZ2UgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBfYS5jaGlsZHJlbiwgc3RvcmUgPSBfYS5zdG9yZTtcbiAgICB2YXIgY3VycmVudFBhZ2UgPSB1c2VDdXJyZW50UGFnZShzdG9yZSkuY3VycmVudFBhZ2U7XG4gICAgdmFyIGdvVG9GaXJzdFBhZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBqdW1wVG9QYWdlID0gc3RvcmUuZ2V0KCdqdW1wVG9QYWdlJyk7XG4gICAgICAgIGlmIChqdW1wVG9QYWdlKSB7XG4gICAgICAgICAgICBqdW1wVG9QYWdlKDApO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgZGVmYXVsdENoaWxkcmVuID0gZnVuY3Rpb24gKHByb3BzKSB7IHJldHVybiAoUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KEdvVG9GaXJzdFBhZ2VCdXR0b24sIHsgaXNEaXNhYmxlZDogcHJvcHMuaXNEaXNhYmxlZCwgb25DbGljazogcHJvcHMub25DbGljayB9KSk7IH07XG4gICAgdmFyIHJlbmRlciA9IGNoaWxkcmVuIHx8IGRlZmF1bHRDaGlsZHJlbjtcbiAgICByZXR1cm4gcmVuZGVyKHtcbiAgICAgICAgaXNEaXNhYmxlZDogY3VycmVudFBhZ2UgPT09IDAsXG4gICAgICAgIG9uQ2xpY2s6IGdvVG9GaXJzdFBhZ2UsXG4gICAgfSk7XG59O1xuXG52YXIgR29Ub0ZpcnN0UGFnZU1lbnVJdGVtID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgdmFyIGlzRGlzYWJsZWQgPSBfYS5pc0Rpc2FibGVkLCBvbkNsaWNrID0gX2Eub25DbGljaztcbiAgICB2YXIgbDEwbiA9IFJlYWN0X19uYW1lc3BhY2UudXNlQ29udGV4dChjb3JlLkxvY2FsaXphdGlvbkNvbnRleHQpLmwxMG47XG4gICAgdmFyIGxhYmVsID0gbDEwbiAmJiBsMTBuLnBhZ2VOYXZpZ2F0aW9uID8gbDEwbi5wYWdlTmF2aWdhdGlvbi5nb1RvRmlyc3RQYWdlIDogJ0ZpcnN0IHBhZ2UnO1xuICAgIHJldHVybiAoUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KGNvcmUuTWVudUl0ZW0sIHsgaWNvbjogUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KFVwQXJyb3dJY29uLCBudWxsKSwgaXNEaXNhYmxlZDogaXNEaXNhYmxlZCwgdGVzdElkOiBcInBhZ2UtbmF2aWdhdGlvbl9fZmlyc3QtbWVudVwiLCBvbkNsaWNrOiBvbkNsaWNrIH0sIGxhYmVsKSk7XG59O1xuXG52YXIgVE9PTFRJUF9PRkZTRVQkMiA9IHsgbGVmdDogMCwgdG9wOiA4IH07XG52YXIgR29Ub0xhc3RQYWdlQnV0dG9uID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgdmFyIGlzRGlzYWJsZWQgPSBfYS5pc0Rpc2FibGVkLCBvbkNsaWNrID0gX2Eub25DbGljaztcbiAgICB2YXIgbDEwbiA9IFJlYWN0X19uYW1lc3BhY2UudXNlQ29udGV4dChjb3JlLkxvY2FsaXphdGlvbkNvbnRleHQpLmwxMG47XG4gICAgdmFyIGxhYmVsID0gbDEwbiAmJiBsMTBuLnBhZ2VOYXZpZ2F0aW9uID8gbDEwbi5wYWdlTmF2aWdhdGlvbi5nb1RvTGFzdFBhZ2UgOiAnTGFzdCBwYWdlJztcbiAgICByZXR1cm4gKFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChjb3JlLlRvb2x0aXAsIHsgYXJpYUNvbnRyb2xzU3VmZml4OiBcInBhZ2UtbmF2aWdhdGlvbi1sYXN0XCIsIHBvc2l0aW9uOiBjb3JlLlBvc2l0aW9uLkJvdHRvbUNlbnRlciwgdGFyZ2V0OiBSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoY29yZS5NaW5pbWFsQnV0dG9uLCB7IGFyaWFMYWJlbDogbGFiZWwsIGlzRGlzYWJsZWQ6IGlzRGlzYWJsZWQsIHRlc3RJZDogXCJwYWdlLW5hdmlnYXRpb25fX2xhc3QtYnV0dG9uXCIsIG9uQ2xpY2s6IG9uQ2xpY2sgfSxcbiAgICAgICAgICAgIFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChEb3duQXJyb3dJY29uLCBudWxsKSksIGNvbnRlbnQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGxhYmVsOyB9LCBvZmZzZXQ6IFRPT0xUSVBfT0ZGU0VUJDIgfSkpO1xufTtcblxudmFyIEdvVG9MYXN0UGFnZSA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuLCBzdG9yZSA9IF9hLnN0b3JlO1xuICAgIHZhciBjdXJyZW50UGFnZSA9IHVzZUN1cnJlbnRQYWdlKHN0b3JlKS5jdXJyZW50UGFnZTtcbiAgICB2YXIgbnVtYmVyT2ZQYWdlcyA9IHVzZU51bWJlck9mUGFnZXMoc3RvcmUpLm51bWJlck9mUGFnZXM7XG4gICAgdmFyIGdvVG9MYXN0UGFnZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGp1bXBUb1BhZ2UgPSBzdG9yZS5nZXQoJ2p1bXBUb1BhZ2UnKTtcbiAgICAgICAgaWYgKGp1bXBUb1BhZ2UpIHtcbiAgICAgICAgICAgIGp1bXBUb1BhZ2UobnVtYmVyT2ZQYWdlcyAtIDEpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgZGVmYXVsdENoaWxkcmVuID0gZnVuY3Rpb24gKHByb3BzKSB7IHJldHVybiAoUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KEdvVG9MYXN0UGFnZUJ1dHRvbiwgeyBpc0Rpc2FibGVkOiBwcm9wcy5pc0Rpc2FibGVkLCBvbkNsaWNrOiBwcm9wcy5vbkNsaWNrIH0pKTsgfTtcbiAgICB2YXIgcmVuZGVyID0gY2hpbGRyZW4gfHwgZGVmYXVsdENoaWxkcmVuO1xuICAgIHJldHVybiByZW5kZXIoe1xuICAgICAgICBpc0Rpc2FibGVkOiBjdXJyZW50UGFnZSArIDEgPj0gbnVtYmVyT2ZQYWdlcyxcbiAgICAgICAgb25DbGljazogZ29Ub0xhc3RQYWdlLFxuICAgIH0pO1xufTtcblxudmFyIEdvVG9MYXN0UGFnZU1lbnVJdGVtID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgdmFyIGlzRGlzYWJsZWQgPSBfYS5pc0Rpc2FibGVkLCBvbkNsaWNrID0gX2Eub25DbGljaztcbiAgICB2YXIgbDEwbiA9IFJlYWN0X19uYW1lc3BhY2UudXNlQ29udGV4dChjb3JlLkxvY2FsaXphdGlvbkNvbnRleHQpLmwxMG47XG4gICAgdmFyIGxhYmVsID0gbDEwbiAmJiBsMTBuLnBhZ2VOYXZpZ2F0aW9uID8gbDEwbi5wYWdlTmF2aWdhdGlvbi5nb1RvTGFzdFBhZ2UgOiAnTGFzdCBwYWdlJztcbiAgICByZXR1cm4gKFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChjb3JlLk1lbnVJdGVtLCB7IGljb246IFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChEb3duQXJyb3dJY29uLCBudWxsKSwgaXNEaXNhYmxlZDogaXNEaXNhYmxlZCwgdGVzdElkOiBcInBhZ2UtbmF2aWdhdGlvbl9fbGFzdC1tZW51XCIsIG9uQ2xpY2s6IG9uQ2xpY2sgfSwgbGFiZWwpKTtcbn07XG5cbnZhciBUT09MVElQX09GRlNFVCQxID0geyBsZWZ0OiAwLCB0b3A6IDggfTtcbnZhciBHb1RvTmV4dFBhZ2VCdXR0b24gPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgaXNEaXNhYmxlZCA9IF9hLmlzRGlzYWJsZWQsIG9uQ2xpY2sgPSBfYS5vbkNsaWNrO1xuICAgIHZhciBsMTBuID0gUmVhY3RfX25hbWVzcGFjZS51c2VDb250ZXh0KGNvcmUuTG9jYWxpemF0aW9uQ29udGV4dCkubDEwbjtcbiAgICB2YXIgbGFiZWwgPSBsMTBuICYmIGwxMG4ucGFnZU5hdmlnYXRpb24gPyBsMTBuLnBhZ2VOYXZpZ2F0aW9uLmdvVG9OZXh0UGFnZSA6ICdOZXh0IHBhZ2UnO1xuICAgIHJldHVybiAoUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KGNvcmUuVG9vbHRpcCwgeyBhcmlhQ29udHJvbHNTdWZmaXg6IFwicGFnZS1uYXZpZ2F0aW9uLW5leHRcIiwgcG9zaXRpb246IGNvcmUuUG9zaXRpb24uQm90dG9tQ2VudGVyLCB0YXJnZXQ6IFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChjb3JlLk1pbmltYWxCdXR0b24sIHsgYXJpYUxhYmVsOiBsYWJlbCwgaXNEaXNhYmxlZDogaXNEaXNhYmxlZCwgdGVzdElkOiBcInBhZ2UtbmF2aWdhdGlvbl9fbmV4dC1idXR0b25cIiwgb25DbGljazogb25DbGljayB9LFxuICAgICAgICAgICAgUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KE5leHRJY29uLCBudWxsKSksIGNvbnRlbnQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGxhYmVsOyB9LCBvZmZzZXQ6IFRPT0xUSVBfT0ZGU0VUJDEgfSkpO1xufTtcblxudmFyIEdvVG9OZXh0UGFnZSA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBjaGlsZHJlbiA9IF9hLmNoaWxkcmVuLCBzdG9yZSA9IF9hLnN0b3JlO1xuICAgIHZhciBjdXJyZW50UGFnZSA9IHVzZUN1cnJlbnRQYWdlKHN0b3JlKS5jdXJyZW50UGFnZTtcbiAgICB2YXIgbnVtYmVyT2ZQYWdlcyA9IHVzZU51bWJlck9mUGFnZXMoc3RvcmUpLm51bWJlck9mUGFnZXM7XG4gICAgdmFyIGdvVG9OZXh0UGFnZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGp1bXBUb1BhZ2UgPSBzdG9yZS5nZXQoJ2p1bXBUb1BhZ2UnKTtcbiAgICAgICAgaWYgKGp1bXBUb1BhZ2UpIHtcbiAgICAgICAgICAgIGp1bXBUb1BhZ2UoY3VycmVudFBhZ2UgKyAxKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIGRlZmF1bHRDaGlsZHJlbiA9IGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gKFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChHb1RvTmV4dFBhZ2VCdXR0b24sIHsgb25DbGljazogcHJvcHMub25DbGljaywgaXNEaXNhYmxlZDogcHJvcHMuaXNEaXNhYmxlZCB9KSk7IH07XG4gICAgdmFyIHJlbmRlciA9IGNoaWxkcmVuIHx8IGRlZmF1bHRDaGlsZHJlbjtcbiAgICByZXR1cm4gcmVuZGVyKHtcbiAgICAgICAgaXNEaXNhYmxlZDogY3VycmVudFBhZ2UgKyAxID49IG51bWJlck9mUGFnZXMsXG4gICAgICAgIG9uQ2xpY2s6IGdvVG9OZXh0UGFnZSxcbiAgICB9KTtcbn07XG5cbnZhciBHb1RvTmV4dFBhZ2VNZW51SXRlbSA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBpc0Rpc2FibGVkID0gX2EuaXNEaXNhYmxlZCwgb25DbGljayA9IF9hLm9uQ2xpY2s7XG4gICAgdmFyIGwxMG4gPSBSZWFjdF9fbmFtZXNwYWNlLnVzZUNvbnRleHQoY29yZS5Mb2NhbGl6YXRpb25Db250ZXh0KS5sMTBuO1xuICAgIHZhciBsYWJlbCA9IGwxMG4gJiYgbDEwbi5wYWdlTmF2aWdhdGlvbiA/IGwxMG4ucGFnZU5hdmlnYXRpb24uZ29Ub05leHRQYWdlIDogJ05leHQgcGFnZSc7XG4gICAgcmV0dXJuIChSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoY29yZS5NZW51SXRlbSwgeyBpY29uOiBSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoTmV4dEljb24sIG51bGwpLCBpc0Rpc2FibGVkOiBpc0Rpc2FibGVkLCB0ZXN0SWQ6IFwicGFnZS1uYXZpZ2F0aW9uX19uZXh0LW1lbnVcIiwgb25DbGljazogb25DbGljayB9LCBsYWJlbCkpO1xufTtcblxudmFyIFByZXZpb3VzSWNvbiA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIChSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoY29yZS5JY29uLCB7IHNpemU6IDE2IH0sXG4gICAgUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7IGQ6IFwiTTIzLjUzNSwxOC4zNzNMMTIuNDA5LDUuOGMtMC4xODMtMC4yMDctMC40OTktMC4yMjYtMC43MDYtMC4wNDNDMTEuNjg4LDUuNzcsMTEuNjc0LDUuNzg1LDExLjY2LDUuOFxcbiAgICAgICAgICAgIEwwLjUzNSwxOC4zNzNcIiB9KSkpOyB9O1xuXG52YXIgVE9PTFRJUF9PRkZTRVQgPSB7IGxlZnQ6IDAsIHRvcDogOCB9O1xudmFyIEdvVG9QcmV2aW91c1BhZ2VCdXR0b24gPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgaXNEaXNhYmxlZCA9IF9hLmlzRGlzYWJsZWQsIG9uQ2xpY2sgPSBfYS5vbkNsaWNrO1xuICAgIHZhciBsMTBuID0gUmVhY3RfX25hbWVzcGFjZS51c2VDb250ZXh0KGNvcmUuTG9jYWxpemF0aW9uQ29udGV4dCkubDEwbjtcbiAgICB2YXIgbGFiZWwgPSBsMTBuICYmIGwxMG4ucGFnZU5hdmlnYXRpb25cbiAgICAgICAgPyBsMTBuLnBhZ2VOYXZpZ2F0aW9uLmdvVG9QcmV2aW91c1BhZ2VcbiAgICAgICAgOiAnUHJldmlvdXMgcGFnZSc7XG4gICAgcmV0dXJuIChSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoY29yZS5Ub29sdGlwLCB7IGFyaWFDb250cm9sc1N1ZmZpeDogXCJwYWdlLW5hdmlnYXRpb24tcHJldmlvdXNcIiwgcG9zaXRpb246IGNvcmUuUG9zaXRpb24uQm90dG9tQ2VudGVyLCB0YXJnZXQ6IFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChjb3JlLk1pbmltYWxCdXR0b24sIHsgYXJpYUxhYmVsOiBsYWJlbCwgaXNEaXNhYmxlZDogaXNEaXNhYmxlZCwgdGVzdElkOiBcInBhZ2UtbmF2aWdhdGlvbl9fcHJldmlvdXMtYnV0dG9uXCIsIG9uQ2xpY2s6IG9uQ2xpY2sgfSxcbiAgICAgICAgICAgIFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChQcmV2aW91c0ljb24sIG51bGwpKSwgY29udGVudDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbGFiZWw7IH0sIG9mZnNldDogVE9PTFRJUF9PRkZTRVQgfSkpO1xufTtcblxudmFyIEdvVG9QcmV2aW91c1BhZ2UgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgc3RvcmUgPSBfYS5zdG9yZSwgY2hpbGRyZW4gPSBfYS5jaGlsZHJlbjtcbiAgICB2YXIgY3VycmVudFBhZ2UgPSB1c2VDdXJyZW50UGFnZShzdG9yZSkuY3VycmVudFBhZ2U7XG4gICAgdmFyIGdvVG9QcmV2aW91c1BhZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBqdW1wVG9QYWdlID0gc3RvcmUuZ2V0KCdqdW1wVG9QYWdlJyk7XG4gICAgICAgIGlmIChqdW1wVG9QYWdlKSB7XG4gICAgICAgICAgICBqdW1wVG9QYWdlKGN1cnJlbnRQYWdlIC0gMSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHZhciBkZWZhdWx0Q2hpbGRyZW4gPSBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIChSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoR29Ub1ByZXZpb3VzUGFnZUJ1dHRvbiwgeyBpc0Rpc2FibGVkOiBwcm9wcy5pc0Rpc2FibGVkLCBvbkNsaWNrOiBwcm9wcy5vbkNsaWNrIH0pKTsgfTtcbiAgICB2YXIgcmVuZGVyID0gY2hpbGRyZW4gfHwgZGVmYXVsdENoaWxkcmVuO1xuICAgIHJldHVybiByZW5kZXIoe1xuICAgICAgICBpc0Rpc2FibGVkOiBjdXJyZW50UGFnZSA8PSAwLFxuICAgICAgICBvbkNsaWNrOiBnb1RvUHJldmlvdXNQYWdlLFxuICAgIH0pO1xufTtcblxudmFyIEdvVG9QcmV2aW91c1BhZ2VNZW51SXRlbSA9IGZ1bmN0aW9uIChfYSkge1xuICAgIHZhciBpc0Rpc2FibGVkID0gX2EuaXNEaXNhYmxlZCwgb25DbGljayA9IF9hLm9uQ2xpY2s7XG4gICAgdmFyIGwxMG4gPSBSZWFjdF9fbmFtZXNwYWNlLnVzZUNvbnRleHQoY29yZS5Mb2NhbGl6YXRpb25Db250ZXh0KS5sMTBuO1xuICAgIHZhciBsYWJlbCA9IGwxMG4gJiYgbDEwbi5wYWdlTmF2aWdhdGlvblxuICAgICAgICA/IGwxMG4ucGFnZU5hdmlnYXRpb24uZ29Ub1ByZXZpb3VzUGFnZVxuICAgICAgICA6ICdQcmV2aW91cyBwYWdlJztcbiAgICByZXR1cm4gKFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChjb3JlLk1lbnVJdGVtLCB7IGljb246IFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChQcmV2aW91c0ljb24sIG51bGwpLCBpc0Rpc2FibGVkOiBpc0Rpc2FibGVkLCB0ZXN0SWQ6IFwicGFnZS1uYXZpZ2F0aW9uX19wcmV2aW91cy1tZW51XCIsIG9uQ2xpY2s6IG9uQ2xpY2sgfSwgbGFiZWwpKTtcbn07XG5cbnZhciBOdW1iZXJPZlBhZ2VzID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gX2EuY2hpbGRyZW4sIHN0b3JlID0gX2Euc3RvcmU7XG4gICAgdmFyIG51bWJlck9mUGFnZXMgPSB1c2VOdW1iZXJPZlBhZ2VzKHN0b3JlKS5udW1iZXJPZlBhZ2VzO1xuICAgIHJldHVybiBjaGlsZHJlbiA/IGNoaWxkcmVuKHsgbnVtYmVyT2ZQYWdlczogbnVtYmVyT2ZQYWdlcyB9KSA6IFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChSZWFjdF9fbmFtZXNwYWNlLkZyYWdtZW50LCBudWxsLCBudW1iZXJPZlBhZ2VzKTtcbn07XG5cbnZhciBTaG9ydGN1dEhhbmRsZXIgPSBmdW5jdGlvbiAoX2EpIHtcbiAgICB2YXIgY29udGFpbmVyUmVmID0gX2EuY29udGFpbmVyUmVmLCBudW1QYWdlcyA9IF9hLm51bVBhZ2VzLCBzdG9yZSA9IF9hLnN0b3JlO1xuICAgIHZhciBjdXJyZW50UGFnZSA9IHVzZUN1cnJlbnRQYWdlKHN0b3JlKS5jdXJyZW50UGFnZTtcbiAgICB2YXIgY3VycmVudFBhZ2VSZWYgPSBSZWFjdF9fbmFtZXNwYWNlLnVzZVJlZihjdXJyZW50UGFnZSk7XG4gICAgY3VycmVudFBhZ2VSZWYuY3VycmVudCA9IGN1cnJlbnRQYWdlO1xuICAgIHZhciBfYiA9IFJlYWN0X19uYW1lc3BhY2UudXNlU3RhdGUodHJ1ZSksIGlzTW91c2VJbnNpZGUgPSBfYlswXSwgc2V0TW91c2VJbnNpZGUgPSBfYlsxXTtcbiAgICB2YXIgaGFuZGxlTW91c2VFbnRlciA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNldE1vdXNlSW5zaWRlKHRydWUpOyB9O1xuICAgIHZhciBoYW5kbGVNb3VzZUxlYXZlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gc2V0TW91c2VJbnNpZGUoZmFsc2UpOyB9O1xuICAgIHZhciBnb1RvTmV4dFBhZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBqdW1wVG9QYWdlID0gc3RvcmUuZ2V0KCdqdW1wVG9QYWdlJyk7XG4gICAgICAgIHZhciB0YXJnZXRQYWdlID0gY3VycmVudFBhZ2VSZWYuY3VycmVudCArIDE7XG4gICAgICAgIGlmIChqdW1wVG9QYWdlICYmIHRhcmdldFBhZ2UgPCBudW1QYWdlcykge1xuICAgICAgICAgICAganVtcFRvUGFnZSh0YXJnZXRQYWdlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIGdvVG9QcmV2aW91c1BhZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBqdW1wVG9QYWdlID0gc3RvcmUuZ2V0KCdqdW1wVG9QYWdlJyk7XG4gICAgICAgIHZhciB0YXJnZXRQYWdlID0gY3VycmVudFBhZ2VSZWYuY3VycmVudCAtIDE7XG4gICAgICAgIGlmIChqdW1wVG9QYWdlICYmIHRhcmdldFBhZ2UgPj0gMCkge1xuICAgICAgICAgICAganVtcFRvUGFnZSh0YXJnZXRQYWdlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIGhhbmRsZUtleWRvd24gPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICB2YXIgY29udGFpbmVyRWxlID0gY29udGFpbmVyUmVmLmN1cnJlbnQ7XG4gICAgICAgIHZhciBzaG91bGRIYW5kbGVTaG9ydGN1dHMgPSBpc01vdXNlSW5zaWRlIHx8IChkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmIGNvbnRhaW5lckVsZS5jb250YWlucyhkb2N1bWVudC5hY3RpdmVFbGVtZW50KSk7XG4gICAgICAgIGlmICghY29udGFpbmVyRWxlIHx8ICFzaG91bGRIYW5kbGVTaG9ydGN1dHMpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgc2hvdWxkR29Ub05leHRQYWdlID0gKGUuYWx0S2V5ICYmIGUua2V5ID09PSAnQXJyb3dEb3duJykgfHwgKCFlLnNoaWZ0S2V5ICYmICFlLmFsdEtleSAmJiBlLmtleSA9PT0gJ1BhZ2VEb3duJyk7XG4gICAgICAgIHZhciBzaG91bGRHb1RvUHJldmlvdXNQYWdlID0gKGUuYWx0S2V5ICYmIGUua2V5ID09PSAnQXJyb3dVcCcpIHx8ICghZS5zaGlmdEtleSAmJiAhZS5hbHRLZXkgJiYgZS5rZXkgPT09ICdQYWdlVXAnKTtcbiAgICAgICAgaWYgKHNob3VsZEdvVG9OZXh0UGFnZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZ29Ub05leHRQYWdlKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoc2hvdWxkR29Ub1ByZXZpb3VzUGFnZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZ29Ub1ByZXZpb3VzUGFnZSgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBSZWFjdF9fbmFtZXNwYWNlLnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBjb250YWluZXJFbGUgPSBjb250YWluZXJSZWYuY3VycmVudDtcbiAgICAgICAgaWYgKCFjb250YWluZXJFbGUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlS2V5ZG93bik7XG4gICAgICAgIGNvbnRhaW5lckVsZS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgaGFuZGxlTW91c2VFbnRlcik7XG4gICAgICAgIGNvbnRhaW5lckVsZS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgaGFuZGxlTW91c2VMZWF2ZSk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlS2V5ZG93bik7XG4gICAgICAgICAgICBjb250YWluZXJFbGUucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VlbnRlcicsIGhhbmRsZU1vdXNlRW50ZXIpO1xuICAgICAgICAgICAgY29udGFpbmVyRWxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCBoYW5kbGVNb3VzZUxlYXZlKTtcbiAgICAgICAgfTtcbiAgICB9LCBbY29udGFpbmVyUmVmLmN1cnJlbnRdKTtcbiAgICByZXR1cm4gUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KFJlYWN0X19uYW1lc3BhY2UuRnJhZ21lbnQsIG51bGwpO1xufTtcblxudmFyIHBhZ2VOYXZpZ2F0aW9uUGx1Z2luID0gZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgdmFyIHBhZ2VOYXZpZ2F0aW9uUGx1Z2luUHJvcHMgPSBSZWFjdF9fbmFtZXNwYWNlLnVzZU1lbW8oZnVuY3Rpb24gKCkgeyByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgeyBlbmFibGVTaG9ydGN1dHM6IHRydWUgfSwgcHJvcHMpOyB9LCBbXSk7XG4gICAgdmFyIHN0b3JlID0gUmVhY3RfX25hbWVzcGFjZS51c2VNZW1vKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvcmUuY3JlYXRlU3RvcmUoKTsgfSwgW10pO1xuICAgIHZhciBDdXJyZW50UGFnZUlucHV0RGVjb3JhdG9yID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KEN1cnJlbnRQYWdlSW5wdXQsIHsgc3RvcmU6IHN0b3JlIH0pOyB9O1xuICAgIHZhciBDdXJyZW50UGFnZUxhYmVsRGVjb3JhdG9yID0gZnVuY3Rpb24gKHByb3BzKSB7IHJldHVybiBSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoQ3VycmVudFBhZ2VMYWJlbCwgX19hc3NpZ24oe30sIHByb3BzLCB7IHN0b3JlOiBzdG9yZSB9KSk7IH07XG4gICAgdmFyIEdvVG9GaXJzdFBhZ2VEZWNvcmF0b3IgPSBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChHb1RvRmlyc3RQYWdlLCBfX2Fzc2lnbih7fSwgcHJvcHMsIHsgc3RvcmU6IHN0b3JlIH0pKTsgfTtcbiAgICB2YXIgR29Ub0ZpcnN0UGFnZUJ1dHRvbkRlY29yYXRvciA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIChSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoR29Ub0ZpcnN0UGFnZURlY29yYXRvciwgbnVsbCwgZnVuY3Rpb24gKHByb3BzKSB7IHJldHVybiBSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoR29Ub0ZpcnN0UGFnZUJ1dHRvbiwgX19hc3NpZ24oe30sIHByb3BzKSk7IH0pKTsgfTtcbiAgICB2YXIgR29Ub0ZpcnN0UGFnZU1lbnVJdGVtRGVjb3JhdG9yID0gZnVuY3Rpb24gKHByb3BzKSB7IHJldHVybiAoUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KEdvVG9GaXJzdFBhZ2VEZWNvcmF0b3IsIG51bGwsIGZ1bmN0aW9uIChwKSB7IHJldHVybiAoUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KEdvVG9GaXJzdFBhZ2VNZW51SXRlbSwgeyBpc0Rpc2FibGVkOiBwLmlzRGlzYWJsZWQsIG9uQ2xpY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHAub25DbGljaygpO1xuICAgICAgICAgICAgcHJvcHMub25DbGljaygpO1xuICAgICAgICB9IH0pKTsgfSkpOyB9O1xuICAgIHZhciBHb1RvTGFzdFBhZ2VEZWNvcmF0b3IgPSBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChHb1RvTGFzdFBhZ2UsIF9fYXNzaWduKHt9LCBwcm9wcywgeyBzdG9yZTogc3RvcmUgfSkpOyB9O1xuICAgIHZhciBHb1RvTGFzdFBhZ2VCdXR0b25EZWNvcmF0b3IgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAoUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KEdvVG9MYXN0UGFnZURlY29yYXRvciwgbnVsbCwgZnVuY3Rpb24gKHByb3BzKSB7IHJldHVybiBSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoR29Ub0xhc3RQYWdlQnV0dG9uLCBfX2Fzc2lnbih7fSwgcHJvcHMpKTsgfSkpOyB9O1xuICAgIHZhciBHb1RvTGFzdFBhZ2VNZW51SXRlbURlY29yYXRvciA9IGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gKFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChHb1RvTGFzdFBhZ2VEZWNvcmF0b3IsIG51bGwsIGZ1bmN0aW9uIChwKSB7IHJldHVybiAoUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KEdvVG9MYXN0UGFnZU1lbnVJdGVtLCB7IGlzRGlzYWJsZWQ6IHAuaXNEaXNhYmxlZCwgb25DbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcC5vbkNsaWNrKCk7XG4gICAgICAgICAgICBwcm9wcy5vbkNsaWNrKCk7XG4gICAgICAgIH0gfSkpOyB9KSk7IH07XG4gICAgdmFyIEdvVG9OZXh0UGFnZURlY29yYXRvciA9IGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KEdvVG9OZXh0UGFnZSwgX19hc3NpZ24oe30sIHByb3BzLCB7IHN0b3JlOiBzdG9yZSB9KSk7IH07XG4gICAgdmFyIEdvVG9OZXh0UGFnZUJ1dHRvbkRlY29yYXRvciA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIChSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoR29Ub05leHRQYWdlRGVjb3JhdG9yLCBudWxsLCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChHb1RvTmV4dFBhZ2VCdXR0b24sIF9fYXNzaWduKHt9LCBwcm9wcykpOyB9KSk7IH07XG4gICAgdmFyIEdvVG9OZXh0UGFnZU1lbnVJdGVtRGVjb3JhdG9yID0gZnVuY3Rpb24gKHByb3BzKSB7IHJldHVybiAoUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KEdvVG9OZXh0UGFnZURlY29yYXRvciwgbnVsbCwgZnVuY3Rpb24gKHApIHsgcmV0dXJuIChSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoR29Ub05leHRQYWdlTWVudUl0ZW0sIHsgaXNEaXNhYmxlZDogcC5pc0Rpc2FibGVkLCBvbkNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBwLm9uQ2xpY2soKTtcbiAgICAgICAgICAgIHByb3BzLm9uQ2xpY2soKTtcbiAgICAgICAgfSB9KSk7IH0pKTsgfTtcbiAgICB2YXIgR29Ub1ByZXZpb3VzUGFnZURlY29yYXRvciA9IGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gUmVhY3RfX25hbWVzcGFjZS5jcmVhdGVFbGVtZW50KEdvVG9QcmV2aW91c1BhZ2UsIF9fYXNzaWduKHt9LCBwcm9wcywgeyBzdG9yZTogc3RvcmUgfSkpOyB9O1xuICAgIHZhciBHb1RvUHJldmlvdXNQYWdlQnV0dG9uRGVjb3JhdG9yID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gKFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChHb1RvUHJldmlvdXNQYWdlRGVjb3JhdG9yLCBudWxsLCBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChHb1RvUHJldmlvdXNQYWdlQnV0dG9uLCBfX2Fzc2lnbih7fSwgcHJvcHMpKTsgfSkpOyB9O1xuICAgIHZhciBHb1RvUHJldmlvdXNQYWdlTWVudUl0ZW1EZWNvcmF0b3IgPSBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIChSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoR29Ub1ByZXZpb3VzUGFnZURlY29yYXRvciwgbnVsbCwgZnVuY3Rpb24gKHApIHsgcmV0dXJuIChSZWFjdF9fbmFtZXNwYWNlLmNyZWF0ZUVsZW1lbnQoR29Ub1ByZXZpb3VzUGFnZU1lbnVJdGVtLCB7IGlzRGlzYWJsZWQ6IHAuaXNEaXNhYmxlZCwgb25DbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcC5vbkNsaWNrKCk7XG4gICAgICAgICAgICBwcm9wcy5vbkNsaWNrKCk7XG4gICAgICAgIH0gfSkpOyB9KSk7IH07XG4gICAgdmFyIE51bWJlck9mUGFnZXNEZWNvcmF0b3IgPSBmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChOdW1iZXJPZlBhZ2VzLCBfX2Fzc2lnbih7fSwgcHJvcHMsIHsgc3RvcmU6IHN0b3JlIH0pKTsgfTtcbiAgICB2YXIgcmVuZGVyVmlld2VyID0gZnVuY3Rpb24gKHByb3BzKSB7XG4gICAgICAgIHZhciBzbG90ID0gcHJvcHMuc2xvdDtcbiAgICAgICAgaWYgKCFwYWdlTmF2aWdhdGlvblBsdWdpblByb3BzLmVuYWJsZVNob3J0Y3V0cykge1xuICAgICAgICAgICAgcmV0dXJuIHNsb3Q7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHVwZGF0ZVNsb3QgPSB7XG4gICAgICAgICAgICBjaGlsZHJlbjogKFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChSZWFjdF9fbmFtZXNwYWNlLkZyYWdtZW50LCBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0X19uYW1lc3BhY2UuY3JlYXRlRWxlbWVudChTaG9ydGN1dEhhbmRsZXIsIHsgY29udGFpbmVyUmVmOiBwcm9wcy5jb250YWluZXJSZWYsIG51bVBhZ2VzOiBwcm9wcy5kb2MubnVtUGFnZXMsIHN0b3JlOiBzdG9yZSB9KSxcbiAgICAgICAgICAgICAgICBzbG90LmNoaWxkcmVuKSksXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBfX2Fzc2lnbihfX2Fzc2lnbih7fSwgc2xvdCksIHVwZGF0ZVNsb3QpO1xuICAgIH07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW5zdGFsbDogZnVuY3Rpb24gKHBsdWdpbkZ1bmN0aW9ucykge1xuICAgICAgICAgICAgc3RvcmUudXBkYXRlKCdqdW1wVG9QYWdlJywgcGx1Z2luRnVuY3Rpb25zLmp1bXBUb1BhZ2UpO1xuICAgICAgICB9LFxuICAgICAgICByZW5kZXJWaWV3ZXI6IHJlbmRlclZpZXdlcixcbiAgICAgICAgb25Eb2N1bWVudExvYWQ6IGZ1bmN0aW9uIChwcm9wcykge1xuICAgICAgICAgICAgc3RvcmUudXBkYXRlKCdkb2MnLCBwcm9wcy5kb2MpO1xuICAgICAgICAgICAgc3RvcmUudXBkYXRlKCdudW1iZXJPZlBhZ2VzJywgcHJvcHMuZG9jLm51bVBhZ2VzKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25WaWV3ZXJTdGF0ZUNoYW5nZTogZnVuY3Rpb24gKHZpZXdlclN0YXRlKSB7XG4gICAgICAgICAgICBzdG9yZS51cGRhdGUoJ2N1cnJlbnRQYWdlJywgdmlld2VyU3RhdGUucGFnZUluZGV4KTtcbiAgICAgICAgICAgIHJldHVybiB2aWV3ZXJTdGF0ZTtcbiAgICAgICAgfSxcbiAgICAgICAganVtcFRvUGFnZTogZnVuY3Rpb24gKHBhZ2VJbmRleCkge1xuICAgICAgICAgICAgdmFyIGp1bXBUbyA9IHN0b3JlLmdldCgnanVtcFRvUGFnZScpO1xuICAgICAgICAgICAgaWYgKGp1bXBUbykge1xuICAgICAgICAgICAgICAgIGp1bXBUbyhwYWdlSW5kZXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBDdXJyZW50UGFnZUlucHV0OiBDdXJyZW50UGFnZUlucHV0RGVjb3JhdG9yLFxuICAgICAgICBDdXJyZW50UGFnZUxhYmVsOiBDdXJyZW50UGFnZUxhYmVsRGVjb3JhdG9yLFxuICAgICAgICBHb1RvRmlyc3RQYWdlOiBHb1RvRmlyc3RQYWdlRGVjb3JhdG9yLFxuICAgICAgICBHb1RvRmlyc3RQYWdlQnV0dG9uOiBHb1RvRmlyc3RQYWdlQnV0dG9uRGVjb3JhdG9yLFxuICAgICAgICBHb1RvRmlyc3RQYWdlTWVudUl0ZW06IEdvVG9GaXJzdFBhZ2VNZW51SXRlbURlY29yYXRvcixcbiAgICAgICAgR29Ub0xhc3RQYWdlOiBHb1RvTGFzdFBhZ2VEZWNvcmF0b3IsXG4gICAgICAgIEdvVG9MYXN0UGFnZUJ1dHRvbjogR29Ub0xhc3RQYWdlQnV0dG9uRGVjb3JhdG9yLFxuICAgICAgICBHb1RvTGFzdFBhZ2VNZW51SXRlbTogR29Ub0xhc3RQYWdlTWVudUl0ZW1EZWNvcmF0b3IsXG4gICAgICAgIEdvVG9OZXh0UGFnZTogR29Ub05leHRQYWdlRGVjb3JhdG9yLFxuICAgICAgICBHb1RvTmV4dFBhZ2VCdXR0b246IEdvVG9OZXh0UGFnZUJ1dHRvbkRlY29yYXRvcixcbiAgICAgICAgR29Ub05leHRQYWdlTWVudUl0ZW06IEdvVG9OZXh0UGFnZU1lbnVJdGVtRGVjb3JhdG9yLFxuICAgICAgICBHb1RvUHJldmlvdXNQYWdlOiBHb1RvUHJldmlvdXNQYWdlRGVjb3JhdG9yLFxuICAgICAgICBHb1RvUHJldmlvdXNQYWdlQnV0dG9uOiBHb1RvUHJldmlvdXNQYWdlQnV0dG9uRGVjb3JhdG9yLFxuICAgICAgICBHb1RvUHJldmlvdXNQYWdlTWVudUl0ZW06IEdvVG9QcmV2aW91c1BhZ2VNZW51SXRlbURlY29yYXRvcixcbiAgICAgICAgTnVtYmVyT2ZQYWdlczogTnVtYmVyT2ZQYWdlc0RlY29yYXRvcixcbiAgICB9O1xufTtcblxuZXhwb3J0cy5Eb3duQXJyb3dJY29uID0gRG93bkFycm93SWNvbjtcbmV4cG9ydHMuTmV4dEljb24gPSBOZXh0SWNvbjtcbmV4cG9ydHMuUHJldmlvdXNJY29uID0gUHJldmlvdXNJY29uO1xuZXhwb3J0cy5VcEFycm93SWNvbiA9IFVwQXJyb3dJY29uO1xuZXhwb3J0cy5wYWdlTmF2aWdhdGlvblBsdWdpbiA9IHBhZ2VOYXZpZ2F0aW9uUGx1Z2luO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/page-navigation/lib/cjs/page-navigation.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/page-navigation/lib/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/page-navigation/lib/index.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/page-navigation.js */ \"./node_modules/@react-pdf-viewer/page-navigation/lib/cjs/page-navigation.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvcGFnZS1uYXZpZ2F0aW9uL2xpYi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLElBQUksbUpBQW9EO0FBQ3hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcmVhY3QtcGRmLXZpZXdlci9wYWdlLW5hdmlnYXRpb24vbGliL2luZGV4LmpzPzk3MWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIFJlYWN0IGNvbXBvbmVudCB0byB2aWV3IGEgUERGIGRvY3VtZW50XG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0LXBkZi12aWV3ZXIuZGV2XG4gKiBAbGljZW5zZSBodHRwczovL3JlYWN0LXBkZi12aWV3ZXIuZGV2L2xpY2Vuc2VcbiAqIEBjb3B5cmlnaHQgMjAxOS0yMDIyIE5ndXllbiBIdXUgUGh1b2MgPG1lQHBodW9jLm5nPlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3BhZ2UtbmF2aWdhdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9wYWdlLW5hdmlnYXRpb24uanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/page-navigation/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/print/lib/cjs/print.js":
/*!***************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/print/lib/cjs/print.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar reactDom = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar getAllPagesNumbers = function (doc) {\n    return Array(doc.numPages)\n        .fill(0)\n        .map(function (_, i) { return i; });\n};\n\nvar generateRange = function (min, max) {\n    return Array(max - min + 1)\n        .fill(0)\n        .map(function (_, i) { return min + i; });\n};\nvar removeDuplicate = function (arr) { return arr.filter(function (i) { return arr.indexOf(i) === arr.lastIndexOf(i); }); };\nvar getCustomPagesNumbers = function (customPages) {\n    return function (doc) {\n        var results = [];\n        customPages\n            .replace(/\\s+/g, '')\n            .split(',')\n            .forEach(function (part) {\n            var range = part\n                .split('-')\n                .map(function (c) { return parseInt(c, 10); })\n                .filter(function (c) { return Number.isInteger(c); });\n            if (range.length === 1) {\n                results.push(range[0] - 1);\n            }\n            else if (range.length === 2) {\n                results.push.apply(results, generateRange(range[0] - 1, range[1] - 1));\n            }\n        });\n        return removeDuplicate(results).filter(function (i) { return i >= 0 && i < doc.numPages; });\n    };\n};\n\nvar getEvenPagesNumbers = function (doc) {\n    return Array(doc.numPages)\n        .fill(0)\n        .map(function (_, i) { return i; })\n        .filter(function (i) { return (i + 1) % 2 === 0; });\n};\n\nvar getOddPagesNumbers = function (doc) {\n    return Array(doc.numPages)\n        .fill(0)\n        .map(function (_, i) { return i; })\n        .filter(function (i) { return (i + 1) % 2 === 1; });\n};\n\nvar PrintIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M7.5,19.499h9 M7.5,16.499h9 M5.5,16.5h-3c-1.103-0.003-1.997-0.897-2-2v-6c0.003-1.103,0.897-1.997,2-2h19\\n            c1.103,0.003,1.997,0.897,2,2v6c-0.003,1.103-0.897,1.997-2,2h-3\\n            M5.5,4.5v-4h9.586c0.265,0,0.52,0.105,0.707,0.293l2.414,2.414\\n            C18.395,3.394,18.5,3.649,18.5,3.914V4.5\\n            M18.5,22.5c0,0.552-0.448,1-1,1h-11c-0.552,0-1-0.448-1-1v-9h13V22.5z\\n            M3.5,8.499\\n            c0.552,0,1,0.448,1,1s-0.448,1-1,1s-1-0.448-1-1S2.948,8.499,3.5,8.499z\\n            M14.5,0.499v4h4\" }))); };\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar TOOLTIP_OFFSET = { left: 0, top: 8 };\nvar PrintButton = function (_a) {\n    var enableShortcuts = _a.enableShortcuts, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.print ? l10n.print.print : 'Print';\n    var ariaKeyShortcuts = enableShortcuts ? (core.isMac() ? 'Meta+P' : 'Ctrl+P') : '';\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"print\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaKeyShortcuts: ariaKeyShortcuts, ariaLabel: label, testId: \"print__button\", onClick: onClick },\n            React__namespace.createElement(PrintIcon, null)), content: function () { return label; }, offset: TOOLTIP_OFFSET }));\n};\n\nvar PrintStatus;\n(function (PrintStatus) {\n    PrintStatus[\"CheckingPermission\"] = \"CheckingPermission\";\n    PrintStatus[\"Inactive\"] = \"Inactive\";\n    PrintStatus[\"Preparing\"] = \"Preparing\";\n    PrintStatus[\"Cancelled\"] = \"Cancelled\";\n    PrintStatus[\"Ready\"] = \"Ready\";\n})(PrintStatus || (PrintStatus = {}));\n\nvar Print = function (_a) {\n    var children = _a.children, enableShortcuts = _a.enableShortcuts, store = _a.store;\n    var print = function () {\n        store.update('printStatus', PrintStatus.CheckingPermission);\n    };\n    var render = children || PrintButton;\n    return render({\n        enableShortcuts: enableShortcuts,\n        onClick: print,\n    });\n};\n\nvar PERMISSION_PRINT = 4;\nvar PERMISSION_PRINT_HIGHT_QUALITY = 2048;\nvar CheckPrintPermission = function (_a) {\n    var doc = _a.doc, store = _a.store;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var _b = React__namespace.useState(true), isAllowed = _b[0], setIsAllowed = _b[1];\n    React__namespace.useEffect(function () {\n        doc.getPermissions().then(function (permissions) {\n            var canPrint = permissions === null ||\n                permissions.includes(PERMISSION_PRINT) ||\n                permissions.includes(PERMISSION_PRINT_HIGHT_QUALITY);\n            canPrint ? store.update('printStatus', PrintStatus.Preparing) : setIsAllowed(false);\n        });\n    }, []);\n    return isAllowed ? (React__namespace.createElement(React__namespace.Fragment, null)) : (React__namespace.createElement(core.Modal, { ariaControlsSuffix: \"print-permission\", closeOnClickOutside: false, closeOnEscape: false, content: function (toggle) {\n            var close = function () {\n                toggle();\n                store.update('printStatus', PrintStatus.Cancelled);\n            };\n            return (React__namespace.createElement(React__namespace.Fragment, null,\n                React__namespace.createElement(\"div\", { className: \"rpv-print__permission-body\" }, l10n && l10n.print\n                    ? l10n.print.disallowPrint\n                    : 'The document does not allow to print'),\n                React__namespace.createElement(\"div\", { className: \"rpv-print__permission-footer\" },\n                    React__namespace.createElement(core.Button, { onClick: close }, l10n && l10n.print ? l10n.print.close : 'Close'))));\n        }, isOpened: true }));\n};\n\nvar PrintProgress = function (_a) {\n    var numLoadedPages = _a.numLoadedPages, numPages = _a.numPages, onCancel = _a.onCancel;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var isRtl = direction === core.TextDirection.RightToLeft;\n    var progress = Math.floor((numLoadedPages * 100) / numPages);\n    return (React__namespace.createElement(\"div\", { className: \"rpv-print__progress\" },\n        React__namespace.createElement(\"div\", { className: core.classNames({\n                'rpv-print__progress-body': true,\n                'rpv-print__progress-body--rtl': isRtl,\n            }) },\n            React__namespace.createElement(\"div\", { className: \"rpv-print__progress-message\" }, l10n && l10n.print\n                ? l10n.print.preparingDocument\n                : 'Preparing document ...'),\n            React__namespace.createElement(\"div\", { className: \"rpv-print__progress-bar\" },\n                React__namespace.createElement(core.ProgressBar, { progress: progress })),\n            React__namespace.createElement(core.Button, { onClick: onCancel }, l10n && l10n.print ? l10n.print.cancel : 'Cancel'))));\n};\n\nvar isRunningInJest = function () { return typeof process !== 'undefined' && process.env.JEST_WORKER_ID !== undefined; };\n\nvar PageThumbnail = function (_a) {\n    var canvas = _a.canvas, page = _a.page, pageHeight = _a.pageHeight, pageIndex = _a.pageIndex, pageWidth = _a.pageWidth, rotation = _a.rotation, onLoad = _a.onLoad;\n    var isMounted = core.useIsMounted();\n    var renderTask = React__namespace.useRef();\n    var _b = React__namespace.useState(''), src = _b[0], setSrc = _b[1];\n    var testWithJest = React__namespace.useMemo(function () { return isRunningInJest(); }, []);\n    var handleImageLoad = function () {\n        if (!testWithJest) {\n            onLoad();\n        }\n    };\n    React__namespace.useEffect(function () {\n        var task = renderTask.current;\n        if (task) {\n            task.cancel();\n        }\n        var printUnit = 150 / 72;\n        canvas.height = Math.floor(pageHeight * printUnit);\n        canvas.width = Math.floor(pageWidth * printUnit);\n        var canvasContext = canvas.getContext('2d');\n        canvasContext.save();\n        canvasContext.fillStyle = 'rgb(255, 255, 255)';\n        canvasContext.fillRect(0, 0, canvas.width, canvas.height);\n        canvasContext.restore();\n        var viewport = page.getViewport({ rotation: rotation, scale: 1 });\n        renderTask.current = page.render({\n            canvasContext: canvasContext,\n            intent: 'print',\n            transform: [printUnit, 0, 0, printUnit, 0, 0],\n            viewport: viewport,\n        });\n        renderTask.current.promise.then(function () {\n            if ('toBlob' in canvas && 'createObjectURL' in URL) {\n                canvas.toBlob(function (blob) {\n                    isMounted.current && setSrc(URL.createObjectURL(blob));\n                    testWithJest && onLoad();\n                });\n            }\n            else {\n                isMounted.current && setSrc(canvas.toDataURL());\n                testWithJest && onLoad();\n            }\n        }, function () {\n        });\n    }, []);\n    return (src && (React__namespace.createElement(\"div\", { className: \"rpv-print__page\" },\n        React__namespace.createElement(\"img\", { \"data-testid\": \"print__thumbnail-\".concat(pageIndex), src: src, onLoad: handleImageLoad }))));\n};\n\nvar PageThumbnailContainer = function (_a) {\n    var canvas = _a.canvas, doc = _a.doc, pageHeight = _a.pageHeight, pageIndex = _a.pageIndex, pageRotation = _a.pageRotation, pageWidth = _a.pageWidth, rotation = _a.rotation, shouldRender = _a.shouldRender, onLoad = _a.onLoad;\n    var isMounted = core.useIsMounted();\n    var _b = React__namespace.useState({\n        height: pageHeight,\n        page: null,\n        viewportRotation: 0,\n        width: pageWidth,\n    }), pageSize = _b[0], setPageSize = _b[1];\n    var page = pageSize.page, height = pageSize.height, width = pageSize.width;\n    var isVertical = Math.abs(rotation + pageRotation) % 180 === 0;\n    React__namespace.useEffect(function () {\n        if (shouldRender) {\n            core.getPage(doc, pageIndex).then(function (pdfPage) {\n                var viewport = pdfPage.getViewport({ scale: 1 });\n                isMounted.current &&\n                    setPageSize({\n                        height: viewport.height,\n                        page: pdfPage,\n                        viewportRotation: viewport.rotation,\n                        width: viewport.width,\n                    });\n            });\n        }\n    }, [shouldRender]);\n    var rotationNumber = (pageSize.viewportRotation + rotation + pageRotation) % 360;\n    return (page && (React__namespace.createElement(PageThumbnail, { canvas: canvas, page: page, pageHeight: isVertical ? height : width, pageIndex: pageIndex, pageWidth: isVertical ? width : height, rotation: rotationNumber, onLoad: onLoad })));\n};\n\nvar PrintZone = function (_a) {\n    var doc = _a.doc, numLoadedPages = _a.numLoadedPages, pagesRotation = _a.pagesRotation, pageHeight = _a.pageHeight, pageWidth = _a.pageWidth, printPages = _a.printPages, printStatus = _a.printStatus, rotation = _a.rotation, onCancel = _a.onCancel, onLoad = _a.onLoad;\n    var canvas = React__namespace.useMemo(function () { return document.createElement('canvas'); }, []);\n    var container = React__namespace.useMemo(function () {\n        var zoneEle = document.querySelector('.rpv-print__zone');\n        if (zoneEle) {\n            return zoneEle;\n        }\n        var div = document.createElement('div');\n        div.classList.add('rpv-print__zone');\n        div.setAttribute('data-testid', 'print__zone');\n        document.body.appendChild(div);\n        return div;\n    }, []);\n    React__namespace.useEffect(function () {\n        if (printStatus === PrintStatus.Ready) {\n            document.documentElement.classList.add('rpv-print__html-printing');\n            document.body.classList.add('rpv-print__body-printing');\n            window.print();\n        }\n        var handler = function () {\n            if (printStatus === PrintStatus.Ready) {\n                document.documentElement.classList.remove('rpv-print__html-printing');\n                document.body.classList.remove('rpv-print__body-printing');\n                var zones = document.querySelectorAll('.rpv-print__zone');\n                if (zones) {\n                    zones.forEach(function (zoneEle) {\n                        zoneEle.parentElement.removeChild(zoneEle);\n                    });\n                }\n                canvas.height = 0;\n                canvas.width = 0;\n                document.removeEventListener('mousemove', handler);\n                onCancel();\n            }\n        };\n        document.addEventListener('mousemove', handler);\n        return function () { return document.removeEventListener('mousemove', handler); };\n    }, [printStatus]);\n    return reactDom.createPortal(React__namespace.createElement(React__namespace.Fragment, null,\n        printPages.map(function (pageIndex, loopIndex) { return (React__namespace.createElement(PageThumbnailContainer, { key: pageIndex, canvas: canvas, doc: doc, pageHeight: pageHeight, pageIndex: pageIndex, pageRotation: pagesRotation.has(pageIndex) ? pagesRotation.get(pageIndex) : 0, pageWidth: pageWidth, rotation: rotation, shouldRender: loopIndex === numLoadedPages, onLoad: onLoad })); }),\n        React__namespace.createElement(\"style\", { dangerouslySetInnerHTML: {\n                __html: \"@page { size: \".concat(pageWidth, \"pt \").concat(pageHeight, \"pt }\"),\n            } })), container);\n};\n\nvar PrintContainer = function (_a) {\n    var doc = _a.doc, pagesRotation = _a.pagesRotation, pageHeight = _a.pageHeight, pageWidth = _a.pageWidth, renderProgressBar = _a.renderProgressBar, rotation = _a.rotation, setPages = _a.setPages, store = _a.store;\n    var _b = React__namespace.useState(PrintStatus.Inactive), printStatus = _b[0], setPrintStatus = _b[1];\n    var _c = React__namespace.useState(0), numLoadedPagesForPrint = _c[0], setNumLoadedPagesForPrint = _c[1];\n    var printPages = React__namespace.useMemo(function () {\n        var numPages = doc.numPages;\n        return setPages(doc).filter(function (index) { return index >= 0 && index < numPages; });\n    }, [doc, setPages]);\n    var numPrintPages = printPages.length;\n    var cancelPrinting = function () {\n        setNumLoadedPagesForPrint(0);\n        setPrintStatus(PrintStatus.Inactive);\n    };\n    var handlePrintStatus = function (status) { return setPrintStatus(status); };\n    var onLoadPage = function () {\n        var total = numLoadedPagesForPrint + 1;\n        if (total <= numPrintPages) {\n            setNumLoadedPagesForPrint(total);\n            total === numPrintPages && setPrintStatus(PrintStatus.Ready);\n        }\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('printStatus', handlePrintStatus);\n        return function () {\n            store.unsubscribe('printStatus', handlePrintStatus);\n        };\n    }, []);\n    return (React__namespace.createElement(React__namespace.Fragment, null,\n        printStatus === PrintStatus.CheckingPermission && React__namespace.createElement(CheckPrintPermission, { doc: doc, store: store }),\n        printStatus === PrintStatus.Preparing &&\n            (renderProgressBar ? (renderProgressBar(numLoadedPagesForPrint, numPrintPages, cancelPrinting)) : (React__namespace.createElement(PrintProgress, { numLoadedPages: numLoadedPagesForPrint, numPages: numPrintPages, onCancel: cancelPrinting }))),\n        (printStatus === PrintStatus.Preparing || printStatus === PrintStatus.Ready) &&\n            numLoadedPagesForPrint <= numPrintPages && (React__namespace.createElement(PrintZone, { doc: doc, numLoadedPages: numLoadedPagesForPrint, pagesRotation: pagesRotation, pageHeight: pageHeight, pageWidth: pageWidth, printPages: printPages, printStatus: printStatus, rotation: rotation, onCancel: cancelPrinting, onLoad: onLoadPage }))));\n};\n\nvar PrintMenuItem = function (_a) {\n    var onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.print ? l10n.print.print : 'Print';\n    return (React__namespace.createElement(core.MenuItem, { icon: React__namespace.createElement(PrintIcon, null), testId: \"print__menu\", onClick: onClick }, label));\n};\n\nvar ShortcutHandler = function (_a) {\n    var containerRef = _a.containerRef, store = _a.store;\n    var keydownHandler = function (e) {\n        if (e.shiftKey || e.altKey || e.key !== 'p') {\n            return;\n        }\n        var isCommandPressed = core.isMac() ? e.metaKey : e.ctrlKey;\n        if (!isCommandPressed) {\n            return;\n        }\n        var containerEle = containerRef.current;\n        if (!containerEle || !document.activeElement || !containerEle.contains(document.activeElement)) {\n            return;\n        }\n        e.preventDefault();\n        store.update('printStatus', PrintStatus.Preparing);\n    };\n    React__namespace.useEffect(function () {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        document.addEventListener('keydown', keydownHandler);\n        return function () {\n            document.removeEventListener('keydown', keydownHandler);\n        };\n    }, [containerRef.current]);\n    return React__namespace.createElement(React__namespace.Fragment, null);\n};\n\nvar printPlugin = function (props) {\n    var printPluginProps = React__namespace.useMemo(function () {\n        return Object.assign({}, {\n            enableShortcuts: true,\n            setPages: function (doc) {\n                return Array(doc.numPages)\n                    .fill(0)\n                    .map(function (_, i) { return i; });\n            },\n        }, props);\n    }, []);\n    var store = React__namespace.useMemo(function () {\n        return core.createStore({\n            printStatus: PrintStatus.Inactive,\n        });\n    }, []);\n    var print = function () {\n        store.update('printStatus', PrintStatus.CheckingPermission);\n    };\n    var PrintDecorator = function (props) { return (React__namespace.createElement(Print, __assign({ enableShortcuts: printPluginProps.enableShortcuts }, props, { store: store }))); };\n    var PrintButtonDecorator = function () { return React__namespace.createElement(PrintDecorator, null, function (props) { return React__namespace.createElement(PrintButton, __assign({}, props)); }); };\n    var PrintMenuItemDecorator = function (props) { return (React__namespace.createElement(PrintDecorator, null, function (p) { return (React__namespace.createElement(PrintMenuItem, { onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    var renderViewer = function (renderViewerProps) {\n        var slot = renderViewerProps.slot;\n        var updateSlot = {\n            children: (React__namespace.createElement(React__namespace.Fragment, null,\n                printPluginProps.enableShortcuts && (React__namespace.createElement(ShortcutHandler, { containerRef: renderViewerProps.containerRef, store: store })),\n                React__namespace.createElement(PrintContainer, { doc: renderViewerProps.doc, pagesRotation: renderViewerProps.pagesRotation, pageHeight: renderViewerProps.pageHeight, pageWidth: renderViewerProps.pageWidth, renderProgressBar: props === null || props === void 0 ? void 0 : props.renderProgressBar, rotation: renderViewerProps.rotation, setPages: printPluginProps.setPages, store: store }),\n                slot.children)),\n        };\n        return __assign(__assign({}, slot), updateSlot);\n    };\n    var setPages = function (printPages) {\n        printPluginProps.setPages = printPages;\n    };\n    return {\n        print: print,\n        renderViewer: renderViewer,\n        Print: PrintDecorator,\n        PrintButton: PrintButtonDecorator,\n        PrintMenuItem: PrintMenuItemDecorator,\n        setPages: setPages,\n    };\n};\n\nexports.PrintIcon = PrintIcon;\nexports.getAllPagesNumbers = getAllPagesNumbers;\nexports.getCustomPagesNumbers = getCustomPagesNumbers;\nexports.getEvenPagesNumbers = getEvenPagesNumbers;\nexports.getOddPagesNumbers = getOddPagesNumbers;\nexports.printPlugin = printPlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/print/lib/cjs/print.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/print/lib/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/print/lib/index.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/print.js */ \"./node_modules/@react-pdf-viewer/print/lib/cjs/print.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvcHJpbnQvbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsSUFBSSxxSEFBMEM7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC1wZGYtdmlld2VyL3ByaW50L2xpYi9pbmRleC5qcz9iMzRkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBSZWFjdCBjb21wb25lbnQgdG8gdmlldyBhIFBERiBkb2N1bWVudFxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldlxuICogQGxpY2Vuc2UgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldi9saWNlbnNlXG4gKiBAY29weXJpZ2h0IDIwMTktMjAyMiBOZ3V5ZW4gSHV1IFBodW9jIDxtZUBwaHVvYy5uZz5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9wcmludC5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9wcmludC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/print/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/properties/lib/cjs/properties.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/properties/lib/cjs/properties.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar InfoIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M12,1.001c6.075,0,11,4.925,11,11s-4.925,11-11,11s-11-4.925-11-11S5.925,1.001,12,1.001z\\n            M14.5,17.005H13\\n            c-0.552,0-1-0.448-1-1v-6.5c0-0.276-0.224-0.5-0.5-0.5H10\\n            M11.745,6.504L11.745,6.504\\n            M11.745,6.5c-0.138,0-0.25,0.112-0.25,0.25\\n            S11.607,7,11.745,7s0.25-0.112,0.25-0.25S11.883,6.5,11.745,6.5\" }))); };\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar PropertiesLoader = function (_a) {\n    var doc = _a.doc, render = _a.render;\n    var _b = React__namespace.useState(), data = _b[0], setData = _b[1];\n    React__namespace.useEffect(function () {\n        doc.getMetadata()\n            .then(function (meta) {\n            return Promise.resolve(meta);\n        })\n            .then(function (meta) {\n            return doc.getDownloadInfo().then(function (d) {\n                return Promise.resolve({\n                    fileName: meta.contentDispositionFilename || '',\n                    info: meta.info,\n                    length: d.length,\n                });\n            });\n        })\n            .then(function (response) {\n            setData(response);\n        });\n    }, []);\n    return data ? (render(data)) : (React__namespace.createElement(\"div\", { className: \"rpv-properties__loader\" },\n        React__namespace.createElement(core.Spinner, null)));\n};\n\nvar PropertyItem = function (_a) {\n    var label = _a.label, value = _a.value;\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var isRtl = direction === core.TextDirection.RightToLeft;\n    return (React__namespace.createElement(\"dl\", { className: core.classNames({\n            'rpv-properties__item': true,\n            'rpv-properties__item--rtl': isRtl,\n        }) },\n        React__namespace.createElement(\"dt\", { className: \"rpv-properties__item-label\" },\n            label,\n            \":\"),\n        React__namespace.createElement(\"dd\", { className: \"rpv-properties__item-value\" }, value || '-')));\n};\n\nvar dateRegex = new RegExp('^D:' +\n    '(\\\\d{4})' +\n    '(\\\\d{2})?' +\n    '(\\\\d{2})?' +\n    '(\\\\d{2})?' +\n    '(\\\\d{2})?' +\n    '(\\\\d{2})?' +\n    '([Z|+|-])?' +\n    '(\\\\d{2})?' +\n    \"'?\" +\n    '(\\\\d{2})?' +\n    \"'?\");\nvar parse = function (value, min, max, defaultValue) {\n    var parsed = parseInt(value, 10);\n    return parsed >= min && parsed <= max ? parsed : defaultValue;\n};\nvar convertDate = function (input) {\n    var matches = dateRegex.exec(input);\n    if (!matches) {\n        return null;\n    }\n    var year = parseInt(matches[1], 10);\n    var month = parse(matches[2], 1, 12, 1) - 1;\n    var day = parse(matches[3], 1, 31, 1);\n    var hour = parse(matches[4], 0, 23, 0);\n    var minute = parse(matches[5], 0, 59, 0);\n    var second = parse(matches[6], 0, 59, 0);\n    var universalTimeRelation = matches[7] || 'Z';\n    var offsetHour = parse(matches[8], 0, 23, 0);\n    var offsetMinute = parse(matches[9], 0, 59, 0);\n    switch (universalTimeRelation) {\n        case '-':\n            hour += offsetHour;\n            minute += offsetMinute;\n            break;\n        case '+':\n            hour -= offsetHour;\n            minute -= offsetMinute;\n            break;\n    }\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n};\n\nvar getFileName = function (url) {\n    var str = url.split('/').pop();\n    return str ? str.split('#')[0].split('?')[0] : url;\n};\n\nvar getFileSize = function (bytes) {\n    var sufixes = ['B', 'kB', 'MB', 'GB', 'TB'];\n    var i = Math.floor(Math.log(bytes) / Math.log(1024));\n    return \"\".concat((bytes / Math.pow(1024, i)).toFixed(2), \" \").concat(sufixes[i]);\n};\n\nvar PropertiesModal = function (_a) {\n    var doc = _a.doc, fileName = _a.fileName, onToggle = _a.onToggle;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var formatDate = function (input) {\n        var date = convertDate(input);\n        return date ? \"\".concat(date.toLocaleDateString(), \", \").concat(date.toLocaleTimeString()) : '';\n    };\n    var renderData = function (data) { return (React__namespace.createElement(React__namespace.Fragment, null,\n        React__namespace.createElement(\"div\", { className: \"rpv-properties__modal-section\" },\n            React__namespace.createElement(PropertyItem, { label: l10n && l10n.properties\n                    ? l10n.properties.fileName\n                    : 'File name', value: data.fileName || getFileName(fileName) }),\n            React__namespace.createElement(PropertyItem, { label: l10n && l10n.properties\n                    ? l10n.properties.fileSize\n                    : 'File size', value: getFileSize(data.length) })),\n        React__namespace.createElement(core.Separator, null),\n        React__namespace.createElement(\"div\", { className: \"rpv-properties__modal-section\" },\n            React__namespace.createElement(PropertyItem, { label: l10n && l10n.properties ? l10n.properties.title : 'Title', value: data.info.Title }),\n            React__namespace.createElement(PropertyItem, { label: l10n && l10n.properties ? l10n.properties.author : 'Author', value: data.info.Author }),\n            React__namespace.createElement(PropertyItem, { label: l10n && l10n.properties ? l10n.properties.subject : 'Subject', value: data.info.Subject }),\n            React__namespace.createElement(PropertyItem, { label: l10n && l10n.properties ? l10n.properties.keywords : 'Keywords', value: data.info.Keywords }),\n            React__namespace.createElement(PropertyItem, { label: l10n && l10n.properties ? l10n.properties.creator : 'Creator', value: data.info.Creator }),\n            React__namespace.createElement(PropertyItem, { label: l10n && l10n.properties\n                    ? l10n.properties.creationDate\n                    : 'Creation date', value: formatDate(data.info.CreationDate) }),\n            React__namespace.createElement(PropertyItem, { label: l10n && l10n.properties\n                    ? l10n.properties.modificationDate\n                    : 'Modification date', value: formatDate(data.info.ModDate) })),\n        React__namespace.createElement(core.Separator, null),\n        React__namespace.createElement(\"div\", { className: \"rpv-properties__modal-section\" },\n            React__namespace.createElement(PropertyItem, { label: l10n && l10n.properties\n                    ? l10n.properties.pdfProducer\n                    : 'PDF producer', value: data.info.Producer }),\n            React__namespace.createElement(PropertyItem, { label: l10n && l10n.properties\n                    ? l10n.properties.pdfVersion\n                    : 'PDF version', value: data.info.PDFFormatVersion }),\n            React__namespace.createElement(PropertyItem, { label: l10n && l10n.properties\n                    ? l10n.properties.pageCount\n                    : 'Page count', value: \"\".concat(doc.numPages) })))); };\n    return (React__namespace.createElement(\"div\", { className: \"rpv-properties__modal\" },\n        React__namespace.createElement(PropertiesLoader, { doc: doc, render: renderData }),\n        React__namespace.createElement(\"div\", { className: \"rpv-properties__modal-footer\" },\n            React__namespace.createElement(core.Button, { onClick: onToggle }, l10n && l10n.properties ? l10n.properties.close : 'Close'))));\n};\n\nvar TOOLTIP_OFFSET = { left: 0, top: 8 };\nvar ShowPropertiesButton = function (_a) {\n    var onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.properties ? l10n.properties.showProperties : 'Show properties';\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"properties\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: label, testId: \"properties__button\", onClick: onClick },\n            React__namespace.createElement(InfoIcon, null)), content: function () { return label; }, offset: TOOLTIP_OFFSET }));\n};\n\nvar useDocument = function (store) {\n    var _a = React__namespace.useState(store.get('doc')), currentDoc = _a[0], setCurrentDoc = _a[1];\n    var handleDocumentChanged = function (doc) {\n        setCurrentDoc(doc);\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('doc', handleDocumentChanged);\n        return function () {\n            store.unsubscribe('doc', handleDocumentChanged);\n        };\n    }, []);\n    return { currentDoc: currentDoc };\n};\n\nvar ShowProperties = function (_a) {\n    var children = _a.children, store = _a.store;\n    var currentDoc = useDocument(store).currentDoc;\n    var fileName = store.get('fileName') || '';\n    var defaultChildren = function (props) { return React__namespace.createElement(ShowPropertiesButton, __assign({}, props)); };\n    var render = children || defaultChildren;\n    return currentDoc ? (React__namespace.createElement(core.Modal, { ariaControlsSuffix: \"properties\", target: function (toggle) {\n            return render({\n                onClick: toggle,\n            });\n        }, content: function (toggle) { return React__namespace.createElement(PropertiesModal, { doc: currentDoc, fileName: fileName, onToggle: toggle }); }, closeOnClickOutside: true, closeOnEscape: true })) : (React__namespace.createElement(React__namespace.Fragment, null));\n};\n\nvar ShowPropertiesMenuItem = function (_a) {\n    var onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.properties ? l10n.properties.showProperties : 'Show properties';\n    return (React__namespace.createElement(core.MenuItem, { icon: React__namespace.createElement(InfoIcon, null), testId: \"properties__menu\", onClick: onClick }, label));\n};\n\nvar propertiesPlugin = function () {\n    var store = React__namespace.useMemo(function () {\n        return core.createStore({\n            fileName: '',\n        });\n    }, []);\n    var ShowPropertiesDecorator = function (props) { return React__namespace.createElement(ShowProperties, __assign({}, props, { store: store })); };\n    var ShowPropertiesButtonDecorator = function () { return React__namespace.createElement(ShowProperties, { store: store }); };\n    var ShowPropertiesMenuItemDecorator = function (props) { return (React__namespace.createElement(ShowPropertiesDecorator, null, function (p) { return React__namespace.createElement(ShowPropertiesMenuItem, __assign({}, p)); })); };\n    return {\n        onDocumentLoad: function (props) {\n            store.update('doc', props.doc);\n        },\n        onViewerStateChange: function (viewerState) {\n            store.update('fileName', viewerState.file.name);\n            return viewerState;\n        },\n        ShowProperties: ShowPropertiesDecorator,\n        ShowPropertiesButton: ShowPropertiesButtonDecorator,\n        ShowPropertiesMenuItem: ShowPropertiesMenuItemDecorator,\n    };\n};\n\nexports.InfoIcon = InfoIcon;\nexports.propertiesPlugin = propertiesPlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/properties/lib/cjs/properties.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/properties/lib/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/properties/lib/index.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/properties.js */ \"./node_modules/@react-pdf-viewer/properties/lib/cjs/properties.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvcHJvcGVydGllcy9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixJQUFJLG9JQUErQztBQUNuRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvcHJvcGVydGllcy9saWIvaW5kZXguanM/OWI3NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgUmVhY3QgY29tcG9uZW50IHRvIHZpZXcgYSBQREYgZG9jdW1lbnRcbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXZcbiAqIEBsaWNlbnNlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXYvbGljZW5zZVxuICogQGNvcHlyaWdodCAyMDE5LTIwMjIgTmd1eWVuIEh1dSBQaHVvYyA8bWVAcGh1b2Mubmc+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcHJvcGVydGllcy5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9wcm9wZXJ0aWVzLmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/properties/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/rotate/lib/cjs/rotate.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/rotate/lib/cjs/rotate.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar RotateBackwardIcon = function () { return (React__namespace.createElement(core.Icon, { ignoreDirection: true, size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M3.434,10.537c0.141-0.438,0.316-0.864,0.523-1.274\\n            M3.069,14.425C3.023,14.053,3,13.679,3,13.305 c0-0.291,0.014-0.579,0.041-0.863\\n            M4.389,18.111c-0.341-0.539-0.623-1.112-0.843-1.711\\n            M7.163,20.9 c-0.543-0.345-1.048-0.747-1.506-1.2\\n            M10.98,22.248c-0.65-0.074-1.29-0.218-1.909-0.431\\n            M10,4.25h2 c4.987,0.015,9.017,4.069,9.003,9.055c-0.013,4.581-3.456,8.426-8.008,8.945\\n            M13.5,1.75L10,4.25l3.5,2.5\" }))); };\n\nvar RotateForwardIcon = function () { return (React__namespace.createElement(core.Icon, { ignoreDirection: true, size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M20.566,10.537c-0.141-0.438-0.316-0.864-0.523-1.274\\n            M20.931,14.425C20.977,14.053,21,13.679,21,13.305 c0-0.291-0.014-0.579-0.041-0.863\\n            M19.611,18.111c0.341-0.539,0.624-1.114,0.843-1.713\\n            M16.837,20.9 c0.543-0.345,1.048-0.747,1.506-1.2\\n            M13.02,22.248c0.65-0.074,1.29-0.218,1.909-0.431\\n            M14,4.25h-2 c-4.987,0.015-9.017,4.069-9.003,9.055c0.013,4.581,3.456,8.426,8.008,8.945\\n            M10.5,1.75l3.5,2.5l-3.5,2.5\" }))); };\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar TOOLTIP_OFFSET = { left: 0, top: 8 };\nvar RotateButton = function (_a) {\n    var direction = _a.direction, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var backwardLabel = l10n && l10n.rotate ? l10n.rotate.rotateBackward : 'Rotate counterclockwise';\n    var forwardLabel = l10n && l10n.rotate ? l10n.rotate.rotateForward : 'Rotate clockwise';\n    var label = direction === core.RotateDirection.Backward ? backwardLabel : forwardLabel;\n    var icon = direction === core.RotateDirection.Backward ? React__namespace.createElement(RotateBackwardIcon, null) : React__namespace.createElement(RotateForwardIcon, null);\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"rotate\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: label, testId: direction === core.RotateDirection.Backward ? 'rotate__backward-button' : 'rotate__forward-button', onClick: onClick }, icon), content: function () { return label; }, offset: TOOLTIP_OFFSET }));\n};\n\nvar Rotate = function (_a) {\n    var children = _a.children, direction = _a.direction, store = _a.store;\n    var onClick = function () {\n        var rotate = store.get('rotate');\n        if (rotate) {\n            rotate(direction);\n        }\n    };\n    var defaultChildren = function (props) { return (React__namespace.createElement(RotateButton, { direction: props.direction, onClick: props.onClick })); };\n    var render = children || defaultChildren;\n    return render({\n        direction: direction,\n        onClick: onClick,\n    });\n};\n\nvar RotateMenuItem = function (_a) {\n    var direction = _a.direction, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var backwardLabel = l10n && l10n.rotate ? l10n.rotate.rotateBackward : 'Rotate counterclockwise';\n    var forwardLabel = l10n && l10n.rotate ? l10n.rotate.rotateForward : 'Rotate clockwise';\n    var label = direction === core.RotateDirection.Backward ? backwardLabel : forwardLabel;\n    var icon = direction === core.RotateDirection.Backward ? React__namespace.createElement(RotateBackwardIcon, null) : React__namespace.createElement(RotateForwardIcon, null);\n    return (React__namespace.createElement(core.MenuItem, { icon: icon, testId: direction === core.RotateDirection.Backward ? 'rotate__backward-menu' : 'rotate__forward-menu', onClick: onClick }, label));\n};\n\nvar RotatePage = function (_a) {\n    var children = _a.children, store = _a.store;\n    var onRotatePage = function (pageIndex, direction) {\n        var rotatePage = store.get('rotatePage');\n        if (rotatePage) {\n            rotatePage(pageIndex, direction);\n        }\n    };\n    return children({\n        onRotatePage: onRotatePage,\n    });\n};\n\nvar rotatePlugin = function () {\n    var store = React__namespace.useMemo(function () { return core.createStore(); }, []);\n    var RotateDecorator = function (props) { return React__namespace.createElement(Rotate, __assign({}, props, { store: store })); };\n    var RotateBackwardButtonDecorator = function () { return (React__namespace.createElement(RotateDecorator, { direction: core.RotateDirection.Backward }, function (props) { return React__namespace.createElement(RotateButton, __assign({}, props)); })); };\n    var RotateBackwardMenuItemDecorator = function (props) { return (React__namespace.createElement(RotateDecorator, { direction: core.RotateDirection.Backward }, function (p) { return (React__namespace.createElement(RotateMenuItem, { direction: p.direction, onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    var RotateForwardButtonDecorator = function () { return (React__namespace.createElement(RotateDecorator, { direction: core.RotateDirection.Forward }, function (props) { return React__namespace.createElement(RotateButton, __assign({}, props)); })); };\n    var RotateForwardMenuItemDecorator = function (props) { return (React__namespace.createElement(RotateDecorator, { direction: core.RotateDirection.Forward }, function (p) { return (React__namespace.createElement(RotateMenuItem, { direction: p.direction, onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    var RotatePageDecorator = function (props) { return React__namespace.createElement(RotatePage, __assign({}, props, { store: store })); };\n    return {\n        install: function (pluginFunctions) {\n            store.update('rotate', pluginFunctions.rotate);\n            store.update('rotatePage', pluginFunctions.rotatePage);\n        },\n        Rotate: RotateDecorator,\n        RotateBackwardButton: RotateBackwardButtonDecorator,\n        RotateBackwardMenuItem: RotateBackwardMenuItemDecorator,\n        RotateForwardButton: RotateForwardButtonDecorator,\n        RotateForwardMenuItem: RotateForwardMenuItemDecorator,\n        RotatePage: RotatePageDecorator,\n    };\n};\n\nexports.RotateBackwardIcon = RotateBackwardIcon;\nexports.RotateForwardIcon = RotateForwardIcon;\nexports.rotatePlugin = rotatePlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/rotate/lib/cjs/rotate.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/rotate/lib/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/rotate/lib/index.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/rotate.js */ \"./node_modules/@react-pdf-viewer/rotate/lib/cjs/rotate.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvcm90YXRlL2xpYi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLElBQUksd0hBQTJDO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcmVhY3QtcGRmLXZpZXdlci9yb3RhdGUvbGliL2luZGV4LmpzP2RiZmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIFJlYWN0IGNvbXBvbmVudCB0byB2aWV3IGEgUERGIGRvY3VtZW50XG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0LXBkZi12aWV3ZXIuZGV2XG4gKiBAbGljZW5zZSBodHRwczovL3JlYWN0LXBkZi12aWV3ZXIuZGV2L2xpY2Vuc2VcbiAqIEBjb3B5cmlnaHQgMjAxOS0yMDIyIE5ndXllbiBIdXUgUGh1b2MgPG1lQHBodW9jLm5nPlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JvdGF0ZS5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yb3RhdGUuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/rotate/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/scroll-mode/lib/cjs/scroll-mode.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/scroll-mode/lib/cjs/scroll-mode.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar HorizontalScrollingIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M6.5,21.5c0,0.552-0.448,1-1,1h-4c-0.552,0-1-0.448-1-1v-20c0-0.552,0.448-1,1-1h4c0.552,0,1,0.448,1,1V21.5z\\n            M14.5,21.5c0,0.552-0.448,1-1,1h-4c-0.552,0-1-0.448-1-1v-20c0-0.552,0.448-1,1-1h4c0.552,0,1,0.448,1,1V21.5z\\n            M22.5,21.5 c0,0.552-0.448,1-1,1h-4c-0.552,0-1-0.448-1-1v-20c0-0.552,0.448-1,1-1h4c0.552,0,1,0.448,1,1V21.5z\" }))); };\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar VerticalScrollingIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M23.5,5.5c0,0.552-0.448,1-1,1h-21c-0.552,0-1-0.448-1-1v-3c0-0.552,0.448-1,1-1h21c0.552,0,1,0.448,1,1V5.5z\\n            M23.5,13.5c0,0.552-0.448,1-1,1h-21c-0.552,0-1-0.448-1-1v-3c0-0.552,0.448-1,1-1h21c0.552,0,1,0.448,1,1V13.5z\\n            M23.5,21.5 c0,0.552-0.448,1-1,1h-21c-0.552,0-1-0.448-1-1v-3c0-0.552,0.448-1,1-1h21c0.552,0,1,0.448,1,1V21.5z\" }))); };\n\nvar WrappedScrollingIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M10.5,9.5c0,0.552-0.448,1-1,1h-8c-0.552,0-1-0.448-1-1v-8c0-0.552,0.448-1,1-1h8c0.552,0,1,0.448,1,1V9.5z\\n            M23.5,9.5c0,0.552-0.448,1-1,1h-8c-0.552,0-1-0.448-1-1v-8c0-0.552,0.448-1,1-1h8c0.552,0,1,0.448,1,1V9.5z\\n            M10.5,22.5 c0,0.552-0.448,1-1,1h-8c-0.552,0-1-0.448-1-1v-8c0-0.552,0.448-1,1-1h8c0.552,0,1,0.448,1,1V22.5z\\n            M23.5,22.5c0,0.552-0.448,1-1,1 h-8c-0.552,0-1-0.448-1-1v-8c0-0.552,0.448-1,1-1h8c0.552,0,1,0.448,1,1V22.5z\" }))); };\n\nvar SwitchScrollModeDecorator = function (_a) {\n    var children = _a.children, mode = _a.mode, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = '';\n    var icon = React__namespace.createElement(VerticalScrollingIcon, null);\n    switch (mode) {\n        case core.ScrollMode.Horizontal:\n            label =\n                l10n && l10n.scrollMode\n                    ? l10n.scrollMode.horizontalScrolling\n                    : 'Horizontal scrolling';\n            icon = React__namespace.createElement(HorizontalScrollingIcon, null);\n            break;\n        case core.ScrollMode.Wrapped:\n            label =\n                l10n && l10n.scrollMode\n                    ? l10n.scrollMode.wrappedScrolling\n                    : 'Wrapped scrolling';\n            icon = React__namespace.createElement(WrappedScrollingIcon, null);\n            break;\n        case core.ScrollMode.Vertical:\n        default:\n            label =\n                l10n && l10n.scrollMode\n                    ? l10n.scrollMode.verticalScrolling\n                    : 'Vertical scrolling';\n            icon = React__namespace.createElement(VerticalScrollingIcon, null);\n            break;\n    }\n    return children({ icon: icon, label: label, onClick: onClick });\n};\n\nvar TOOLTIP_OFFSET = { left: 0, top: 8 };\nvar SwitchScrollModeButton = function (_a) {\n    var isSelected = _a.isSelected, mode = _a.mode, onClick = _a.onClick;\n    var testId = '';\n    switch (mode) {\n        case core.ScrollMode.Horizontal:\n            testId = 'scroll-mode__horizontal-button';\n            break;\n        case core.ScrollMode.Wrapped:\n            testId = 'scroll-mode__wrapped-button';\n            break;\n        case core.ScrollMode.Vertical:\n        default:\n            testId = 'scroll-mode__vertical-button';\n            break;\n    }\n    return (React__namespace.createElement(SwitchScrollModeDecorator, { mode: mode, onClick: onClick }, function (props) { return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"scroll-mode-switch\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: props.label, isSelected: isSelected, testId: testId, onClick: props.onClick }, props.icon), content: function () { return props.label; }, offset: TOOLTIP_OFFSET })); }));\n};\n\nvar useScrollMode = function (store) {\n    var _a = React__namespace.useState(store.get('scrollMode') || core.ScrollMode.Vertical), scrollMode = _a[0], setScrollMode = _a[1];\n    var handleScrollModeChanged = function (currentScrollMode) {\n        setScrollMode(currentScrollMode);\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('scrollMode', handleScrollModeChanged);\n        return function () {\n            store.unsubscribe('scrollMode', handleScrollModeChanged);\n        };\n    }, []);\n    return { scrollMode: scrollMode };\n};\n\nvar SwitchScrollMode = function (_a) {\n    var children = _a.children, mode = _a.mode, store = _a.store;\n    var scrollMode = useScrollMode(store).scrollMode;\n    var onClick = function () {\n        store.get('switchScrollMode')(mode);\n    };\n    var isSelected = scrollMode === mode;\n    var defaultChildren = function (props) { return (React__namespace.createElement(SwitchScrollModeButton, { isSelected: isSelected, mode: props.mode, onClick: props.onClick })); };\n    var render = children || defaultChildren;\n    return render({\n        isSelected: isSelected,\n        mode: mode,\n        onClick: onClick,\n    });\n};\n\nvar SwitchScrollModeMenuItem = function (_a) {\n    var isSelected = _a.isSelected, mode = _a.mode, onClick = _a.onClick;\n    var testId = '';\n    switch (mode) {\n        case core.ScrollMode.Horizontal:\n            testId = 'scroll-mode__horizontal-menu';\n            break;\n        case core.ScrollMode.Wrapped:\n            testId = 'scroll-mode__wrapped-menu';\n            break;\n        case core.ScrollMode.Vertical:\n        default:\n            testId = 'scroll-mode__vertical-menu';\n            break;\n    }\n    return (React__namespace.createElement(SwitchScrollModeDecorator, { mode: mode, onClick: onClick }, function (props) { return (React__namespace.createElement(core.MenuItem, { checked: isSelected, icon: props.icon, testId: testId, onClick: props.onClick }, props.label)); }));\n};\n\nvar scrollModePlugin = function () {\n    var store = React__namespace.useMemo(function () {\n        return core.createStore({\n            scrollMode: core.ScrollMode.Vertical,\n            switchScrollMode: function () {\n            },\n        });\n    }, []);\n    var SwitchScrollModeDecorator = function (props) { return React__namespace.createElement(SwitchScrollMode, __assign({}, props, { store: store })); };\n    var SwitchScrollModeButtonDecorator = function (props) { return (React__namespace.createElement(SwitchScrollModeDecorator, { mode: props.mode }, function (p) { return (React__namespace.createElement(SwitchScrollModeButton, { isSelected: p.isSelected, mode: p.mode, onClick: function () {\n            p.onClick();\n        } })); })); };\n    var SwitchScrollModeMenuItemDecorator = function (props) { return (React__namespace.createElement(SwitchScrollModeDecorator, { mode: props.mode }, function (p) { return (React__namespace.createElement(SwitchScrollModeMenuItem, { isSelected: p.isSelected, mode: p.mode, onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    return {\n        install: function (pluginFunctions) {\n            store.update('switchScrollMode', pluginFunctions.switchScrollMode);\n        },\n        onViewerStateChange: function (viewerState) {\n            store.update('scrollMode', viewerState.scrollMode);\n            return viewerState;\n        },\n        switchScrollMode: function (mode) {\n            store.get('switchScrollMode')(mode);\n        },\n        SwitchScrollMode: SwitchScrollModeDecorator,\n        SwitchScrollModeButton: SwitchScrollModeButtonDecorator,\n        SwitchScrollModeMenuItem: SwitchScrollModeMenuItemDecorator,\n    };\n};\n\nexports.HorizontalScrollingIcon = HorizontalScrollingIcon;\nexports.VerticalScrollingIcon = VerticalScrollingIcon;\nexports.WrappedScrollingIcon = WrappedScrollingIcon;\nexports.scrollModePlugin = scrollModePlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/scroll-mode/lib/cjs/scroll-mode.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/scroll-mode/lib/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/scroll-mode/lib/index.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/scroll-mode.js */ \"./node_modules/@react-pdf-viewer/scroll-mode/lib/cjs/scroll-mode.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvc2Nyb2xsLW1vZGUvbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsSUFBSSx1SUFBZ0Q7QUFDcEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC1wZGYtdmlld2VyL3Njcm9sbC1tb2RlL2xpYi9pbmRleC5qcz80NjM2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBSZWFjdCBjb21wb25lbnQgdG8gdmlldyBhIFBERiBkb2N1bWVudFxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldlxuICogQGxpY2Vuc2UgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldi9saWNlbnNlXG4gKiBAY29weXJpZ2h0IDIwMTktMjAyMiBOZ3V5ZW4gSHV1IFBodW9jIDxtZUBwaHVvYy5uZz5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY3JvbGwtbW9kZS5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY3JvbGwtbW9kZS5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/scroll-mode/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/search/lib/cjs/search.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/search/lib/cjs/search.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar NextIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M0.541,5.627L11.666,18.2c0.183,0.207,0.499,0.226,0.706,0.043c0.015-0.014,0.03-0.028,0.043-0.043\\n            L23.541,5.627\" }))); };\n\nvar PreviousIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M23.535,18.373L12.409,5.8c-0.183-0.207-0.499-0.226-0.706-0.043C11.688,5.77,11.674,5.785,11.66,5.8\\n            L0.535,18.373\" }))); };\n\nvar SearchIcon = function () { return (React__namespace.createElement(core.Icon, { ignoreDirection: true, size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M10.5,0.5c5.523,0,10,4.477,10,10s-4.477,10-10,10s-10-4.477-10-10S4.977,0.5,10.5,0.5z\\n            M23.5,23.5\\n            l-5.929-5.929\" }))); };\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar EMPTY_KEYWORD_REGEXP = {\n    keyword: '',\n    regExp: new RegExp(' '),\n    wholeWords: false,\n};\n\nvar calculateOffset = function (children, parent) {\n    var top = children.offsetTop;\n    var left = children.offsetLeft;\n    var p = children.parentElement;\n    while (p && p !== parent) {\n        top += p.offsetTop;\n        left += p.offsetLeft;\n        p = p.parentElement;\n    }\n    return {\n        left: left,\n        top: top,\n    };\n};\n\nvar getCssProperties = function (area) {\n    return {\n        left: \"\".concat(area.left, \"%\"),\n        top: \"\".concat(area.top, \"%\"),\n        height: \"\".concat(area.height, \"%\"),\n        width: \"\".concat(area.width, \"%\"),\n    };\n};\n\nvar HightlightItem = function (_a) {\n    var index = _a.index, area = _a.area, onHighlightKeyword = _a.onHighlightKeyword;\n    var containerRef = React__namespace.useRef();\n    core.useIsomorphicLayoutEffect(function () {\n        var highlightEle = containerRef.current;\n        if (onHighlightKeyword && highlightEle) {\n            onHighlightKeyword({\n                highlightEle: highlightEle,\n                keyword: area.keyword,\n            });\n        }\n    }, []);\n    return (React__namespace.createElement(\"div\", { className: \"rpv-search__highlight\", \"data-index\": index, ref: containerRef, style: getCssProperties(area), title: area.keywordStr.trim() }));\n};\n\nvar removeNode = function (ele) {\n    var parent = ele.parentNode;\n    if (parent) {\n        parent.removeChild(ele);\n    }\n};\nvar replaceNode = function (replacementNode, node) {\n    removeNode(replacementNode);\n    var parent = node.parentNode;\n    if (parent) {\n        parent.insertBefore(replacementNode, node);\n    }\n    removeNode(node);\n};\nvar unwrap = function (ele) {\n    var parent = ele.parentNode;\n    if (!parent) {\n        return;\n    }\n    var range = document.createRange();\n    range.selectNodeContents(ele);\n    replaceNode(range.extractContents(), ele);\n    parent.normalize();\n};\n\nvar sortHighlightPosition = function (a, b) {\n    if (a.top < b.top) {\n        return -1;\n    }\n    if (a.top > b.top) {\n        return 1;\n    }\n    if (a.left < b.left) {\n        return -1;\n    }\n    if (a.left > b.left) {\n        return 1;\n    }\n    return 0;\n};\nvar Highlights = function (_a) {\n    var numPages = _a.numPages, pageIndex = _a.pageIndex, renderHighlights = _a.renderHighlights, store = _a.store, onHighlightKeyword = _a.onHighlightKeyword;\n    var containerRef = React__namespace.useRef();\n    var defaultRenderHighlights = React__namespace.useCallback(function (renderProps) { return (React__namespace.createElement(React__namespace.Fragment, null, renderProps.highlightAreas.map(function (area, index) { return (React__namespace.createElement(HightlightItem, { index: index, key: index, area: area, onHighlightKeyword: onHighlightKeyword })); }))); }, []);\n    var renderHighlightElements = renderHighlights || defaultRenderHighlights;\n    var _b = React__namespace.useState(store.get('matchPosition')), matchPosition = _b[0], setMatchPosition = _b[1];\n    var _c = React__namespace.useState(store.get('keyword') || [EMPTY_KEYWORD_REGEXP]), keywordRegexp = _c[0], setKeywordRegexp = _c[1];\n    var _d = React__namespace.useState({\n        pageIndex: pageIndex,\n        scale: 1,\n        status: core.LayerRenderStatus.PreRender,\n    }), renderStatus = _d[0], setRenderStatus = _d[1];\n    var currentMatchRef = React__namespace.useRef(null);\n    var characterIndexesRef = React__namespace.useRef([]);\n    var _e = React__namespace.useState([]), highlightAreas = _e[0], setHighlightAreas = _e[1];\n    var defaultTargetPageFilter = function () { return true; };\n    var targetPageFilter = React__namespace.useCallback(function () { return store.get('targetPageFilter') || defaultTargetPageFilter; }, [store.get('targetPageFilter')]);\n    var highlight = function (keywordStr, keyword, textLayerEle, span, charIndexSpan) {\n        var range = document.createRange();\n        var firstChild = span.firstChild;\n        if (!firstChild || firstChild.nodeType !== Node.TEXT_NODE) {\n            return null;\n        }\n        var length = firstChild.textContent.length;\n        var startOffset = charIndexSpan[0].charIndexInSpan;\n        var endOffset = charIndexSpan.length === 1 ? startOffset : charIndexSpan[charIndexSpan.length - 1].charIndexInSpan;\n        if (startOffset > length || endOffset + 1 > length) {\n            return null;\n        }\n        range.setStart(firstChild, startOffset);\n        range.setEnd(firstChild, endOffset + 1);\n        var wrapper = document.createElement('span');\n        range.surroundContents(wrapper);\n        var wrapperRect = wrapper.getBoundingClientRect();\n        var textLayerRect = textLayerEle.getBoundingClientRect();\n        var pageHeight = textLayerRect.height;\n        var pageWidth = textLayerRect.width;\n        var left = (100 * (wrapperRect.left - textLayerRect.left)) / pageWidth;\n        var top = (100 * (wrapperRect.top - textLayerRect.top)) / pageHeight;\n        var height = (100 * wrapperRect.height) / pageHeight;\n        var width = (100 * wrapperRect.width) / pageWidth;\n        unwrap(wrapper);\n        return {\n            keyword: keyword,\n            keywordStr: keywordStr,\n            numPages: numPages,\n            pageIndex: pageIndex,\n            left: left,\n            top: top,\n            height: height,\n            width: width,\n            pageHeight: pageHeight,\n            pageWidth: pageWidth,\n        };\n    };\n    var highlightAll = function (textLayerEle) {\n        var charIndexes = characterIndexesRef.current;\n        if (charIndexes.length === 0) {\n            return [];\n        }\n        var highlightPos = [];\n        var spans = [].slice.call(textLayerEle.querySelectorAll('.rpv-core__text-layer-text'));\n        var fullText = charIndexes.map(function (item) { return item.char; }).join('');\n        keywordRegexp.forEach(function (keyword) {\n            var keywordStr = keyword.keyword;\n            if (!keywordStr.trim()) {\n                return;\n            }\n            var cloneKeyword = keyword.regExp.flags.indexOf('g') === -1\n                ? new RegExp(keyword.regExp, \"\".concat(keyword.regExp.flags, \"g\"))\n                : keyword.regExp;\n            var match;\n            var matches = [];\n            while ((match = cloneKeyword.exec(fullText)) !== null) {\n                matches.push({\n                    keyword: cloneKeyword,\n                    startIndex: match.index,\n                    endIndex: cloneKeyword.lastIndex,\n                });\n            }\n            matches\n                .map(function (item) { return ({\n                keyword: item.keyword,\n                indexes: charIndexes.slice(item.startIndex, item.endIndex),\n            }); })\n                .forEach(function (item) {\n                var spanIndexes = item.indexes.reduce(function (acc, item) {\n                    acc[item.spanIndex] = (acc[item.spanIndex] || []).concat([item]);\n                    return acc;\n                }, {});\n                Object.values(spanIndexes).forEach(function (charIndexSpan) {\n                    if (charIndexSpan.length !== 1 || charIndexSpan[0].char.trim() !== '') {\n                        var normalizedCharSpan = keyword.wholeWords ? charIndexSpan.slice(1, -1) : charIndexSpan;\n                        var hightlighPosition = highlight(keywordStr, item.keyword, textLayerEle, spans[normalizedCharSpan[0].spanIndex], normalizedCharSpan);\n                        if (hightlighPosition) {\n                            highlightPos.push(hightlighPosition);\n                        }\n                    }\n                });\n            });\n        });\n        return highlightPos.sort(sortHighlightPosition);\n    };\n    var handleKeywordChanged = function (keyword) {\n        if (keyword && keyword.length > 0) {\n            setKeywordRegexp(keyword);\n        }\n    };\n    var handleMatchPositionChanged = function (currentPosition) { return setMatchPosition(currentPosition); };\n    var handleRenderStatusChanged = function (status) {\n        if (!status.has(pageIndex)) {\n            return;\n        }\n        var currentStatus = status.get(pageIndex);\n        if (currentStatus) {\n            setRenderStatus({\n                ele: currentStatus.ele,\n                pageIndex: pageIndex,\n                scale: currentStatus.scale,\n                status: currentStatus.status,\n            });\n        }\n    };\n    var isEmptyKeyword = function () {\n        return keywordRegexp.length === 0 || (keywordRegexp.length === 1 && keywordRegexp[0].keyword.trim() === '');\n    };\n    React__namespace.useEffect(function () {\n        if (isEmptyKeyword() ||\n            renderStatus.status !== core.LayerRenderStatus.DidRender ||\n            characterIndexesRef.current.length) {\n            return;\n        }\n        var textLayerEle = renderStatus.ele;\n        var spans = [].slice.call(textLayerEle.querySelectorAll('.rpv-core__text-layer-text'));\n        var charIndexes = spans\n            .map(function (span) { return span.textContent; })\n            .reduce(function (prev, curr, index) {\n            return prev.concat(curr.split('').map(function (c, i) { return ({\n                char: c,\n                charIndexInSpan: i,\n                spanIndex: index,\n            }); }));\n        }, [\n            {\n                char: '',\n                charIndexInSpan: 0,\n                spanIndex: 0,\n            },\n        ])\n            .slice(1);\n        characterIndexesRef.current = charIndexes;\n    }, [keywordRegexp, renderStatus.status]);\n    React__namespace.useEffect(function () {\n        if (isEmptyKeyword() ||\n            !renderStatus.ele ||\n            renderStatus.status !== core.LayerRenderStatus.DidRender ||\n            !targetPageFilter()({ pageIndex: pageIndex, numPages: numPages })) {\n            return;\n        }\n        var textLayerEle = renderStatus.ele;\n        var highlightPos = highlightAll(textLayerEle);\n        setHighlightAreas(highlightPos);\n    }, [keywordRegexp, matchPosition, renderStatus.status, characterIndexesRef.current]);\n    React__namespace.useEffect(function () {\n        if (isEmptyKeyword() && renderStatus.ele && renderStatus.status === core.LayerRenderStatus.DidRender) {\n            setHighlightAreas([]);\n        }\n    }, [keywordRegexp, renderStatus.status]);\n    React__namespace.useEffect(function () {\n        if (highlightAreas.length === 0) {\n            return;\n        }\n        var container = containerRef.current;\n        if (matchPosition.pageIndex !== pageIndex ||\n            !container ||\n            renderStatus.status !== core.LayerRenderStatus.DidRender) {\n            return;\n        }\n        var highlightEle = container.querySelector(\".rpv-search__highlight[data-index=\\\"\".concat(matchPosition.matchIndex, \"\\\"]\"));\n        if (!highlightEle) {\n            return;\n        }\n        var _a = calculateOffset(highlightEle, container), left = _a.left, top = _a.top;\n        var jump = store.get('jumpToDestination');\n        if (jump) {\n            jump(pageIndex, (container.getBoundingClientRect().height - top) / renderStatus.scale, left / renderStatus.scale, renderStatus.scale);\n            if (currentMatchRef.current) {\n                currentMatchRef.current.classList.remove('rpv-search__highlight--current');\n            }\n            currentMatchRef.current = highlightEle;\n            highlightEle.classList.add('rpv-search__highlight--current');\n        }\n    }, [highlightAreas, matchPosition]);\n    React__namespace.useEffect(function () {\n        store.subscribe('keyword', handleKeywordChanged);\n        store.subscribe('matchPosition', handleMatchPositionChanged);\n        store.subscribe('renderStatus', handleRenderStatusChanged);\n        return function () {\n            store.unsubscribe('keyword', handleKeywordChanged);\n            store.unsubscribe('matchPosition', handleMatchPositionChanged);\n            store.unsubscribe('renderStatus', handleRenderStatusChanged);\n        };\n    }, []);\n    return (React__namespace.createElement(\"div\", { className: \"rpv-search__highlights\", \"data-testid\": \"search__highlights-\".concat(pageIndex), ref: containerRef }, renderHighlightElements({\n        getCssProperties: getCssProperties,\n        highlightAreas: highlightAreas,\n    })));\n};\n\nvar escapeRegExp = function (input) { return input.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); };\nvar normalizeFlagKeyword = function (flagKeyword) {\n    var source = flagKeyword.wholeWords ? \" \".concat(flagKeyword.keyword, \" \") : flagKeyword.keyword;\n    var flags = flagKeyword.matchCase ? 'g' : 'gi';\n    return {\n        keyword: flagKeyword.keyword,\n        regExp: new RegExp(escapeRegExp(source), flags),\n        wholeWords: flagKeyword.wholeWords || false,\n    };\n};\nvar normalizeSingleKeyword = function (keyword, matchCase, wholeWords) {\n    if (keyword instanceof RegExp) {\n        return {\n            keyword: keyword.source,\n            regExp: keyword,\n            wholeWords: wholeWords || false,\n        };\n    }\n    if (typeof keyword === 'string') {\n        return keyword === ''\n            ? EMPTY_KEYWORD_REGEXP\n            : normalizeFlagKeyword({\n                keyword: keyword,\n                matchCase: matchCase || false,\n                wholeWords: wholeWords || false,\n            });\n    }\n    if (typeof matchCase !== 'undefined') {\n        keyword.matchCase = matchCase;\n    }\n    if (typeof wholeWords !== 'undefined') {\n        keyword.wholeWords = wholeWords;\n    }\n    return normalizeFlagKeyword(keyword);\n};\n\nvar useDocument = function (store) {\n    var currentDocRef = React__namespace.useRef(store.get('doc'));\n    var handleDocumentChanged = function (doc) {\n        currentDocRef.current = doc;\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('doc', handleDocumentChanged);\n        return function () {\n            store.unsubscribe('doc', handleDocumentChanged);\n        };\n    }, []);\n    return currentDocRef;\n};\n\nvar useSearch = function (store) {\n    var currentDocRef = useDocument(store);\n    var _a = React__namespace.useState([]), keywords = _a[0], setKeywords = _a[1];\n    var _b = React__namespace.useState([]), found = _b[0], setFound = _b[1];\n    var _c = React__namespace.useState(0), currentMatch = _c[0], setCurrentMatch = _c[1];\n    var _d = React__namespace.useState(false), matchCase = _d[0], setMatchCase = _d[1];\n    var textContents = React__namespace.useRef([]);\n    var _e = React__namespace.useState(false), wholeWords = _e[0], setWholeWords = _e[1];\n    var defaultTargetPageFilter = function () { return true; };\n    var targetPageFilter = React__namespace.useCallback(function () { return store.get('targetPageFilter') || defaultTargetPageFilter; }, [store.get('targetPageFilter')]);\n    var changeMatchCase = function (isChecked) {\n        setMatchCase(isChecked);\n        if (keywords.length > 0) {\n            searchFor(keywords, isChecked, wholeWords);\n        }\n    };\n    var changeWholeWords = function (isChecked) {\n        setWholeWords(isChecked);\n        if (keywords.length > 0) {\n            searchFor(keywords, matchCase, isChecked);\n        }\n    };\n    var jumpToMatch = function (index) {\n        var numMatches = found.length;\n        if (keywords.length === 0 || numMatches === 0) {\n            return null;\n        }\n        var normalizedIndex = index === numMatches + 1 ? 1 : Math.max(1, Math.min(numMatches, index));\n        setCurrentMatch(normalizedIndex);\n        return jumpToGivenMatch(found[normalizedIndex - 1]);\n    };\n    var jumpToPreviousMatch = function () { return jumpToMatch(currentMatch - 1); };\n    var jumpToNextMatch = function () { return jumpToMatch(currentMatch + 1); };\n    var clearKeyword = function () {\n        store.update('keyword', [EMPTY_KEYWORD_REGEXP]);\n        setKeyword('');\n        setCurrentMatch(0);\n        setFound([]);\n        setMatchCase(false);\n        setWholeWords(false);\n    };\n    var search = function () { return searchFor(keywords, matchCase, wholeWords); };\n    var setKeyword = function (keyword) { return setKeywords(keyword === '' ? [] : [keyword]); };\n    var setTargetPages = function (targetPageFilter) {\n        store.update('targetPageFilter', targetPageFilter);\n    };\n    var getTextContents = function () {\n        var currentDoc = currentDocRef.current;\n        if (!currentDoc) {\n            return Promise.resolve([]);\n        }\n        var promises = Array(currentDoc.numPages)\n            .fill(0)\n            .map(function (_, pageIndex) {\n            return core.getPage(currentDoc, pageIndex)\n                .then(function (page) {\n                return page.getTextContent();\n            })\n                .then(function (content) {\n                var pageContent = content.items.map(function (item) { return item.str || ''; }).join('');\n                return Promise.resolve({\n                    pageContent: pageContent,\n                    pageIndex: pageIndex,\n                });\n            });\n        });\n        return Promise.all(promises).then(function (data) {\n            data.sort(function (a, b) { return a.pageIndex - b.pageIndex; });\n            return Promise.resolve(data.map(function (item) { return item.pageContent; }));\n        });\n    };\n    var jumpToGivenMatch = function (match) {\n        var jumpToPage = store.get('jumpToPage');\n        if (jumpToPage) {\n            jumpToPage(match.pageIndex);\n        }\n        store.update('matchPosition', {\n            matchIndex: match.matchIndex,\n            pageIndex: match.pageIndex,\n        });\n        return match;\n    };\n    var getKeywordSource = function (keyword) {\n        if (keyword instanceof RegExp) {\n            return keyword.source;\n        }\n        if (typeof keyword === 'string') {\n            return keyword;\n        }\n        return keyword.keyword;\n    };\n    var searchFor = function (keywordParam, matchCaseParam, wholeWordsParam) {\n        var currentDoc = currentDocRef.current;\n        if (!currentDoc) {\n            return Promise.resolve([]);\n        }\n        var numPages = currentDoc.numPages;\n        var keywords = keywordParam.map(function (k) { return normalizeSingleKeyword(k, matchCaseParam, wholeWordsParam); });\n        store.update('keyword', keywords);\n        setCurrentMatch(0);\n        setFound([]);\n        return new Promise(function (resolve, _) {\n            var getTextPromise = textContents.current.length === 0\n                ? getTextContents().then(function (response) {\n                    textContents.current = response;\n                    return Promise.resolve(response);\n                })\n                : Promise.resolve(textContents.current);\n            getTextPromise.then(function (response) {\n                var arr = [];\n                response.forEach(function (pageText, pageIndex) {\n                    if (targetPageFilter()({ pageIndex: pageIndex, numPages: numPages })) {\n                        keywords.forEach(function (keyword) {\n                            var matchIndex = 0;\n                            var matches;\n                            while ((matches = keyword.regExp.exec(pageText)) !== null) {\n                                arr.push({\n                                    keyword: keyword.regExp,\n                                    matchIndex: matchIndex,\n                                    pageIndex: pageIndex,\n                                    pageText: pageText,\n                                    startIndex: matches.index,\n                                    endIndex: keyword.regExp.lastIndex,\n                                });\n                                matchIndex++;\n                            }\n                        });\n                    }\n                });\n                setFound(arr);\n                if (arr.length > 0) {\n                    setCurrentMatch(1);\n                    jumpToGivenMatch(arr[0]);\n                }\n                resolve(arr);\n            });\n        });\n    };\n    React__namespace.useEffect(function () {\n        textContents.current = [];\n    }, [currentDocRef.current]);\n    return {\n        clearKeyword: clearKeyword,\n        changeMatchCase: changeMatchCase,\n        changeWholeWords: changeWholeWords,\n        currentMatch: currentMatch,\n        jumpToMatch: jumpToMatch,\n        jumpToNextMatch: jumpToNextMatch,\n        jumpToPreviousMatch: jumpToPreviousMatch,\n        keywords: keywords,\n        matchCase: matchCase,\n        numberOfMatches: found.length,\n        wholeWords: wholeWords,\n        search: search,\n        searchFor: searchFor,\n        setKeywords: setKeywords,\n        keyword: keywords.length === 0 ? '' : getKeywordSource(keywords[0]),\n        setKeyword: setKeyword,\n        setTargetPages: setTargetPages,\n    };\n};\n\nvar Search = function (_a) {\n    var children = _a.children, store = _a.store;\n    var result = useSearch(store);\n    return children(__assign({}, result));\n};\n\nvar ShortcutHandler = function (_a) {\n    var containerRef = _a.containerRef, store = _a.store;\n    var _b = React__namespace.useState(true), isMouseInside = _b[0], setMouseInside = _b[1];\n    var handleMouseEnter = function () { return setMouseInside(true); };\n    var handleMouseLeave = function () { return setMouseInside(false); };\n    var handleKeydown = function (e) {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        if (e.shiftKey || e.altKey || e.key !== 'f') {\n            return;\n        }\n        var isCommandPressed = core.isMac() ? e.metaKey && !e.ctrlKey : e.ctrlKey;\n        if (!isCommandPressed) {\n            return;\n        }\n        if (isMouseInside || (document.activeElement && containerEle.contains(document.activeElement))) {\n            e.preventDefault();\n            store.update('areShortcutsPressed', true);\n        }\n    };\n    React__namespace.useEffect(function () {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        document.addEventListener('keydown', handleKeydown);\n        containerEle.addEventListener('mouseenter', handleMouseEnter);\n        containerEle.addEventListener('mouseleave', handleMouseLeave);\n        return function () {\n            document.removeEventListener('keydown', handleKeydown);\n            containerEle.removeEventListener('mouseenter', handleMouseEnter);\n            containerEle.removeEventListener('mouseleave', handleMouseLeave);\n        };\n    }, [containerRef.current]);\n    return React__namespace.createElement(React__namespace.Fragment, null);\n};\n\nvar PORTAL_OFFSET$1 = { left: 0, top: 8 };\nvar SearchPopover = function (_a) {\n    var store = _a.store, onToggle = _a.onToggle;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var _b = React__namespace.useState(false), isQuerying = _b[0], setIsQuerying = _b[1];\n    var _c = React__namespace.useState(false), searchDone = _c[0], setSearchDone = _c[1];\n    var isRtl = direction === core.TextDirection.RightToLeft;\n    var _d = useSearch(store), clearKeyword = _d.clearKeyword, changeMatchCase = _d.changeMatchCase, changeWholeWords = _d.changeWholeWords, currentMatch = _d.currentMatch, jumpToNextMatch = _d.jumpToNextMatch, jumpToPreviousMatch = _d.jumpToPreviousMatch, keyword = _d.keyword, matchCase = _d.matchCase, numberOfMatches = _d.numberOfMatches, wholeWords = _d.wholeWords, search = _d.search, setKeyword = _d.setKeyword;\n    var onKeydownSearch = function (e) {\n        if (e.key === 'Enter' && keyword) {\n            if (searchDone) {\n                jumpToNextMatch();\n            }\n            else {\n                setIsQuerying(true);\n                search().then(function (_) {\n                    setIsQuerying(false);\n                    setSearchDone(true);\n                });\n            }\n        }\n    };\n    var onChangeMatchCase = function (e) {\n        setSearchDone(false);\n        changeMatchCase(e.target.checked);\n    };\n    var onChangeWholeWords = function (e) {\n        setSearchDone(false);\n        changeWholeWords(e.target.checked);\n    };\n    var onClose = function () {\n        onToggle();\n        clearKeyword();\n    };\n    var onChangeKeyword = function (value) {\n        setSearchDone(false);\n        setKeyword(value);\n    };\n    var searchLabel = l10n && l10n.search ? l10n.search.enterToSearch : 'Enter to search';\n    var previousMatchLabel = l10n && l10n.search ? l10n.search.previousMatch : 'Previous match';\n    var nextMatchLabel = l10n && l10n.search ? l10n.search.nextMatch : 'Next match';\n    return (React__namespace.createElement(\"div\", { className: \"rpv-search__popover\" },\n        React__namespace.createElement(\"div\", { className: \"rpv-search__popover-input-counter\" },\n            React__namespace.createElement(core.TextBox, { ariaLabel: searchLabel, autoFocus: true, placeholder: searchLabel, type: \"text\", value: keyword, onChange: onChangeKeyword, onKeyDown: onKeydownSearch }),\n            React__namespace.createElement(\"div\", { className: core.classNames({\n                    'rpv-search__popover-counter': true,\n                    'rpv-search__popover-counter--ltr': !isRtl,\n                    'rpv-search__popover-counter--rtl': isRtl,\n                }) },\n                isQuerying && React__namespace.createElement(core.Spinner, { testId: \"search__popover-searching\", size: \"1rem\" }),\n                !isQuerying && (React__namespace.createElement(\"span\", { \"data-testid\": \"search__popover-num-matches\" },\n                    currentMatch,\n                    \"/\",\n                    numberOfMatches)))),\n        React__namespace.createElement(\"label\", { className: \"rpv-search__popover-label\" },\n            React__namespace.createElement(\"input\", { className: \"rpv-search__popover-label-checkbox\", checked: matchCase, type: \"checkbox\", onChange: onChangeMatchCase }),\n            ' ',\n            l10n && l10n.search ? l10n.search.matchCase : 'Match case'),\n        React__namespace.createElement(\"label\", { className: \"rpv-search__popover-label\" },\n            React__namespace.createElement(\"input\", { className: \"rpv-search__popover-label-checkbox\", checked: wholeWords, type: \"checkbox\", onChange: onChangeWholeWords }),\n            ' ',\n            l10n && l10n.search ? l10n.search.wholeWords : 'Whole words'),\n        React__namespace.createElement(\"div\", { className: \"rpv-search__popover-footer\" },\n            React__namespace.createElement(\"div\", { className: \"rpv-search__popover-footer-item\" },\n                React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"search-previous-match\", position: isRtl ? core.Position.BottomRight : core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: previousMatchLabel, isDisabled: currentMatch <= 1, onClick: jumpToPreviousMatch },\n                        React__namespace.createElement(PreviousIcon, null)), content: function () { return previousMatchLabel; }, offset: PORTAL_OFFSET$1 })),\n            React__namespace.createElement(\"div\", { className: \"rpv-search__popover-footer-item\" },\n                React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"search-next-match\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: nextMatchLabel, isDisabled: currentMatch > numberOfMatches - 1, onClick: jumpToNextMatch },\n                        React__namespace.createElement(NextIcon, null)), content: function () { return nextMatchLabel; }, offset: PORTAL_OFFSET$1 })),\n            React__namespace.createElement(\"div\", { className: core.classNames({\n                    'rpv-search__popover-footer-button': true,\n                    'rpv-search__popover-footer-button--ltr': !isRtl,\n                    'rpv-search__popover-footer-button--rtl': isRtl,\n                }) },\n                React__namespace.createElement(core.Button, { onClick: onClose }, l10n && l10n.search ? l10n.search.close : 'Close')))));\n};\n\nvar ShowSearchPopoverDecorator = function (_a) {\n    var children = _a.children, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.search ? l10n.search.search : 'Search';\n    var icon = React__namespace.createElement(SearchIcon, null);\n    return children({ icon: icon, label: label, onClick: onClick });\n};\n\nvar TOOLTIP_OFFSET = { left: 0, top: 8 };\nvar ShowSearchPopoverButton = function (_a) {\n    var enableShortcuts = _a.enableShortcuts, store = _a.store, onClick = _a.onClick;\n    var ariaKeyShortcuts = enableShortcuts ? (core.isMac() ? 'Meta+F' : 'Ctrl+F') : '';\n    var handleShortcutsPressed = function (areShortcutsPressed) {\n        if (areShortcutsPressed) {\n            onClick();\n        }\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('areShortcutsPressed', handleShortcutsPressed);\n        return function () {\n            store.unsubscribe('areShortcutsPressed', handleShortcutsPressed);\n        };\n    }, []);\n    return (React__namespace.createElement(ShowSearchPopoverDecorator, { onClick: onClick }, function (p) { return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"search-popover\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaKeyShortcuts: ariaKeyShortcuts, ariaLabel: p.label, testId: \"search__popover-button\", onClick: onClick }, p.icon), content: function () { return p.label; }, offset: TOOLTIP_OFFSET })); }));\n};\n\nvar PORTAL_OFFSET = { left: 0, top: 8 };\nvar ShowSearchPopover = function (_a) {\n    var children = _a.children, enableShortcuts = _a.enableShortcuts, store = _a.store;\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var portalPosition = direction === core.TextDirection.RightToLeft ? core.Position.BottomRight : core.Position.BottomLeft;\n    var defaultChildren = function (props) { return (React__namespace.createElement(ShowSearchPopoverButton, __assign({ enableShortcuts: enableShortcuts, store: store }, props))); };\n    var render = children || defaultChildren;\n    return (React__namespace.createElement(core.Popover, { ariaControlsSuffix: \"search\", lockScroll: false, position: portalPosition, target: function (toggle) {\n            return render({\n                onClick: toggle,\n            });\n        }, content: function (toggle) { return React__namespace.createElement(SearchPopover, { store: store, onToggle: toggle }); }, offset: PORTAL_OFFSET, closeOnClickOutside: false, closeOnEscape: true }));\n};\n\nvar normalizeKeywords = function (keyword) {\n    return Array.isArray(keyword) ? keyword.map(function (k) { return normalizeSingleKeyword(k); }) : [normalizeSingleKeyword(keyword)];\n};\nvar searchPlugin = function (props) {\n    var searchPluginProps = React__namespace.useMemo(function () { return Object.assign({}, { enableShortcuts: true, onHighlightKeyword: function () { } }, props); }, []);\n    var store = React__namespace.useMemo(function () {\n        return core.createStore({\n            matchPosition: {\n                matchIndex: -1,\n                pageIndex: -1,\n            },\n            renderStatus: new Map(),\n            keyword: props && props.keyword ? normalizeKeywords(props.keyword) : [EMPTY_KEYWORD_REGEXP],\n        });\n    }, []);\n    var _a = useSearch(store), clearKeyword = _a.clearKeyword, jumpToMatch = _a.jumpToMatch, jumpToNextMatch = _a.jumpToNextMatch, jumpToPreviousMatch = _a.jumpToPreviousMatch, searchFor = _a.searchFor, setKeywords = _a.setKeywords, setTargetPages = _a.setTargetPages;\n    var SearchDecorator = function (props) { return React__namespace.createElement(Search, __assign({}, props, { store: store })); };\n    var ShowSearchPopoverDecorator = function (props) { return (React__namespace.createElement(ShowSearchPopover, __assign({ enableShortcuts: searchPluginProps.enableShortcuts }, props, { store: store }))); };\n    var ShowSearchPopoverButtonDecorator = function () { return (React__namespace.createElement(ShowSearchPopoverDecorator, null, function (props) { return (React__namespace.createElement(ShowSearchPopoverButton, __assign({ enableShortcuts: searchPluginProps.enableShortcuts, store: store }, props))); })); };\n    var renderViewer = function (renderViewerProps) {\n        var currentSlot = renderViewerProps.slot;\n        if (currentSlot.subSlot) {\n            currentSlot.subSlot.children = (React__namespace.createElement(React__namespace.Fragment, null,\n                searchPluginProps.enableShortcuts && (React__namespace.createElement(ShortcutHandler, { containerRef: renderViewerProps.containerRef, store: store })),\n                currentSlot.subSlot.children));\n        }\n        return currentSlot;\n    };\n    var renderPageLayer = function (renderProps) { return (React__namespace.createElement(Highlights, { key: renderProps.pageIndex, numPages: renderProps.doc.numPages, pageIndex: renderProps.pageIndex, renderHighlights: props === null || props === void 0 ? void 0 : props.renderHighlights, store: store, onHighlightKeyword: searchPluginProps.onHighlightKeyword })); };\n    return {\n        install: function (pluginFunctions) {\n            var keyword = props && props.keyword ? normalizeKeywords(props.keyword) : [EMPTY_KEYWORD_REGEXP];\n            store.update('jumpToDestination', pluginFunctions.jumpToDestination);\n            store.update('jumpToPage', pluginFunctions.jumpToPage);\n            store.update('keyword', keyword);\n        },\n        renderPageLayer: renderPageLayer,\n        renderViewer: renderViewer,\n        uninstall: function (props) {\n            var renderStatus = store.get('renderStatus');\n            if (renderStatus) {\n                renderStatus.clear();\n            }\n        },\n        onDocumentLoad: function (props) {\n            store.update('doc', props.doc);\n        },\n        onTextLayerRender: function (props) {\n            var renderStatus = store.get('renderStatus');\n            if (renderStatus) {\n                renderStatus = renderStatus.set(props.pageIndex, props);\n                store.update('renderStatus', renderStatus);\n            }\n        },\n        Search: SearchDecorator,\n        ShowSearchPopover: ShowSearchPopoverDecorator,\n        ShowSearchPopoverButton: ShowSearchPopoverButtonDecorator,\n        clearHighlights: function () {\n            clearKeyword();\n        },\n        highlight: function (keyword) {\n            var keywords = Array.isArray(keyword) ? keyword : [keyword];\n            setKeywords(keywords);\n            return searchFor(keywords);\n        },\n        jumpToMatch: jumpToMatch,\n        jumpToNextMatch: jumpToNextMatch,\n        jumpToPreviousMatch: jumpToPreviousMatch,\n        setTargetPages: setTargetPages,\n    };\n};\n\nexports.NextIcon = NextIcon;\nexports.PreviousIcon = PreviousIcon;\nexports.SearchIcon = SearchIcon;\nexports.searchPlugin = searchPlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/search/lib/cjs/search.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/search/lib/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/search/lib/index.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/search.js */ \"./node_modules/@react-pdf-viewer/search/lib/cjs/search.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvc2VhcmNoL2xpYi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLElBQUksd0hBQTJDO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcmVhY3QtcGRmLXZpZXdlci9zZWFyY2gvbGliL2luZGV4LmpzP2MzZWUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIFJlYWN0IGNvbXBvbmVudCB0byB2aWV3IGEgUERGIGRvY3VtZW50XG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0LXBkZi12aWV3ZXIuZGV2XG4gKiBAbGljZW5zZSBodHRwczovL3JlYWN0LXBkZi12aWV3ZXIuZGV2L2xpY2Vuc2VcbiAqIEBjb3B5cmlnaHQgMjAxOS0yMDIyIE5ndXllbiBIdXUgUGh1b2MgPG1lQHBodW9jLm5nPlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NlYXJjaC5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zZWFyY2guanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/search/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/selection-mode/lib/cjs/selection-mode.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/selection-mode/lib/cjs/selection-mode.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar HandToolIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M11.5,5.5v-2C11.5,2.672,12.172,2,13,2s1.5,0.672,1.5,1.5v2 M14.5,11.5v-6C14.5,4.672,15.172,4,16,4\\n            c0.828,0,1.5,0.672,1.5,1.5v3 M17.5,13V8.5C17.5,7.672,18.172,7,19,7s1.5,0.672,1.5,1.5v10c0,2.761-2.239,5-5,5h-3.335\\n            c-1.712-0.001-3.305-0.876-4.223-2.321C6.22,18.467,4.083,14,4.083,14c-0.378-0.545-0.242-1.292,0.303-1.67\\n            c0.446-0.309,1.044-0.281,1.458,0.07L8.5,15.5v-10C8.5,4.672,9.172,4,10,4s1.5,0.672,1.5,1.5v6\" }))); };\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nexports.SelectionMode = void 0;\n(function (SelectionMode) {\n    SelectionMode[\"Hand\"] = \"Hand\";\n    SelectionMode[\"Text\"] = \"Text\";\n})(exports.SelectionMode || (exports.SelectionMode = {}));\n\nvar TextSelectionIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M13.675,11.671l2.941-2.941c0.195-0.196,0.195-0.512-0.001-0.707C16.563,7.971,16.5,7.931,16.43,7.906\\n            L4.168,3.527C3.908,3.434,3.622,3.57,3.529,3.83c-0.039,0.109-0.039,0.228,0,0.336l4.379,12.262\\n            c0.093,0.26,0.379,0.396,0.639,0.303c0.07-0.025,0.133-0.065,0.185-0.117l2.943-2.943l6.146,6.146c0.195,0.195,0.512,0.195,0.707,0\\n            l1.293-1.293c0.195-0.195,0.195-0.512,0-0.707L13.675,11.671z\" }))); };\n\nvar SwitchSelectionModeDecorator = function (_a) {\n    var children = _a.children, mode = _a.mode, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = '';\n    var icon = React__namespace.createElement(TextSelectionIcon, null);\n    switch (mode) {\n        case exports.SelectionMode.Hand:\n            label =\n                l10n && l10n.selectionMode ? l10n.selectionMode.handTool : 'Hand tool';\n            icon = React__namespace.createElement(HandToolIcon, null);\n            break;\n        case exports.SelectionMode.Text:\n        default:\n            label =\n                l10n && l10n.selectionMode\n                    ? l10n.selectionMode.textSelectionTool\n                    : 'Text selection tool';\n            icon = React__namespace.createElement(TextSelectionIcon, null);\n            break;\n    }\n    return children({ icon: icon, label: label, onClick: onClick });\n};\n\nvar TOOLTIP_OFFSET = { left: 0, top: 8 };\nvar SwitchSelectionModeButton = function (_a) {\n    var isSelected = _a.isSelected, mode = _a.mode, onClick = _a.onClick;\n    var testId = '';\n    switch (mode) {\n        case exports.SelectionMode.Hand:\n            testId = 'selection-mode__hand-button';\n            break;\n        case exports.SelectionMode.Text:\n        default:\n            testId = 'selection-mode__text-button';\n    }\n    return (React__namespace.createElement(SwitchSelectionModeDecorator, { mode: mode, onClick: onClick }, function (props) { return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"selection-mode-switch\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: props.label, isSelected: isSelected, testId: testId, onClick: props.onClick }, props.icon), content: function () { return props.label; }, offset: TOOLTIP_OFFSET })); }));\n};\n\nvar SwitchSelectionMode = function (_a) {\n    var children = _a.children, mode = _a.mode, store = _a.store;\n    var onClick = function () { return store.update('selectionMode', mode); };\n    var isSelected = mode === store.get('selectionMode');\n    var defaultChildren = function (props) { return (React__namespace.createElement(SwitchSelectionModeButton, { isSelected: isSelected, mode: props.mode, onClick: props.onClick })); };\n    var render = children || defaultChildren;\n    return render({\n        isSelected: isSelected,\n        mode: mode,\n        onClick: onClick,\n    });\n};\n\nvar SwitchSelectionModeMenuItem = function (_a) {\n    var isSelected = _a.isSelected, mode = _a.mode, onClick = _a.onClick;\n    var testId = '';\n    switch (mode) {\n        case exports.SelectionMode.Hand:\n            testId = 'selection-mode__hand-menu';\n            break;\n        case exports.SelectionMode.Text:\n        default:\n            testId = 'selection-mode__text-menu';\n    }\n    return (React__namespace.createElement(SwitchSelectionModeDecorator, { mode: mode, onClick: onClick }, function (props) { return (React__namespace.createElement(core.MenuItem, { checked: isSelected, icon: props.icon, testId: testId, onClick: props.onClick }, props.label)); }));\n};\n\nvar Tracker = function (_a) {\n    var store = _a.store;\n    var pagesRef = React__namespace.useRef(null);\n    var _b = React__namespace.useState(exports.SelectionMode.Text), selectionMode = _b[0], setSelectionMode = _b[1];\n    var pos = React__namespace.useRef({ top: 0, left: 0, x: 0, y: 0 });\n    var onMouseMoveHandler = function (e) {\n        var ele = pagesRef.current;\n        if (!ele) {\n            return;\n        }\n        ele.scrollTop = pos.current.top - (e.clientY - pos.current.y);\n        ele.scrollLeft = pos.current.left - (e.clientX - pos.current.x);\n    };\n    var onMouseUpHandler = function () {\n        var ele = pagesRef.current;\n        if (!ele) {\n            return;\n        }\n        ele.classList.add('rpv-selection-mode__grab');\n        ele.classList.remove('rpv-selection-mode__grabbing');\n        document.removeEventListener('mousemove', onMouseMoveHandler);\n        document.removeEventListener('mouseup', onMouseUpHandler);\n    };\n    var onMouseDownHandler = function (e) {\n        var ele = pagesRef.current;\n        if (!ele || selectionMode === exports.SelectionMode.Text) {\n            return;\n        }\n        ele.classList.remove('rpv-selection-mode__grab');\n        ele.classList.add('rpv-selection-mode__grabbing');\n        e.preventDefault();\n        e.stopPropagation();\n        pos.current = {\n            left: ele.scrollLeft,\n            top: ele.scrollTop,\n            x: e.clientX,\n            y: e.clientY,\n        };\n        document.addEventListener('mousemove', onMouseMoveHandler);\n        document.addEventListener('mouseup', onMouseUpHandler);\n    };\n    var handlePagesContainer = function (getPagesContainer) {\n        pagesRef.current = getPagesContainer();\n    };\n    var handleSelectionModeChanged = function (mode) {\n        setSelectionMode(mode);\n    };\n    React__namespace.useEffect(function () {\n        var ele = pagesRef.current;\n        if (!ele) {\n            return;\n        }\n        selectionMode === exports.SelectionMode.Hand\n            ? ele.classList.add('rpv-selection-mode__grab')\n            : ele.classList.remove('rpv-selection-mode__grab');\n        ele.addEventListener('mousedown', onMouseDownHandler);\n        return function () {\n            ele.removeEventListener('mousedown', onMouseDownHandler);\n        };\n    }, [selectionMode]);\n    React__namespace.useEffect(function () {\n        store.subscribe('getPagesContainer', handlePagesContainer);\n        store.subscribe('selectionMode', handleSelectionModeChanged);\n        return function () {\n            store.unsubscribe('getPagesContainer', handlePagesContainer);\n            store.unsubscribe('selectionMode', handleSelectionModeChanged);\n        };\n    }, []);\n    return React__namespace.createElement(React__namespace.Fragment, null);\n};\n\nvar selectionModePlugin = function (props) {\n    var store = React__namespace.useMemo(function () { return core.createStore(); }, []);\n    var SwitchSelectionModeDecorator = function (props) { return (React__namespace.createElement(SwitchSelectionMode, __assign({}, props, { store: store }))); };\n    var SwitchSelectionModeButtonDecorator = function (props) { return (React__namespace.createElement(SwitchSelectionModeDecorator, { mode: props.mode }, function (p) { return (React__namespace.createElement(SwitchSelectionModeButton, { isSelected: p.isSelected, mode: p.mode, onClick: function () {\n            p.onClick();\n        } })); })); };\n    var SwitchSelectionModeMenuItemDecorator = function (props) { return (React__namespace.createElement(SwitchSelectionModeDecorator, { mode: props.mode }, function (p) { return (React__namespace.createElement(SwitchSelectionModeMenuItem, { isSelected: p.isSelected, mode: p.mode, onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    var renderViewer = function (props) {\n        var currentSlot = props.slot;\n        if (currentSlot.subSlot && currentSlot.subSlot.children) {\n            currentSlot.subSlot.children = (React__namespace.createElement(React__namespace.Fragment, null,\n                React__namespace.createElement(Tracker, { store: store }),\n                currentSlot.subSlot.children));\n        }\n        return currentSlot;\n    };\n    return {\n        install: function (pluginFunctions) {\n            store.update('selectionMode', props && props.selectionMode ? props.selectionMode : exports.SelectionMode.Text);\n            store.update('getPagesContainer', pluginFunctions.getPagesContainer);\n        },\n        renderViewer: renderViewer,\n        SwitchSelectionMode: SwitchSelectionModeDecorator,\n        SwitchSelectionModeButton: SwitchSelectionModeButtonDecorator,\n        SwitchSelectionModeMenuItem: SwitchSelectionModeMenuItemDecorator,\n    };\n};\n\nexports.HandToolIcon = HandToolIcon;\nexports.TextSelectionIcon = TextSelectionIcon;\nexports.selectionModePlugin = selectionModePlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/selection-mode/lib/cjs/selection-mode.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/selection-mode/lib/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/selection-mode/lib/index.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/selection-mode.js */ \"./node_modules/@react-pdf-viewer/selection-mode/lib/cjs/selection-mode.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvc2VsZWN0aW9uLW1vZGUvbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsSUFBSSxnSkFBbUQ7QUFDdkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC1wZGYtdmlld2VyL3NlbGVjdGlvbi1tb2RlL2xpYi9pbmRleC5qcz83ZTJmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBSZWFjdCBjb21wb25lbnQgdG8gdmlldyBhIFBERiBkb2N1bWVudFxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldlxuICogQGxpY2Vuc2UgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldi9saWNlbnNlXG4gKiBAY29weXJpZ2h0IDIwMTktMjAyMiBOZ3V5ZW4gSHV1IFBodW9jIDxtZUBwaHVvYy5uZz5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zZWxlY3Rpb24tbW9kZS5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zZWxlY3Rpb24tbW9kZS5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/selection-mode/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/theme/lib/cjs/theme.js":
/*!***************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/theme/lib/cjs/theme.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar DarkIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M19.5,15.106l2.4-2.4a1,1,0,0,0,0-1.414l-2.4-2.4V5.5a1,1,0,0,0-1-1H15.106l-2.4-2.4a1,1,0,0,0-1.414,0l-2.4,2.4H5.5a1,1,0,0,0-1,1V8.894l-2.4,2.4a1,1,0,0,0,0,1.414l2.4,2.4V18.5a1,1,0,0,0,1,1H8.894l2.4,2.4a1,1,0,0,0,1.414,0l2.4-2.4H18.5a1,1,0,0,0,1-1Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M10,6.349a6,6,0,0,1,0,11.3,6,6,0,1,0,0-11.3Z\" }))); };\n\nvar LightIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M19.491,15.106l2.4-2.4a1,1,0,0,0,0-1.414l-2.4-2.4V5.5a1,1,0,0,0-1-1H15.1L12.7,2.1a1,1,0,0,0-1.414,0l-2.4,2.4H5.491a1,1,0,0,0-1,1V8.894l-2.4,2.4a1,1,0,0,0,0,1.414l2.4,2.4V18.5a1,1,0,0,0,1,1H8.885l2.4,2.4a1,1,0,0,0,1.414,0l2.4-2.4h3.394a1,1,0,0,0,1-1Z\" }),\n    React__namespace.createElement(\"path\", { d: \"M11.491,6c4,0,6,2.686,6,6s-2,6-6,6Z\" }))); };\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar TOOLTIP_OFFSET = { left: 0, top: 8 };\nvar SwitchThemeButton = function (_a) {\n    var onClick = _a.onClick;\n    var theme = React__namespace.useContext(core.ThemeContext);\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var isDarkTheme = theme.currentTheme === 'dark';\n    var label = l10n && l10n.theme\n        ? isDarkTheme\n            ? l10n.theme.switchLightTheme\n            : l10n.theme.switchDarkTheme\n        : isDarkTheme\n            ? 'Switch to the light theme'\n            : 'Switch to the dark theme';\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"theme-switch\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: label, testId: \"theme__switch-button\", onClick: onClick }, isDarkTheme ? React__namespace.createElement(LightIcon, null) : React__namespace.createElement(DarkIcon, null)), content: function () { return label; }, offset: TOOLTIP_OFFSET }));\n};\n\nvar SwitchTheme = function (_a) {\n    var children = _a.children;\n    var theme = React__namespace.useContext(core.ThemeContext);\n    var defaultChildern = function (props) { return React__namespace.createElement(SwitchThemeButton, { onClick: props.onClick }); };\n    var render = children || defaultChildern;\n    return render({\n        onClick: function () { return theme.setCurrentTheme(theme.currentTheme === 'dark' ? 'light' : 'dark'); },\n    });\n};\n\nvar SwitchThemeMenuItem = function (_a) {\n    var onClick = _a.onClick;\n    var theme = React__namespace.useContext(core.ThemeContext);\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var isDarkTheme = theme.currentTheme === 'dark';\n    var label = l10n && l10n.theme\n        ? isDarkTheme\n            ? l10n.theme.switchLightTheme\n            : l10n.theme.switchDarkTheme\n        : isDarkTheme\n            ? 'Switch to the light theme'\n            : 'Switch to the dark theme';\n    return (React__namespace.createElement(core.MenuItem, { icon: isDarkTheme ? React__namespace.createElement(LightIcon, null) : React__namespace.createElement(DarkIcon, null), testId: \"theme__switch-menu\", onClick: onClick }, label));\n};\n\nvar themePlugin = function () {\n    var SwitchThemeDecorator = function (props) { return React__namespace.createElement(SwitchTheme, __assign({}, props)); };\n    var SwitchThemeButtonDecorator = function () { return (React__namespace.createElement(SwitchThemeDecorator, null, function (props) { return React__namespace.createElement(SwitchThemeButton, __assign({}, props)); })); };\n    var SwitchThemeMenuItemDecorator = function (props) { return (React__namespace.createElement(SwitchThemeDecorator, null, function (p) { return (React__namespace.createElement(SwitchThemeMenuItem, { onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    return {\n        SwitchTheme: SwitchThemeDecorator,\n        SwitchThemeButton: SwitchThemeButtonDecorator,\n        SwitchThemeMenuItem: SwitchThemeMenuItemDecorator,\n    };\n};\n\nexports.DarkIcon = DarkIcon;\nexports.LightIcon = LightIcon;\nexports.themePlugin = themePlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/theme/lib/cjs/theme.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/theme/lib/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/theme/lib/index.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/theme.js */ \"./node_modules/@react-pdf-viewer/theme/lib/cjs/theme.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvdGhlbWUvbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsSUFBSSxxSEFBMEM7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC1wZGYtdmlld2VyL3RoZW1lL2xpYi9pbmRleC5qcz80NjczIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBSZWFjdCBjb21wb25lbnQgdG8gdmlldyBhIFBERiBkb2N1bWVudFxuICpcbiAqIEBzZWUgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldlxuICogQGxpY2Vuc2UgaHR0cHM6Ly9yZWFjdC1wZGYtdmlld2VyLmRldi9saWNlbnNlXG4gKiBAY29weXJpZ2h0IDIwMTktMjAyMiBOZ3V5ZW4gSHV1IFBodW9jIDxtZUBwaHVvYy5uZz5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy90aGVtZS5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy90aGVtZS5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/theme/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/thumbnail/lib/cjs/thumbnail.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/thumbnail/lib/cjs/thumbnail.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar CoverInner = function (_a) {\n    var getPageIndex = _a.getPageIndex, renderSpinner = _a.renderSpinner, doc = _a.doc;\n    var _b = React__namespace.useState(''), src = _b[0], setSrc = _b[1];\n    var isMounted = core.useIsMounted();\n    var renderTask = React__namespace.useRef();\n    var handleVisibilityChanged = function (params) {\n        if (src || !params.isVisible) {\n            return;\n        }\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        var numPages = doc.numPages;\n        var targetPage = getPageIndex ? getPageIndex({ numPages: numPages }) : 0;\n        var normalizePage = Math.max(0, Math.min(targetPage, numPages - 1));\n        core.getPage(doc, normalizePage).then(function (page) {\n            var viewport = page.getViewport({ scale: 1 });\n            var w = viewport.width;\n            var h = viewport.height;\n            var canvas = document.createElement('canvas');\n            var canvasContext = canvas.getContext('2d', { alpha: false });\n            var containerWidth = containerEle.clientWidth;\n            var containerHeight = containerEle.clientHeight;\n            var scaled = Math.min(containerWidth / w, containerHeight / h);\n            var canvasWidth = scaled * w;\n            var canvasHeight = scaled * h;\n            canvas.height = canvasHeight;\n            canvas.width = canvasWidth;\n            canvas.style.opacity = '0';\n            var renderViewport = page.getViewport({\n                rotation: 0,\n                scale: scaled,\n            });\n            renderTask.current = page.render({ canvasContext: canvasContext, viewport: renderViewport });\n            renderTask.current.promise.then(function () {\n                isMounted.current && setSrc(canvas.toDataURL());\n                canvas.width = 0;\n                canvas.height = 0;\n            }, function () {\n            });\n        });\n    };\n    var containerRef = core.useIntersectionObserver({\n        onVisibilityChanged: handleVisibilityChanged,\n    });\n    React__namespace.useEffect(function () {\n        return function () {\n            var _a;\n            (_a = renderTask.current) === null || _a === void 0 ? void 0 : _a.cancel();\n        };\n    }, []);\n    return src ? (React__namespace.createElement(\"img\", { className: \"rpv-thumbnail__cover-image\", \"data-testid\": \"thumbnail__cover-image\", src: src })) : (React__namespace.createElement(\"div\", { className: \"rpv-thumbnail__cover-loader\", \"data-testid\": \"thumbnail__cover-loader\", ref: containerRef }, renderSpinner ? renderSpinner() : React__namespace.createElement(core.Spinner, null)));\n};\n\nvar Cover = function (_a) {\n    var getPageIndex = _a.getPageIndex, renderSpinner = _a.renderSpinner, store = _a.store;\n    var _b = React__namespace.useState(store.get('doc')), currentDoc = _b[0], setCurrentDoc = _b[1];\n    var handleDocumentChanged = function (doc) {\n        setCurrentDoc(doc);\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('doc', handleDocumentChanged);\n        return function () {\n            store.unsubscribe('doc', handleDocumentChanged);\n        };\n    }, []);\n    return (React__namespace.createElement(\"div\", { className: \"rpv-thumbnail__cover\" }, currentDoc ? (React__namespace.createElement(CoverInner, { doc: currentDoc, getPageIndex: getPageIndex, renderSpinner: renderSpinner })) : (React__namespace.createElement(\"div\", { className: \"rpv-thumbnail__cover-loader\" }, renderSpinner ? renderSpinner() : React__namespace.createElement(core.Spinner, null)))));\n};\n\nvar defaultSpinner = function () { return React__namespace.createElement(core.Spinner, null); };\nvar SpinnerContext = React__namespace.createContext({\n    renderSpinner: defaultSpinner,\n});\n\nvar FetchLabels = function (_a) {\n    var children = _a.children, doc = _a.doc;\n    var isMounted = core.useIsMounted();\n    var _b = React__namespace.useState({\n        loading: true,\n        labels: [],\n    }), status = _b[0], setStatus = _b[1];\n    React__namespace.useEffect(function () {\n        doc.getPageLabels().then(function (result) {\n            isMounted.current && setStatus({ loading: false, labels: result || [] });\n        });\n    }, [doc.loadingTask.docId]);\n    return status.loading ? React__namespace.createElement(React__namespace.Fragment, null) : children(status.labels);\n};\n\nvar scrollToBeVisible = function (ele, container) {\n    var top = ele.getBoundingClientRect().top - container.getBoundingClientRect().top;\n    var eleHeight = ele.clientHeight;\n    var containerHeight = container.clientHeight;\n    if (top < 0) {\n        container.scrollTop += top;\n        return;\n    }\n    if (top + eleHeight <= containerHeight) {\n        return;\n    }\n    container.scrollTop += top + eleHeight - containerHeight;\n};\n\nvar ThumbnailItem = function (_a) {\n    var page = _a.page, pageHeight = _a.pageHeight, pageIndex = _a.pageIndex, pageWidth = _a.pageWidth, rotation = _a.rotation, thumbnailHeight = _a.thumbnailHeight, thumbnailWidth = _a.thumbnailWidth, onRenderCompleted = _a.onRenderCompleted;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var renderTask = React__namespace.useRef();\n    var _b = React__namespace.useState(''), src = _b[0], setSrc = _b[1];\n    var thumbnailLabel = l10n && l10n.thumbnail\n        ? l10n.thumbnail.thumbnailLabel\n        : 'Thumbnail of page {{pageIndex}}';\n    React__namespace.useEffect(function () {\n        var task = renderTask.current;\n        if (task) {\n            task.cancel();\n        }\n        var canvas = document.createElement('canvas');\n        var canvasContext = canvas.getContext('2d', { alpha: false });\n        var w = thumbnailWidth;\n        var h = w / (pageWidth / pageHeight);\n        var scale = w / pageWidth;\n        canvas.height = h;\n        canvas.width = w;\n        canvas.style.height = \"\".concat(h, \"px\");\n        canvas.style.width = \"\".concat(w, \"px\");\n        var viewport = page.getViewport({ rotation: rotation, scale: scale });\n        renderTask.current = page.render({ canvasContext: canvasContext, viewport: viewport });\n        renderTask.current.promise.then(function () {\n            setSrc(canvas.toDataURL());\n            onRenderCompleted(pageIndex);\n        }, function () {\n            onRenderCompleted(pageIndex);\n        });\n        return function () {\n            var _a;\n            (_a = renderTask.current) === null || _a === void 0 ? void 0 : _a.cancel();\n        };\n    }, [rotation]);\n    return !src ? (React__namespace.useContext(SpinnerContext).renderSpinner()) : (React__namespace.createElement(\"img\", { \"aria-label\": thumbnailLabel.replace('{{pageIndex}}', \"\".concat(pageIndex + 1)), src: src, height: \"\".concat(thumbnailHeight, \"px\"), width: \"\".concat(thumbnailWidth, \"px\") }));\n};\n\nvar ThumbnailContainer = function (_a) {\n    var doc = _a.doc, pageHeight = _a.pageHeight, pageIndex = _a.pageIndex, pageRotation = _a.pageRotation, pageWidth = _a.pageWidth, rotation = _a.rotation, shouldRender = _a.shouldRender, thumbnailWidth = _a.thumbnailWidth, onRenderCompleted = _a.onRenderCompleted, onVisibilityChanged = _a.onVisibilityChanged;\n    var isMounted = core.useIsMounted();\n    var _b = React__namespace.useState({\n        height: pageHeight,\n        page: null,\n        viewportRotation: 0,\n        width: pageWidth,\n    }), pageSize = _b[0], setPageSize = _b[1];\n    var page = pageSize.page, height = pageSize.height, width = pageSize.width;\n    var scale = width / height;\n    var isVertical = Math.abs(rotation + pageRotation) % 180 === 0;\n    var w = isVertical ? thumbnailWidth : thumbnailWidth / scale;\n    var h = isVertical ? thumbnailWidth / scale : thumbnailWidth;\n    React__namespace.useEffect(function () {\n        if (shouldRender) {\n            core.getPage(doc, pageIndex).then(function (pdfPage) {\n                var viewport = pdfPage.getViewport({ scale: 1 });\n                isMounted.current &&\n                    setPageSize({\n                        height: viewport.height,\n                        page: pdfPage,\n                        viewportRotation: viewport.rotation,\n                        width: viewport.width,\n                    });\n            });\n        }\n    }, [shouldRender]);\n    var rotationNumber = (pageSize.viewportRotation + rotation + pageRotation) % 360;\n    var containerRef = core.useIntersectionObserver({\n        onVisibilityChanged: function (visibility) {\n            onVisibilityChanged(pageIndex, visibility);\n        },\n    });\n    return (React__namespace.createElement(\"div\", { className: \"rpv-thumbnail__container\", \"data-testid\": \"thumbnail__container-\".concat(pageIndex), ref: containerRef, style: {\n            height: \"\".concat(h, \"px\"),\n            width: \"\".concat(w, \"px\"),\n        } }, !page ? (React__namespace.useContext(SpinnerContext).renderSpinner()) : (React__namespace.createElement(ThumbnailItem, { page: page, pageHeight: isVertical ? height : width, pageIndex: pageIndex, pageWidth: isVertical ? width : height, rotation: rotationNumber, thumbnailHeight: h, thumbnailWidth: w, onRenderCompleted: onRenderCompleted }))));\n};\n\nvar ThumbnailList = function (_a) {\n    var currentPage = _a.currentPage, doc = _a.doc, labels = _a.labels, pagesRotation = _a.pagesRotation, pageHeight = _a.pageHeight, pageWidth = _a.pageWidth, renderCurrentPageLabel = _a.renderCurrentPageLabel, renderThumbnailItem = _a.renderThumbnailItem, rotatedPage = _a.rotatedPage, rotation = _a.rotation, thumbnailWidth = _a.thumbnailWidth, onJumpToPage = _a.onJumpToPage, onRotatePage = _a.onRotatePage;\n    var numPages = doc.numPages;\n    var docId = doc.loadingTask.docId;\n    var containerRef = React__namespace.useRef(null);\n    var thumbnailsRef = React__namespace.useRef([]);\n    var _b = React__namespace.useState(currentPage), currentFocused = _b[0], setCurrentFocused = _b[1];\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var isRtl = direction === core.TextDirection.RightToLeft;\n    var _c = React__namespace.useState(-1), renderPageIndex = _c[0], setRenderPageIndex = _c[1];\n    var isMounted = core.useIsMounted();\n    var hasRenderingThumbnailRef = React__namespace.useRef(false);\n    var renderQueue = core.useRenderQueue({ doc: doc });\n    var pageIndexes = React__namespace.useMemo(function () {\n        return Array(numPages)\n            .fill(0)\n            .map(function (_, pageIndex) { return pageIndex; });\n    }, [docId]);\n    var handleKeyDown = function (e) {\n        switch (e.key) {\n            case 'ArrowDown':\n                activateNextItem();\n                break;\n            case 'ArrowUp':\n                activatePreviousItem();\n                break;\n            case 'Enter':\n                jumpToFocusedPage();\n                break;\n        }\n    };\n    var activateNextItem = function () {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        var items = thumbnailsRef.current;\n        var nextItem = currentFocused + 1;\n        if (nextItem < items.length) {\n            if (currentFocused >= 0) {\n                items[currentFocused].setAttribute('tabindex', '-1');\n            }\n            setCurrentFocused(nextItem);\n        }\n    };\n    var activatePreviousItem = function () {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        var items = thumbnailsRef.current;\n        var prevItem = currentFocused - 1;\n        if (prevItem >= 0) {\n            if (currentFocused >= 0) {\n                items[currentFocused].setAttribute('tabindex', '-1');\n            }\n            setCurrentFocused(prevItem);\n        }\n    };\n    var jumpToFocusedPage = function () {\n        if (currentFocused >= 0 && currentFocused < numPages) {\n            onJumpToPage(currentFocused);\n        }\n    };\n    core.useIsomorphicLayoutEffect(function () {\n        var container = containerRef.current;\n        if (!container) {\n            return;\n        }\n        thumbnailsRef.current = Array.from(container.querySelectorAll('.rpv-thumbnail__item'));\n    }, []);\n    React__namespace.useEffect(function () {\n        var thumbnails = thumbnailsRef.current;\n        if (thumbnails.length === 0 || currentFocused < 0 || currentFocused > thumbnails.length) {\n            return;\n        }\n        var thumbnailEle = thumbnails[currentFocused];\n        thumbnailEle.setAttribute('tabindex', '0');\n        thumbnailEle.focus();\n    }, [currentFocused]);\n    core.useIsomorphicLayoutEffect(function () {\n        var container = containerRef.current;\n        if (container) {\n            var thumbnailNodes = container.children;\n            if (currentPage < thumbnailNodes.length) {\n                scrollToBeVisible(thumbnailNodes.item(currentPage), container);\n            }\n        }\n    }, [currentPage]);\n    var handleRenderCompleted = React__namespace.useCallback(function (pageIndex) {\n        if (isMounted.current) {\n            renderQueue.markRendered(pageIndex);\n            hasRenderingThumbnailRef.current = false;\n            renderNextThumbnail();\n        }\n    }, [docId]);\n    var handleVisibilityChanged = React__namespace.useCallback(function (pageIndex, visibility) {\n        visibility.isVisible\n            ? renderQueue.setVisibility(pageIndex, visibility.ratio)\n            :\n                renderQueue.setOutOfRange(pageIndex);\n        renderNextThumbnail();\n    }, [docId]);\n    var renderNextThumbnail = React__namespace.useCallback(function () {\n        if (hasRenderingThumbnailRef.current) {\n            return;\n        }\n        var nextPage = renderQueue.getHighestPriorityPage();\n        if (nextPage > -1) {\n            renderQueue.markRendering(nextPage);\n            hasRenderingThumbnailRef.current = true;\n            setRenderPageIndex(nextPage);\n        }\n    }, [docId]);\n    React__namespace.useEffect(function () {\n        if (rotatedPage >= 0) {\n            renderQueue.markRendering(rotatedPage);\n            hasRenderingThumbnailRef.current = true;\n            setRenderPageIndex(rotatedPage);\n        }\n    }, [docId, rotatedPage]);\n    return (React__namespace.createElement(\"div\", { ref: containerRef, \"data-testid\": \"thumbnail__list\", className: core.classNames({\n            'rpv-thumbnail__list': true,\n            'rpv-thumbnail__list--rtl': isRtl,\n        }), onKeyDown: handleKeyDown }, pageIndexes.map(function (pageIndex) {\n        var key = \"\".concat(doc.loadingTask.docId, \"___\").concat(pageIndex);\n        var pageLabel = labels.length === numPages ? labels[pageIndex] : \"\".concat(pageIndex + 1);\n        var label = renderCurrentPageLabel\n            ? renderCurrentPageLabel({ currentPage: currentPage, pageIndex: pageIndex, numPages: numPages, pageLabel: pageLabel })\n            : pageLabel;\n        var pageRotation = pagesRotation.has(pageIndex) ? pagesRotation.get(pageIndex) : 0;\n        var thumbnail = (React__namespace.createElement(ThumbnailContainer, { doc: doc, pageHeight: pageHeight, pageIndex: pageIndex, pageRotation: pageRotation, pageWidth: pageWidth, rotation: rotation, shouldRender: renderPageIndex === pageIndex, thumbnailWidth: thumbnailWidth, onRenderCompleted: handleRenderCompleted, onVisibilityChanged: handleVisibilityChanged }));\n        return renderThumbnailItem ? (renderThumbnailItem({\n            currentPage: currentPage,\n            key: key,\n            numPages: numPages,\n            pageIndex: pageIndex,\n            renderPageLabel: React__namespace.createElement(React__namespace.Fragment, null, label),\n            renderPageThumbnail: thumbnail,\n            onJumpToPage: function () { return onJumpToPage(pageIndex); },\n            onRotatePage: function (direction) { return onRotatePage(pageIndex, direction); },\n        })) : (React__namespace.createElement(\"div\", { key: key },\n            React__namespace.createElement(\"div\", { className: core.classNames({\n                    'rpv-thumbnail__item': true,\n                    'rpv-thumbnail__item--selected': currentPage === pageIndex,\n                }), role: \"button\", tabIndex: currentPage === pageIndex ? 0 : -1, onClick: function () { return onJumpToPage(pageIndex); } }, thumbnail),\n            React__namespace.createElement(\"div\", { \"data-testid\": \"thumbnail__label-\".concat(pageIndex), className: \"rpv-thumbnail__label\" }, label)));\n    })));\n};\n\nvar ThumbnailListWithStore = function (_a) {\n    var renderCurrentPageLabel = _a.renderCurrentPageLabel, renderThumbnailItem = _a.renderThumbnailItem, store = _a.store, thumbnailWidth = _a.thumbnailWidth;\n    var _b = React__namespace.useState(store.get('doc')), currentDoc = _b[0], setCurrentDoc = _b[1];\n    var _c = React__namespace.useState(store.get('currentPage') || 0), currentPage = _c[0], setCurrentPage = _c[1];\n    var _d = React__namespace.useState(store.get('pageHeight') || 0), pageHeight = _d[0], setPageHeight = _d[1];\n    var _e = React__namespace.useState(store.get('pageWidth') || 0), pageWidth = _e[0], setPageWidth = _e[1];\n    var _f = React__namespace.useState(store.get('rotation') || 0), rotation = _f[0], setRotation = _f[1];\n    var _g = React__namespace.useState(store.get('pagesRotation') || new Map()), pagesRotation = _g[0], setPagesRotation = _g[1];\n    var _h = React__namespace.useState(store.get('rotatedPage') || -1), rotatedPage = _h[0], setRotatedPage = _h[1];\n    var handleCurrentPageChanged = function (currentPageIndex) {\n        setCurrentPage(currentPageIndex);\n    };\n    var handleDocumentChanged = function (doc) {\n        setCurrentDoc(doc);\n    };\n    var handlePageHeightChanged = function (height) {\n        setPageHeight(height);\n    };\n    var handlePageWidthChanged = function (width) {\n        setPageWidth(width);\n    };\n    var handleRotationChanged = function (currentRotation) {\n        setRotation(currentRotation);\n    };\n    var handlePagesRotationChanged = function (rotations) {\n        setPagesRotation(rotations);\n    };\n    var handleRotatedPage = function (rotatedPage) {\n        setRotatedPage(rotatedPage);\n    };\n    var jump = function (pageIndex) {\n        var jumpToPage = store.get('jumpToPage');\n        if (jumpToPage) {\n            jumpToPage(pageIndex);\n        }\n    };\n    var rotatePage = function (pageIndex, direction) {\n        store.get('rotatePage')(pageIndex, direction);\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('doc', handleDocumentChanged);\n        store.subscribe('pageHeight', handlePageHeightChanged);\n        store.subscribe('pageWidth', handlePageWidthChanged);\n        store.subscribe('rotatedPage', handleRotatedPage);\n        store.subscribe('rotation', handleRotationChanged);\n        store.subscribe('pagesRotation', handlePagesRotationChanged);\n        return function () {\n            store.unsubscribe('doc', handleDocumentChanged);\n            store.unsubscribe('pageHeight', handlePageHeightChanged);\n            store.unsubscribe('pageWidth', handlePageWidthChanged);\n            store.unsubscribe('rotatedPage', handleRotatedPage);\n            store.unsubscribe('rotation', handleRotationChanged);\n            store.unsubscribe('pagesRotation', handlePagesRotationChanged);\n        };\n    }, []);\n    core.useIsomorphicLayoutEffect(function () {\n        store.subscribe('currentPage', handleCurrentPageChanged);\n        return function () {\n            store.unsubscribe('currentPage', handleCurrentPageChanged);\n        };\n    }, []);\n    return currentDoc ? (React__namespace.createElement(core.LazyRender, { testId: \"thumbnail__list-container\", attrs: {\n            className: 'rpv-thumbnail__list-container',\n        } },\n        React__namespace.createElement(FetchLabels, { doc: currentDoc }, function (labels) { return (React__namespace.createElement(ThumbnailList, { currentPage: currentPage, doc: currentDoc, labels: labels, pagesRotation: pagesRotation, pageHeight: pageHeight, pageWidth: pageWidth, renderCurrentPageLabel: renderCurrentPageLabel, renderThumbnailItem: renderThumbnailItem, rotatedPage: rotatedPage, rotation: rotation, thumbnailWidth: thumbnailWidth, onJumpToPage: jump, onRotatePage: rotatePage })); }))) : (React__namespace.createElement(\"div\", { \"data-testid\": \"thumbnail-list__loader\", className: \"rpv-thumbnail__loader\" }, React__namespace.useContext(SpinnerContext).renderSpinner()));\n};\n\nvar thumbnailPlugin = function (pluginProps) {\n    var store = React__namespace.useMemo(function () {\n        return core.createStore({\n            rotatePage: function () {\n            },\n        });\n    }, []);\n    var _a = React__namespace.useState(''), docId = _a[0], setDocId = _a[1];\n    var CoverDecorator = function (props) { return (React__namespace.createElement(Cover, __assign({}, props, { renderSpinner: pluginProps === null || pluginProps === void 0 ? void 0 : pluginProps.renderSpinner, store: store }))); };\n    var ThumbnailsDecorator = React__namespace.useCallback(function (props) { return (React__namespace.createElement(SpinnerContext.Provider, { value: { renderSpinner: (pluginProps === null || pluginProps === void 0 ? void 0 : pluginProps.renderSpinner) || defaultSpinner } },\n        React__namespace.createElement(ThumbnailListWithStore, { renderCurrentPageLabel: pluginProps === null || pluginProps === void 0 ? void 0 : pluginProps.renderCurrentPageLabel, renderThumbnailItem: props === null || props === void 0 ? void 0 : props.renderThumbnailItem, store: store, thumbnailWidth: (pluginProps === null || pluginProps === void 0 ? void 0 : pluginProps.thumbnailWidth) || 100 }))); }, [docId]);\n    return {\n        install: function (pluginFunctions) {\n            store.update('jumpToPage', pluginFunctions.jumpToPage);\n            store.update('rotatePage', pluginFunctions.rotatePage);\n        },\n        onDocumentLoad: function (props) {\n            setDocId(props.doc.loadingTask.docId);\n            store.update('doc', props.doc);\n        },\n        onViewerStateChange: function (viewerState) {\n            store.update('currentPage', viewerState.pageIndex);\n            store.update('pagesRotation', viewerState.pagesRotation);\n            store.update('pageHeight', viewerState.pageHeight);\n            store.update('pageWidth', viewerState.pageWidth);\n            store.update('rotation', viewerState.rotation);\n            store.update('rotatedPage', viewerState.rotatedPage);\n            return viewerState;\n        },\n        Cover: CoverDecorator,\n        Thumbnails: ThumbnailsDecorator,\n    };\n};\n\nexports.thumbnailPlugin = thumbnailPlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/thumbnail/lib/cjs/thumbnail.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/thumbnail/lib/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/thumbnail/lib/index.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/thumbnail.js */ \"./node_modules/@react-pdf-viewer/thumbnail/lib/cjs/thumbnail.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvdGh1bWJuYWlsL2xpYi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLElBQUksaUlBQThDO0FBQ2xEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcmVhY3QtcGRmLXZpZXdlci90aHVtYm5haWwvbGliL2luZGV4LmpzP2M1MmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIFJlYWN0IGNvbXBvbmVudCB0byB2aWV3IGEgUERGIGRvY3VtZW50XG4gKlxuICogQHNlZSBodHRwczovL3JlYWN0LXBkZi12aWV3ZXIuZGV2XG4gKiBAbGljZW5zZSBodHRwczovL3JlYWN0LXBkZi12aWV3ZXIuZGV2L2xpY2Vuc2VcbiAqIEBjb3B5cmlnaHQgMjAxOS0yMDIyIE5ndXllbiBIdXUgUGh1b2MgPG1lQHBodW9jLm5nPlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3RodW1ibmFpbC5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy90aHVtYm5haWwuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/thumbnail/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/toolbar/lib/cjs/toolbar.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/toolbar/lib/cjs/toolbar.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar selectionMode = __webpack_require__(/*! @react-pdf-viewer/selection-mode */ \"./node_modules/@react-pdf-viewer/selection-mode/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar fullScreen = __webpack_require__(/*! @react-pdf-viewer/full-screen */ \"./node_modules/@react-pdf-viewer/full-screen/lib/index.js\");\nvar getFile = __webpack_require__(/*! @react-pdf-viewer/get-file */ \"./node_modules/@react-pdf-viewer/get-file/lib/index.js\");\nvar open = __webpack_require__(/*! @react-pdf-viewer/open */ \"./node_modules/@react-pdf-viewer/open/lib/index.js\");\nvar pageNavigation = __webpack_require__(/*! @react-pdf-viewer/page-navigation */ \"./node_modules/@react-pdf-viewer/page-navigation/lib/index.js\");\nvar print = __webpack_require__(/*! @react-pdf-viewer/print */ \"./node_modules/@react-pdf-viewer/print/lib/index.js\");\nvar properties = __webpack_require__(/*! @react-pdf-viewer/properties */ \"./node_modules/@react-pdf-viewer/properties/lib/index.js\");\nvar rotate = __webpack_require__(/*! @react-pdf-viewer/rotate */ \"./node_modules/@react-pdf-viewer/rotate/lib/index.js\");\nvar scrollMode = __webpack_require__(/*! @react-pdf-viewer/scroll-mode */ \"./node_modules/@react-pdf-viewer/scroll-mode/lib/index.js\");\nvar search = __webpack_require__(/*! @react-pdf-viewer/search */ \"./node_modules/@react-pdf-viewer/search/lib/index.js\");\nvar theme = __webpack_require__(/*! @react-pdf-viewer/theme */ \"./node_modules/@react-pdf-viewer/theme/lib/index.js\");\nvar zoom = __webpack_require__(/*! @react-pdf-viewer/zoom */ \"./node_modules/@react-pdf-viewer/zoom/lib/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar MoreIcon = function () { return (React__namespace.createElement(core.Icon, { size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M12,0.5c1.381,0,2.5,1.119,2.5,2.5S13.381,5.5,12,5.5S9.5,4.381,9.5,3S10.619,0.5,12,0.5z\\n            M12,9.5\\n            c1.381,0,2.5,1.119,2.5,2.5s-1.119,2.5-2.5,2.5S9.5,13.381,9.5,12S10.619,9.5,12,9.5z\\n            M12,18.5c1.381,0,2.5,1.119,2.5,2.5\\n            s-1.119,2.5-2.5,2.5S9.5,22.381,9.5,21S10.619,18.5,12,18.5z\" }))); };\n\nvar PORTAL_OFFSET = { left: 0, top: 8 };\nvar MoreActionsPopover = function (_a) {\n    var toolbarSlot = _a.toolbarSlot;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var portalPosition = direction === core.TextDirection.RightToLeft ? core.Position.BottomLeft : core.Position.BottomRight;\n    var DownloadMenuItem = toolbarSlot.DownloadMenuItem, EnterFullScreenMenuItem = toolbarSlot.EnterFullScreenMenuItem, GoToFirstPageMenuItem = toolbarSlot.GoToFirstPageMenuItem, GoToLastPageMenuItem = toolbarSlot.GoToLastPageMenuItem, GoToNextPageMenuItem = toolbarSlot.GoToNextPageMenuItem, GoToPreviousPageMenuItem = toolbarSlot.GoToPreviousPageMenuItem, OpenMenuItem = toolbarSlot.OpenMenuItem, PrintMenuItem = toolbarSlot.PrintMenuItem, RotateBackwardMenuItem = toolbarSlot.RotateBackwardMenuItem, RotateForwardMenuItem = toolbarSlot.RotateForwardMenuItem, ShowPropertiesMenuItem = toolbarSlot.ShowPropertiesMenuItem, SwitchScrollModeMenuItem = toolbarSlot.SwitchScrollModeMenuItem, SwitchSelectionModeMenuItem = toolbarSlot.SwitchSelectionModeMenuItem, SwitchThemeMenuItem = toolbarSlot.SwitchThemeMenuItem;\n    var renderTarget = function (toggle, opened) {\n        var label = l10n && l10n.toolbar ? l10n.toolbar.moreActions : 'More actions';\n        return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"toolbar-more-actions\", position: portalPosition, target: React__namespace.createElement(core.MinimalButton, { ariaLabel: label, isSelected: opened, testId: \"toolbar__more-actions-popover-target\", onClick: toggle },\n                React__namespace.createElement(MoreIcon, null)), content: function () { return label; }, offset: PORTAL_OFFSET }));\n    };\n    var renderContent = function (toggle) {\n        return (React__namespace.createElement(core.Menu, null,\n            React__namespace.createElement(\"div\", { className: \"rpv-core__display--block rpv-core__display--hidden-medium\" },\n                React__namespace.createElement(SwitchThemeMenuItem, { onClick: toggle })),\n            React__namespace.createElement(\"div\", { className: \"rpv-core__display--block rpv-core__display--hidden-medium\" },\n                React__namespace.createElement(EnterFullScreenMenuItem, { onClick: toggle })),\n            React__namespace.createElement(\"div\", { className: \"rpv-core__display--block rpv-core__display--hidden-medium\" },\n                React__namespace.createElement(OpenMenuItem, null)),\n            React__namespace.createElement(\"div\", { className: \"rpv-core__display--block rpv-core__display--hidden-medium\" },\n                React__namespace.createElement(PrintMenuItem, { onClick: toggle })),\n            React__namespace.createElement(\"div\", { className: \"rpv-core__display--block rpv-core__display--hidden-medium\" },\n                React__namespace.createElement(DownloadMenuItem, { onClick: toggle })),\n            React__namespace.createElement(\"div\", { className: \"rpv-core__display--block rpv-core__display--hidden-medium\" },\n                React__namespace.createElement(core.MenuDivider, null)),\n            React__namespace.createElement(GoToFirstPageMenuItem, { onClick: toggle }),\n            React__namespace.createElement(\"div\", { className: \"rpv-core__display--block rpv-core__display--hidden-medium\" },\n                React__namespace.createElement(GoToPreviousPageMenuItem, { onClick: toggle })),\n            React__namespace.createElement(\"div\", { className: \"rpv-core__display--block rpv-core__display--hidden-medium\" },\n                React__namespace.createElement(GoToNextPageMenuItem, { onClick: toggle })),\n            React__namespace.createElement(GoToLastPageMenuItem, { onClick: toggle }),\n            React__namespace.createElement(core.MenuDivider, null),\n            React__namespace.createElement(RotateForwardMenuItem, { onClick: toggle }),\n            React__namespace.createElement(RotateBackwardMenuItem, { onClick: toggle }),\n            React__namespace.createElement(core.MenuDivider, null),\n            React__namespace.createElement(SwitchSelectionModeMenuItem, { mode: selectionMode.SelectionMode.Text, onClick: toggle }),\n            React__namespace.createElement(SwitchSelectionModeMenuItem, { mode: selectionMode.SelectionMode.Hand, onClick: toggle }),\n            React__namespace.createElement(core.MenuDivider, null),\n            React__namespace.createElement(SwitchScrollModeMenuItem, { mode: core.ScrollMode.Vertical, onClick: toggle }),\n            React__namespace.createElement(SwitchScrollModeMenuItem, { mode: core.ScrollMode.Horizontal, onClick: toggle }),\n            React__namespace.createElement(SwitchScrollModeMenuItem, { mode: core.ScrollMode.Wrapped, onClick: toggle }),\n            React__namespace.createElement(core.MenuDivider, null),\n            React__namespace.createElement(ShowPropertiesMenuItem, { onClick: toggle })));\n    };\n    return (React__namespace.createElement(core.Popover, { ariaControlsSuffix: \"toolbar-more-actions\", ariaHasPopup: \"menu\", position: portalPosition, target: renderTarget, content: renderContent, offset: PORTAL_OFFSET, closeOnClickOutside: true, closeOnEscape: true }));\n};\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar renderDefaultToolbar = function (transformToolbarSlot) {\n    return function (defaultToolbarSlot) {\n        var toolbarSlot = React__namespace.useMemo(function () { return transformToolbarSlot(defaultToolbarSlot); }, []);\n        var direction = React__namespace.useContext(core.ThemeContext).direction;\n        var isRtl = direction === core.TextDirection.RightToLeft;\n        var CurrentPageInput = toolbarSlot.CurrentPageInput, Download = toolbarSlot.Download, EnterFullScreen = toolbarSlot.EnterFullScreen, GoToNextPage = toolbarSlot.GoToNextPage, GoToPreviousPage = toolbarSlot.GoToPreviousPage, NumberOfPages = toolbarSlot.NumberOfPages, Open = toolbarSlot.Open, Print = toolbarSlot.Print, ShowSearchPopover = toolbarSlot.ShowSearchPopover, SwitchTheme = toolbarSlot.SwitchTheme, Zoom = toolbarSlot.Zoom, ZoomIn = toolbarSlot.ZoomIn, ZoomOut = toolbarSlot.ZoomOut;\n        return (React__namespace.createElement(\"div\", { \"data-testid\": \"toolbar\", className: core.classNames({\n                'rpv-toolbar': true,\n                'rpv-toolbar--rtl': isRtl,\n            }), role: \"toolbar\", \"aria-orientation\": \"horizontal\" },\n            React__namespace.createElement(\"div\", { className: \"rpv-toolbar__left\" },\n                React__namespace.createElement(\"div\", { className: \"rpv-toolbar__item\" },\n                    React__namespace.createElement(ShowSearchPopover, null)),\n                React__namespace.createElement(\"div\", { className: \"rpv-core__display--hidden rpv-core__display--block-small\" },\n                    React__namespace.createElement(\"div\", { className: \"rpv-toolbar__item\" },\n                        React__namespace.createElement(GoToPreviousPage, null))),\n                React__namespace.createElement(\"div\", { className: \"rpv-toolbar__item\" },\n                    React__namespace.createElement(CurrentPageInput, null),\n                    React__namespace.createElement(\"span\", { className: \"rpv-toolbar__label\" },\n                        React__namespace.createElement(NumberOfPages, null))),\n                React__namespace.createElement(\"div\", { className: \"rpv-core__display--hidden rpv-core__display--block-small\" },\n                    React__namespace.createElement(\"div\", { className: \"rpv-toolbar__item\" },\n                        React__namespace.createElement(GoToNextPage, null)))),\n            React__namespace.createElement(\"div\", { className: \"rpv-toolbar__center\" },\n                React__namespace.createElement(\"div\", { className: \"rpv-toolbar__item\" },\n                    React__namespace.createElement(ZoomOut, null)),\n                React__namespace.createElement(\"div\", { className: \"rpv-core__display--hidden rpv-core__display--block-small\" },\n                    React__namespace.createElement(\"div\", { className: \"rpv-toolbar__item\" },\n                        React__namespace.createElement(Zoom, null))),\n                React__namespace.createElement(\"div\", { className: \"rpv-toolbar__item\" },\n                    React__namespace.createElement(ZoomIn, null))),\n            React__namespace.createElement(\"div\", { className: \"rpv-toolbar__right\" },\n                React__namespace.createElement(\"div\", { className: \"rpv-core__display--hidden rpv-core__display--block-medium\" },\n                    React__namespace.createElement(\"div\", { className: \"rpv-toolbar__item\" },\n                        React__namespace.createElement(SwitchTheme, null))),\n                React__namespace.createElement(\"div\", { className: \"rpv-core__display--hidden rpv-core__display--block-medium\" },\n                    React__namespace.createElement(\"div\", { className: \"rpv-toolbar__item\" },\n                        React__namespace.createElement(EnterFullScreen, null))),\n                React__namespace.createElement(\"div\", { className: \"rpv-core__display--hidden rpv-core__display--block-medium\" },\n                    React__namespace.createElement(\"div\", { className: \"rpv-toolbar__item\" },\n                        React__namespace.createElement(Open, null))),\n                React__namespace.createElement(\"div\", { className: \"rpv-core__display--hidden rpv-core__display--block-medium\" },\n                    React__namespace.createElement(\"div\", { className: \"rpv-toolbar__item\" },\n                        React__namespace.createElement(Download, null))),\n                React__namespace.createElement(\"div\", { className: \"rpv-core__display--hidden rpv-core__display--block-medium\" },\n                    React__namespace.createElement(\"div\", { className: \"rpv-toolbar__item\" },\n                        React__namespace.createElement(Print, null))),\n                React__namespace.createElement(\"div\", { className: \"rpv-toolbar__item\" },\n                    React__namespace.createElement(MoreActionsPopover, { toolbarSlot: toolbarSlot })))));\n    };\n};\n\nvar defaultTransform = function (slot) {\n    var NumberOfPages = slot.NumberOfPages;\n    return Object.assign({}, slot, {\n        NumberOfPages: function () { return (React__namespace.createElement(React__namespace.Fragment, null,\n            \"/ \",\n            React__namespace.createElement(NumberOfPages, null))); },\n    });\n};\nvar DefaultToobar = function (toolbarSlot) {\n    return renderDefaultToolbar(defaultTransform)(toolbarSlot);\n};\n\nvar Toolbar = function (_a) {\n    var children = _a.children, slot = _a.slot;\n    var render = children || DefaultToobar;\n    return render(slot);\n};\n\nvar toolbarPlugin = function (props) {\n    var fullScreenPluginInstance = fullScreen.fullScreenPlugin(props ? props.fullScreenPlugin : {});\n    var getFilePluginInstance = getFile.getFilePlugin(props ? props.getFilePlugin : {});\n    var openPluginInstance = open.openPlugin(props ? props.openPlugin : {});\n    var pageNavigationPluginInstance = pageNavigation.pageNavigationPlugin();\n    var printPluginInstance = print.printPlugin(props ? props.printPlugin : {});\n    var propertiesPluginInstance = properties.propertiesPlugin();\n    var rotatePluginInstance = rotate.rotatePlugin();\n    var scrollModePluginInstance = scrollMode.scrollModePlugin();\n    var searchPluginInstance = search.searchPlugin(props ? props.searchPlugin : {});\n    var selectionModePluginInstance = selectionMode.selectionModePlugin(props ? props.selectionModePlugin : {});\n    var themePluginInstance = theme.themePlugin();\n    var zoomPluginInstance = zoom.zoomPlugin(props ? props.zoomPlugin : {});\n    var plugins = [\n        fullScreenPluginInstance,\n        getFilePluginInstance,\n        openPluginInstance,\n        pageNavigationPluginInstance,\n        printPluginInstance,\n        propertiesPluginInstance,\n        rotatePluginInstance,\n        scrollModePluginInstance,\n        searchPluginInstance,\n        selectionModePluginInstance,\n        themePluginInstance,\n        zoomPluginInstance,\n    ];\n    var ToolbarDecorator = React__namespace.useCallback(function (props) {\n        var EnterFullScreen = fullScreenPluginInstance.EnterFullScreen, EnterFullScreenMenuItem = fullScreenPluginInstance.EnterFullScreenMenuItem;\n        var Download = getFilePluginInstance.Download, DownloadMenuItem = getFilePluginInstance.DownloadMenuItem;\n        var Open = openPluginInstance.Open, OpenMenuItem = openPluginInstance.OpenMenuItem;\n        var CurrentPageInput = pageNavigationPluginInstance.CurrentPageInput, CurrentPageLabel = pageNavigationPluginInstance.CurrentPageLabel, GoToFirstPage = pageNavigationPluginInstance.GoToFirstPage, GoToFirstPageMenuItem = pageNavigationPluginInstance.GoToFirstPageMenuItem, GoToLastPage = pageNavigationPluginInstance.GoToLastPage, GoToLastPageMenuItem = pageNavigationPluginInstance.GoToLastPageMenuItem, GoToNextPage = pageNavigationPluginInstance.GoToNextPage, GoToNextPageMenuItem = pageNavigationPluginInstance.GoToNextPageMenuItem, GoToPreviousPage = pageNavigationPluginInstance.GoToPreviousPage, GoToPreviousPageMenuItem = pageNavigationPluginInstance.GoToPreviousPageMenuItem, NumberOfPages = pageNavigationPluginInstance.NumberOfPages;\n        var Print = printPluginInstance.Print, PrintMenuItem = printPluginInstance.PrintMenuItem;\n        var ShowProperties = propertiesPluginInstance.ShowProperties, ShowPropertiesMenuItem = propertiesPluginInstance.ShowPropertiesMenuItem;\n        var Rotate = rotatePluginInstance.Rotate, RotateBackwardMenuItem = rotatePluginInstance.RotateBackwardMenuItem, RotateForwardMenuItem = rotatePluginInstance.RotateForwardMenuItem;\n        var SwitchScrollMode = scrollModePluginInstance.SwitchScrollMode, SwitchScrollModeMenuItem = scrollModePluginInstance.SwitchScrollModeMenuItem;\n        var Search = searchPluginInstance.Search, ShowSearchPopover = searchPluginInstance.ShowSearchPopover;\n        var SwitchSelectionMode = selectionModePluginInstance.SwitchSelectionMode, SwitchSelectionModeMenuItem = selectionModePluginInstance.SwitchSelectionModeMenuItem;\n        var SwitchTheme = themePluginInstance.SwitchTheme, SwitchThemeMenuItem = themePluginInstance.SwitchThemeMenuItem;\n        var CurrentScale = zoomPluginInstance.CurrentScale, Zoom = zoomPluginInstance.Zoom, ZoomIn = zoomPluginInstance.ZoomIn, ZoomInMenuItem = zoomPluginInstance.ZoomInMenuItem, ZoomOut = zoomPluginInstance.ZoomOut, ZoomOutMenuItem = zoomPluginInstance.ZoomOutMenuItem;\n        return (React__namespace.createElement(Toolbar, __assign({}, props, { slot: {\n                CurrentPageInput: CurrentPageInput,\n                CurrentPageLabel: CurrentPageLabel,\n                CurrentScale: CurrentScale,\n                Download: Download,\n                DownloadMenuItem: DownloadMenuItem,\n                EnterFullScreen: EnterFullScreen,\n                EnterFullScreenMenuItem: EnterFullScreenMenuItem,\n                GoToFirstPage: GoToFirstPage,\n                GoToFirstPageMenuItem: GoToFirstPageMenuItem,\n                GoToLastPage: GoToLastPage,\n                GoToLastPageMenuItem: GoToLastPageMenuItem,\n                GoToNextPage: GoToNextPage,\n                GoToNextPageMenuItem: GoToNextPageMenuItem,\n                GoToPreviousPage: GoToPreviousPage,\n                GoToPreviousPageMenuItem: GoToPreviousPageMenuItem,\n                NumberOfPages: NumberOfPages,\n                Open: Open,\n                OpenMenuItem: OpenMenuItem,\n                Print: Print,\n                PrintMenuItem: PrintMenuItem,\n                Rotate: Rotate,\n                RotateBackwardMenuItem: RotateBackwardMenuItem,\n                RotateForwardMenuItem: RotateForwardMenuItem,\n                Search: Search,\n                ShowProperties: ShowProperties,\n                ShowPropertiesMenuItem: ShowPropertiesMenuItem,\n                ShowSearchPopover: ShowSearchPopover,\n                SwitchScrollMode: SwitchScrollMode,\n                SwitchScrollModeMenuItem: SwitchScrollModeMenuItem,\n                SwitchSelectionMode: SwitchSelectionMode,\n                SwitchSelectionModeMenuItem: SwitchSelectionModeMenuItem,\n                SwitchTheme: SwitchTheme,\n                SwitchThemeMenuItem: SwitchThemeMenuItem,\n                Zoom: Zoom,\n                ZoomIn: ZoomIn,\n                ZoomInMenuItem: ZoomInMenuItem,\n                ZoomOut: ZoomOut,\n                ZoomOutMenuItem: ZoomOutMenuItem,\n            } })));\n    }, []);\n    return {\n        fullScreenPluginInstance: fullScreenPluginInstance,\n        getFilePluginInstance: getFilePluginInstance,\n        openPluginInstance: openPluginInstance,\n        pageNavigationPluginInstance: pageNavigationPluginInstance,\n        printPluginInstance: printPluginInstance,\n        propertiesPluginInstance: propertiesPluginInstance,\n        rotatePluginInstance: rotatePluginInstance,\n        scrollModePluginInstance: scrollModePluginInstance,\n        searchPluginInstance: searchPluginInstance,\n        selectionModePluginInstance: selectionModePluginInstance,\n        themePluginInstance: themePluginInstance,\n        zoomPluginInstance: zoomPluginInstance,\n        install: function (pluginFunctions) {\n            plugins.forEach(function (plugin) {\n                if (plugin.install) {\n                    plugin.install(pluginFunctions);\n                }\n            });\n        },\n        renderPageLayer: function (renderProps) { return (React__namespace.createElement(React__namespace.Fragment, null, plugins.map(function (plugin, idx) {\n            return plugin.renderPageLayer ? (React__namespace.createElement(React__namespace.Fragment, { key: idx }, plugin.renderPageLayer(renderProps))) : (React__namespace.createElement(React__namespace.Fragment, { key: idx }));\n        }))); },\n        renderViewer: function (props) {\n            var slot = props.slot;\n            plugins.forEach(function (plugin) {\n                if (plugin.renderViewer) {\n                    slot = plugin.renderViewer(__assign(__assign({}, props), { slot: slot }));\n                }\n            });\n            return slot;\n        },\n        uninstall: function (pluginFunctions) {\n            plugins.forEach(function (plugin) {\n                if (plugin.uninstall) {\n                    plugin.uninstall(pluginFunctions);\n                }\n            });\n        },\n        onDocumentLoad: function (props) {\n            plugins.forEach(function (plugin) {\n                if (plugin.onDocumentLoad) {\n                    plugin.onDocumentLoad(props);\n                }\n            });\n        },\n        onTextLayerRender: function (props) {\n            plugins.forEach(function (plugin) {\n                if (plugin.onTextLayerRender) {\n                    plugin.onTextLayerRender(props);\n                }\n            });\n        },\n        onViewerStateChange: function (viewerState) {\n            var newState = viewerState;\n            plugins.forEach(function (plugin) {\n                if (plugin.onViewerStateChange) {\n                    newState = plugin.onViewerStateChange(newState);\n                }\n            });\n            return newState;\n        },\n        renderDefaultToolbar: renderDefaultToolbar,\n        Toolbar: ToolbarDecorator,\n    };\n};\n\nexports.MoreActionsPopover = MoreActionsPopover;\nexports.MoreIcon = MoreIcon;\nexports.toolbarPlugin = toolbarPlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/toolbar/lib/cjs/toolbar.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/toolbar/lib/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/toolbar/lib/index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/toolbar.js */ \"./node_modules/@react-pdf-viewer/toolbar/lib/cjs/toolbar.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvdG9vbGJhci9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixJQUFJLDJIQUE0QztBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvdG9vbGJhci9saWIvaW5kZXguanM/NjlkOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgUmVhY3QgY29tcG9uZW50IHRvIHZpZXcgYSBQREYgZG9jdW1lbnRcbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXZcbiAqIEBsaWNlbnNlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXYvbGljZW5zZVxuICogQGNvcHlyaWdodCAyMDE5LTIwMjIgTmd1eWVuIEh1dSBQaHVvYyA8bWVAcGh1b2Mubmc+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvdG9vbGJhci5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy90b29sYmFyLmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/toolbar/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/zoom/lib/cjs/zoom.js":
/*!*************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/zoom/lib/cjs/zoom.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar core = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar ZoomInIcon = function () { return (React__namespace.createElement(core.Icon, { ignoreDirection: true, size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M10.5,0.499c5.523,0,10,4.477,10,10s-4.477,10-10,10s-10-4.477-10-10S4.977,0.499,10.5,0.499z\\n            M23.5,23.499\\n            l-5.929-5.929\\n            M5.5,10.499h10\\n            M10.5,5.499v10\" }))); };\n\nvar ZoomOutIcon = function () { return (React__namespace.createElement(core.Icon, { ignoreDirection: true, size: 16 },\n    React__namespace.createElement(\"path\", { d: \"M10.5,0.499c5.523,0,10,4.477,10,10s-4.477,10-10,10s-10-4.477-10-10S4.977,0.499,10.5,0.499z\\n            M23.5,23.499\\n            l-5.929-5.929\\n            M5.5,10.499h10\" }))); };\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar useZoom = function (store) {\n    var _a = React__namespace.useState(store.get('scale') || 0), scale = _a[0], setScale = _a[1];\n    var handleScaleChanged = function (currentScale) {\n        setScale(currentScale);\n    };\n    React__namespace.useEffect(function () {\n        store.subscribe('scale', handleScaleChanged);\n        return function () {\n            store.unsubscribe('scale', handleScaleChanged);\n        };\n    }, []);\n    return { scale: scale };\n};\n\nvar CurrentScale = function (_a) {\n    var children = _a.children, store = _a.store;\n    var scale = useZoom(store).scale;\n    var defaultChildren = function (props) { return React__namespace.createElement(React__namespace.Fragment, null, \"\".concat(Math.round(props.scale * 100), \"%\")); };\n    var render = children || defaultChildren;\n    return render({ scale: scale });\n};\n\nvar LEVELS = [\n    0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.3, 1.5, 1.7, 1.9, 2.1, 2.4, 2.7, 3.0, 3.3, 3.7, 4.1, 4.6,\n    5.1, 5.7, 6.3, 7.0, 7.7, 8.5, 9.4, 10,\n];\nvar increase = function (currentLevel) {\n    var found = LEVELS.find(function (item) { return item > currentLevel; });\n    return found || currentLevel;\n};\nvar decrease = function (currentLevel) {\n    var found = LEVELS.findIndex(function (item) { return item >= currentLevel; });\n    return found === -1 || found === 0 ? currentLevel : LEVELS[found - 1];\n};\n\nvar ShortcutHandler = function (_a) {\n    var containerRef = _a.containerRef, store = _a.store;\n    var keydownHandler = function (e) {\n        if (e.shiftKey || e.altKey) {\n            return;\n        }\n        var isCommandPressed = core.isMac() ? e.metaKey : e.ctrlKey;\n        if (!isCommandPressed) {\n            return;\n        }\n        var containerEle = containerRef.current;\n        if (!containerEle || !document.activeElement || !containerEle.contains(document.activeElement)) {\n            return;\n        }\n        var zoom = store.get('zoom');\n        if (!zoom) {\n            return;\n        }\n        var scale = store.get('scale') || 1;\n        var newScale = 1;\n        switch (e.key) {\n            case '-':\n                newScale = decrease(scale);\n                break;\n            case '=':\n                newScale = increase(scale);\n                break;\n            case '0':\n                newScale = 1;\n                break;\n            default:\n                newScale = scale;\n                break;\n        }\n        if (newScale !== scale) {\n            e.preventDefault();\n            zoom(newScale);\n        }\n    };\n    React__namespace.useEffect(function () {\n        var containerEle = containerRef.current;\n        if (!containerEle) {\n            return;\n        }\n        document.addEventListener('keydown', keydownHandler);\n        return function () {\n            document.removeEventListener('keydown', keydownHandler);\n        };\n    }, [containerRef.current]);\n    return React__namespace.createElement(React__namespace.Fragment, null);\n};\n\nvar DEFAULT_LEVELS = [0.5, 0.75, 1, 1.25, 1.5, 2, 3, 4];\nvar PORTAL_OFFSET = { left: 0, top: 8 };\nvar ZoomPopover = function (_a) {\n    var _b = _a.levels, levels = _b === void 0 ? DEFAULT_LEVELS : _b, scale = _a.scale, onZoom = _a.onZoom;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var direction = React__namespace.useContext(core.ThemeContext).direction;\n    var isRtl = direction === core.TextDirection.RightToLeft;\n    var getSpcialLevelLabel = function (level) {\n        switch (level) {\n            case core.SpecialZoomLevel.ActualSize:\n                return l10n && l10n.zoom ? l10n.zoom.actualSize : 'Actual size';\n            case core.SpecialZoomLevel.PageFit:\n                return l10n && l10n.zoom ? l10n.zoom.pageFit : 'Page fit';\n            case core.SpecialZoomLevel.PageWidth:\n                return l10n && l10n.zoom ? l10n.zoom.pageWidth : 'Page width';\n        }\n    };\n    var zoomDocumentLabel = l10n && l10n.zoom ? l10n.zoom.zoomDocument : 'Zoom document';\n    var renderTarget = function (toggle) {\n        var click = function () {\n            toggle();\n        };\n        return (React__namespace.createElement(core.MinimalButton, { ariaLabel: zoomDocumentLabel, testId: \"zoom__popover-target\", onClick: click },\n            React__namespace.createElement(\"span\", { className: \"rpv-zoom__popover-target\" },\n                React__namespace.createElement(\"span\", { \"data-testid\": \"zoom__popover-target-scale\", className: core.classNames({\n                        'rpv-zoom__popover-target-scale': true,\n                        'rpv-zoom__popover-target-scale--ltr': !isRtl,\n                        'rpv-zoom__popover-target-scale--rtl': isRtl,\n                    }) },\n                    Math.round(scale * 100),\n                    \"%\"),\n                React__namespace.createElement(\"span\", { className: \"rpv-zoom__popover-target-arrow\" }))));\n    };\n    var renderContent = function (toggle) { return (React__namespace.createElement(core.Menu, null,\n        Object.keys(core.SpecialZoomLevel).map(function (k) {\n            var level = k;\n            var clickMenuItem = function () {\n                toggle();\n                onZoom(level);\n            };\n            return (React__namespace.createElement(core.MenuItem, { key: level, onClick: clickMenuItem }, getSpcialLevelLabel(level)));\n        }),\n        React__namespace.createElement(core.MenuDivider, null),\n        levels.map(function (level) {\n            var clickMenuItem = function () {\n                toggle();\n                onZoom(level);\n            };\n            return (React__namespace.createElement(core.MenuItem, { key: level, onClick: clickMenuItem }, \"\".concat(Math.round(level * 100), \"%\")));\n        }))); };\n    return (React__namespace.createElement(core.Popover, { ariaControlsSuffix: \"zoom\", ariaHasPopup: \"menu\", position: core.Position.BottomCenter, target: renderTarget, content: renderContent, offset: PORTAL_OFFSET, closeOnClickOutside: true, closeOnEscape: true }));\n};\n\nvar Zoom = function (_a) {\n    var children = _a.children, levels = _a.levels, store = _a.store;\n    var scale = useZoom(store).scale;\n    var zoomTo = function (newLevel) {\n        var zoom = store.get('zoom');\n        if (zoom) {\n            zoom(newLevel);\n        }\n    };\n    var defaultChildren = function (props) { return (React__namespace.createElement(ZoomPopover, { levels: levels, scale: props.scale, onZoom: props.onZoom })); };\n    var render = children || defaultChildren;\n    return render({\n        scale: scale,\n        onZoom: zoomTo,\n    });\n};\n\nvar TOOLTIP_OFFSET$1 = { left: 0, top: 8 };\nvar ZoomInButton = function (_a) {\n    var enableShortcuts = _a.enableShortcuts, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.zoom ? l10n.zoom.zoomIn : 'Zoom in';\n    var ariaKeyShortcuts = enableShortcuts ? (core.isMac() ? 'Meta+=' : 'Ctrl+=') : '';\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"zoom-in\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaKeyShortcuts: ariaKeyShortcuts, ariaLabel: label, testId: \"zoom__in-button\", onClick: onClick },\n            React__namespace.createElement(ZoomInIcon, null)), content: function () { return label; }, offset: TOOLTIP_OFFSET$1 }));\n};\n\nvar ZoomIn = function (_a) {\n    var children = _a.children, enableShortcuts = _a.enableShortcuts, store = _a.store;\n    var scale = useZoom(store).scale;\n    var zoomIn = function () {\n        var zoom = store.get('zoom');\n        if (zoom) {\n            var newLevel = increase(scale);\n            zoom(newLevel);\n        }\n    };\n    var render = children || ZoomInButton;\n    return render({\n        enableShortcuts: enableShortcuts,\n        onClick: zoomIn,\n    });\n};\n\nvar ZoomInMenuItem = function (_a) {\n    var onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.zoom ? l10n.zoom.zoomIn : 'Zoom in';\n    return (React__namespace.createElement(core.MenuItem, { icon: React__namespace.createElement(ZoomInIcon, null), testId: \"zoom__in-menu\", onClick: onClick }, label));\n};\n\nvar TOOLTIP_OFFSET = { left: 0, top: 8 };\nvar ZoomOutButton = function (_a) {\n    var enableShortcuts = _a.enableShortcuts, onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.zoom ? l10n.zoom.zoomOut : 'Zoom out';\n    var ariaKeyShortcuts = enableShortcuts ? (core.isMac() ? 'Meta+-' : 'Ctrl+-') : '';\n    return (React__namespace.createElement(core.Tooltip, { ariaControlsSuffix: \"zoom-out\", position: core.Position.BottomCenter, target: React__namespace.createElement(core.MinimalButton, { ariaKeyShortcuts: ariaKeyShortcuts, ariaLabel: label, testId: \"zoom__out-button\", onClick: onClick },\n            React__namespace.createElement(ZoomOutIcon, null)), content: function () { return label; }, offset: TOOLTIP_OFFSET }));\n};\n\nvar ZoomOut = function (_a) {\n    var children = _a.children, enableShortcuts = _a.enableShortcuts, store = _a.store;\n    var scale = useZoom(store).scale;\n    var zoomIn = function () {\n        var zoom = store.get('zoom');\n        if (zoom) {\n            var newLevel = decrease(scale);\n            zoom(newLevel);\n        }\n    };\n    var render = children || ZoomOutButton;\n    return render({\n        enableShortcuts: enableShortcuts,\n        onClick: zoomIn,\n    });\n};\n\nvar ZoomOutMenuItem = function (_a) {\n    var onClick = _a.onClick;\n    var l10n = React__namespace.useContext(core.LocalizationContext).l10n;\n    var label = l10n && l10n.zoom ? l10n.zoom.zoomOut : 'Zoom out';\n    return (React__namespace.createElement(core.MenuItem, { icon: React__namespace.createElement(ZoomOutIcon, null), testId: \"zoom__out-menu\", onClick: onClick }, label));\n};\n\nvar zoomPlugin = function (props) {\n    var zoomPluginProps = React__namespace.useMemo(function () { return Object.assign({}, { enableShortcuts: true }, props); }, []);\n    var store = React__namespace.useMemo(function () { return core.createStore({}); }, []);\n    var CurrentScaleDecorator = function (props) { return React__namespace.createElement(CurrentScale, __assign({}, props, { store: store })); };\n    var ZoomInDecorator = function (props) { return (React__namespace.createElement(ZoomIn, __assign({ enableShortcuts: zoomPluginProps.enableShortcuts }, props, { store: store }))); };\n    var ZoomInButtonDecorator = function () { return React__namespace.createElement(ZoomInDecorator, null, function (props) { return React__namespace.createElement(ZoomInButton, __assign({}, props)); }); };\n    var ZoomInMenuItemDecorator = function (props) { return (React__namespace.createElement(ZoomInDecorator, null, function (p) { return (React__namespace.createElement(ZoomInMenuItem, { onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    var ZoomOutDecorator = function (props) { return (React__namespace.createElement(ZoomOut, __assign({ enableShortcuts: zoomPluginProps.enableShortcuts }, props, { store: store }))); };\n    var ZoomOutButtonDecorator = function () { return React__namespace.createElement(ZoomOutDecorator, null, function (props) { return React__namespace.createElement(ZoomOutButton, __assign({}, props)); }); };\n    var ZoomOutMenuItemDecorator = function (props) { return (React__namespace.createElement(ZoomOutDecorator, null, function (p) { return (React__namespace.createElement(ZoomOutMenuItem, { onClick: function () {\n            p.onClick();\n            props.onClick();\n        } })); })); };\n    var ZoomDecorator = function (props) { return React__namespace.createElement(Zoom, __assign({}, props, { store: store })); };\n    var ZoomPopoverDecorator = function (zoomPopverProps) { return (React__namespace.createElement(ZoomDecorator, null, function (props) { return React__namespace.createElement(ZoomPopover, __assign({ levels: zoomPopverProps === null || zoomPopverProps === void 0 ? void 0 : zoomPopverProps.levels }, props)); })); };\n    var renderViewer = function (props) {\n        var slot = props.slot;\n        if (!zoomPluginProps.enableShortcuts) {\n            return slot;\n        }\n        var updateSlot = {\n            children: (React__namespace.createElement(React__namespace.Fragment, null,\n                React__namespace.createElement(ShortcutHandler, { containerRef: props.containerRef, store: store }),\n                slot.children)),\n        };\n        return __assign(__assign({}, slot), updateSlot);\n    };\n    return {\n        renderViewer: renderViewer,\n        install: function (pluginFunctions) {\n            store.update('zoom', pluginFunctions.zoom);\n        },\n        onViewerStateChange: function (viewerState) {\n            store.update('scale', viewerState.scale);\n            return viewerState;\n        },\n        zoomTo: function (scale) {\n            var zoom = store.get('zoom');\n            if (zoom) {\n                zoom(scale);\n            }\n        },\n        CurrentScale: CurrentScaleDecorator,\n        ZoomIn: ZoomInDecorator,\n        ZoomInButton: ZoomInButtonDecorator,\n        ZoomInMenuItem: ZoomInMenuItemDecorator,\n        ZoomOut: ZoomOutDecorator,\n        ZoomOutButton: ZoomOutButtonDecorator,\n        ZoomOutMenuItem: ZoomOutMenuItemDecorator,\n        Zoom: ZoomDecorator,\n        ZoomPopover: ZoomPopoverDecorator,\n    };\n};\n\nexports.ZoomInIcon = ZoomInIcon;\nexports.ZoomOutIcon = ZoomOutIcon;\nexports.zoomPlugin = zoomPlugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/zoom/lib/cjs/zoom.js\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/zoom/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/zoom/lib/index.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A React component to view a PDF document\n *\n * @see https://react-pdf-viewer.dev\n * @license https://react-pdf-viewer.dev/license\n * @copyright 2019-2022 Nguyen Huu Phuoc <me@phuoc.ng>\n */\n\n\n\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/zoom.js */ \"./node_modules/@react-pdf-viewer/zoom/lib/cjs/zoom.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvem9vbS9saWIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixJQUFJLGtIQUF5QztBQUM3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvem9vbS9saWIvaW5kZXguanM/ZDkwNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgUmVhY3QgY29tcG9uZW50IHRvIHZpZXcgYSBQREYgZG9jdW1lbnRcbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXZcbiAqIEBsaWNlbnNlIGh0dHBzOi8vcmVhY3QtcGRmLXZpZXdlci5kZXYvbGljZW5zZVxuICogQGNvcHlyaWdodCAyMDE5LTIwMjIgTmd1eWVuIEh1dSBQaHVvYyA8bWVAcGh1b2Mubmc+XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvem9vbS5taW4uanMnKTtcbn0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy96b29tLmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/zoom/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[5].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[4]!./styles/reviewDisplay.module.scss":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[5].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[4]!./styles/reviewDisplay.module.scss ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".reviewDisplay_container__u_iDG {\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  justify-content: center;\\n  align-items: center;\\n  margin-top: 5px;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n  background-color: white;\\n}\\n.reviewDisplay_container__u_iDG div {\\n  transition: 0.2s linear;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc {\\n  display: flex;\\n  flex-direction: row;\\n  width: 100%;\\n  max-width: 1200px;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_leftInnercontainerBody__C6i79 .reviewDisplay_sticky__D6Org {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_leftInnercontainerBody__C6i79 .reviewDisplay_topicHeader__HBMSk {\\n  display: flex;\\n  align-items: center;\\n  margin-top: 5px;\\n  font-weight: 400;\\n  height: 40px;\\n  font-family: \\\"Montserrat\\\";\\n  font-size: 17px;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_leftInnercontainerBody__C6i79 .reviewDisplay_titleList__VDU8o {\\n  display: flex;\\n  flex-direction: column;\\n  border-left: 3px solid rgba(0, 0, 0, 0.1);\\n  margin-left: 2px;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_leftInnercontainerBody__C6i79 .reviewDisplay_topicTittle__QaBrz {\\n  margin-left: 0px;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  padding: 8px;\\n  padding-left: 10px;\\n  font-size: 16px;\\n  font-weight: 400;\\n  cursor: pointer;\\n  color: black;\\n  border-left: 3px solid transparent;\\n  position: relative;\\n  top: 0px;\\n  left: -2px;\\n  z-index: 99;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_leftInnercontainerBody__C6i79 .reviewDisplay_topicTittle__QaBrz:hover {\\n  transition: 0.2s linear;\\n  color: #007aff;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_leftInnercontainerBody__C6i79 .reviewDisplay_Active__6bV9R {\\n  transition: 0.2s linear;\\n  color: #007aff;\\n  border-left: 3px solid #007aff;\\n  font-weight: 600;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  flex-grow: 1;\\n  min-height: 75vh;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg h2 {\\n  margin-top: 60px;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyHeader__1NcCt {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  height: 40px;\\n  width: 100%;\\n  font-family: \\\"Montserrat\\\";\\n  font-weight: 400;\\n  color: #800000;\\n  margin-bottom: 10px;\\n  font-size: 16px;\\n  margin-top: 10px;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyHeader__1NcCt .reviewDisplay_statusBar__ARTzZ {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyHeader__1NcCt .reviewDisplay_download__1Fc7m {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  height: 40px;\\n  background-color: #800000;\\n  color: white;\\n  border: 2px solid transparent;\\n  margin: 10px 15px;\\n  padding: 0px 15px;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 5px;\\n  transition: 0.2s linear;\\n  font-weight: 500;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyHeader__1NcCt .reviewDisplay_download__1Fc7m:hover {\\n  background-color: #ffd79d;\\n  color: #800000;\\n  border: 2px solid #007aff;\\n  cursor: pointer;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyContent__wnIEg {\\n  width: 100%;\\n  font-style: normal;\\n  font-family: \\\"Roboto\\\";\\n  font-weight: 400;\\n  font-size: 17px;\\n  line-height: 24px;\\n  margin-bottom: 40px;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyContent__wnIEg .reviewDisplay_conteinerTable__nFBKN h2 {\\n  text-align: center;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyContent__wnIEg .reviewDisplay_headerHead__r7OJv {\\n  margin: 10px 0px;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyContent__wnIEg .reviewDisplay_headerHead__r7OJv .reviewDisplay_header__z6xrT {\\n  font-family: \\\"Montserrat\\\";\\n  font-weight: 500;\\n  font-size: 18px;\\n  margin: 10px 0px 0px 0px;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyContent__wnIEg .reviewDisplay_headerHead__r7OJv .reviewDisplay_description__hGWr9 {\\n  font-family: \\\"Roboto\\\";\\n  font-size: 16px;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyContent__wnIEg .reviewDisplay_hiddenExam__XVUsN {\\n  position: relative;\\n  height: 700px;\\n  overflow: hidden;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyContent__wnIEg .reviewDisplay_hiddenExam__XVUsN::before {\\n  content: \\\"\\\";\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 400px;\\n  background: linear-gradient(transparent, white);\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyContent__wnIEg .reviewDisplay_showMoreContainer__ZPHR9 {\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  justify-content: center;\\n  align-items: center;\\n  margin-bottom: 70px;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyContent__wnIEg .reviewDisplay_showMoreContainer__ZPHR9 .reviewDisplay_more__4pXUk {\\n  width: -webkit-fit-content;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  height: 40px;\\n  background-color: #800000;\\n  color: white;\\n  border: 2px solid transparent;\\n  margin: 15px 15px;\\n  padding: 0px 15px;\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 5px;\\n  transition: 0.2s linear;\\n  font-weight: 500;\\n}\\n.reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyContent__wnIEg .reviewDisplay_showMoreContainer__ZPHR9 .reviewDisplay_more__4pXUk:hover {\\n  background-color: #ffd79d;\\n  color: #800000;\\n  border: 2px solid #007aff;\\n  cursor: pointer;\\n}\\n@media only screen and (max-width: 908px) {\\n  .reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyHeader__1NcCt {\\n    display: flex;\\n    flex-direction: column;\\n    width: 100%;\\n    height: -webkit-fit-content;\\n    height: -moz-fit-content;\\n    height: fit-content;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n  .reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyHeader__1NcCt .reviewDisplay_statusBar__ARTzZ {\\n    width: 100%;\\n    display: flex;\\n    flex-direction: row;\\n    font-size: 12px;\\n  }\\n  .reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyHeader__1NcCt .reviewDisplay_download__1Fc7m {\\n    width: 100%;\\n    margin: 0px;\\n    margin-top: 10px;\\n    padding: 10px;\\n  }\\n  .reviewDisplay_container__u_iDG .reviewDisplay_innerContainer__gZBAc .reviewDisplay_rightInnercontainerBody__trTeg .reviewDisplay_BodyContent__wnIEg .reviewDisplay_showMoreContainer__ZPHR9 .reviewDisplay_more__4pXUk {\\n    margin: 0px;\\n    margin-top: 10px;\\n    padding: 10px;\\n  }\\n}\\n\\n.reviewDisplay_notFound__xJnOb {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 15px;\\n  border: 2px solid red;\\n}\\n\\n@media only screen and (max-width: 908px) {\\n  .reviewDisplay_leftInnercontainerBody__C6i79 {\\n    display: none;\\n  }\\n  .reviewDisplay_mobile__Q3bwc {\\n    display: flex;\\n    position: -webkit-sticky;\\n    position: sticky;\\n    top: 0;\\n  }\\n}\\n@media only screen and (min-width: 908px) {\\n  .reviewDisplay_leftInnercontainerBody__C6i79 {\\n    width: 100%;\\n    max-width: 250px;\\n    font-family: \\\"Roboto\\\";\\n    color: #800000;\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  .reviewDisplay_mobile__Q3bwc {\\n    display: none;\\n  }\\n}\\n.reviewDisplay_modal__n6Kn_ {\\n  margin-left: 1.8rem;\\n  margin-right: 1.8rem;\\n  margin-bottom: 1.8rem;\\n  display: grid;\\n  grid-gap: 10px;\\n}\\n@media (min-width: 268px) {\\n  .reviewDisplay_modal__n6Kn_ {\\n    grid-template-columns: repeat(1, 1fr);\\n    align-items: center;\\n    justify-content: center;\\n  }\\n}\\n@media (min-width: 468px) {\\n  .reviewDisplay_modal__n6Kn_ {\\n    grid-template-columns: repeat(2, 1fr);\\n  }\\n}\\n@media (min-width: 768px) {\\n  .reviewDisplay_modal__n6Kn_ {\\n    grid-template-columns: repeat(3, 1fr);\\n  }\\n}\\n@media (min-width: 960px) {\\n  .reviewDisplay_modal__n6Kn_ {\\n    grid-template-columns: repeat(4, 1fr);\\n  }\\n}\\n@media (min-width: 1200px) {\\n  .reviewDisplay_modal__n6Kn_ {\\n    grid-template-columns: repeat(5, 1fr);\\n  }\\n}\\n\\n.reviewDisplay_table__JxKCV {\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/reviewDisplay.module.scss\",\"webpack://styles/_index.scss\"],\"names\":[],\"mappings\":\"AAEA;EACC,aAAA;EACA,sBAAA;EACA,WAAA;EACA,uBAAA;EACA,mBAAA;EACA,eAAA;EACA,kBAAA;EACA,mBAAA;EACA,uBCTO;ADQR;AAGC;EACC,uBAAA;AADF;AAGC;EACC,aAAA;EACA,mBAAA;EACA,WAAA;EACA,iBAAA;AADF;AAIG;EACC,wBAAA;EACA,gBAAA;EACA,MAAA;AAFJ;AAKG;EACC,aAAA;EACA,mBAAA;EACA,eAAA;EACA,gBAAA;EACA,YAAA;EACA,yBCnCS;EDoCT,eAAA;AAHJ;AAMG;EACC,aAAA;EACA,sBAAA;EACA,yCAAA;EACA,gBAAA;AAJJ;AAOG;EACC,gBAAA;EACA,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,YAAA;EACA,kBAAA;EACA,eAAA;EACA,gBAAA;EACA,eAAA;EACA,YCrDI;EDsDJ,kCAAA;EACA,kBAAA;EACA,QAAA;EACA,UAAA;EACA,WAAA;AALJ;AAQG;EACC,uBAAA;EACA,cC9DQ;ADwDZ;AASG;EACC,uBAAA;EACA,cCnEQ;EDoER,8BAAA;EACA,gBAAA;AAPJ;AAUE;EACC,WAAA;EACA,aAAA;EACA,sBAAA;EACA,YAAA;EACA,gBAAA;AARH;AAUG;EACC,gBAAA;AARJ;AAWG;EACC,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,8BAAA;EACA,YAAA;EACA,WAAA;EACA,yBC9FS;ED+FT,gBAAA;EACA,cCxFI;EDyFJ,mBAAA;EACA,eAAA;EACA,gBAAA;AATJ;AAWI;EACC,0BAAA;EAAA,uBAAA;EAAA,kBAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,mBAAA;AATL;AAYI;EACC,0BAAA;EAAA,uBAAA;EAAA,kBAAA;EACA,YAAA;EACA,yBCxGG;EDyGH,YC/GG;EDgHH,6BAAA;EACA,iBAAA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;EACA,uBAAA;EACA,gBAAA;AAVL;AAaI;EACC,yBC1HS;ED2HT,cCxHG;EDyHH,yBAAA;EACA,eAAA;AAXL;AAeG;EACC,WAAA;EACA,kBAAA;EACA,qBCxIO;EDyIP,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,mBAAA;AAbJ;AAgBK;EACC,kBAAA;AAdN;AAkBI;EACC,gBAAA;AAhBL;AAiBK;EACC,yBCxJO;EDyJP,gBAAA;EACA,eAAA;EACA,wBAAA;AAfN;AAiBK;EACC,qBC7JK;ED8JL,eAAA;AAfN;AAmBI;EACC,kBAAA;EACA,aAAA;EACA,gBAAA;AAjBL;AAoBI;EACC,WAAA;EACA,kBAAA;EACA,SAAA;EACA,OAAA;EACA,WAAA;EACA,aAAA;EACA,+CAAA;AAlBL;AAqBI;EACC,aAAA;EACA,sBAAA;EACA,WAAA;EACA,uBAAA;EACA,mBAAA;EACA,mBAAA;AAnBL;AAqBK;EACC,0BAAA;EAAA,uBAAA;EAAA,kBAAA;EACA,YAAA;EACA,yBCtLE;EDuLF,YC7LE;ED8LF,6BAAA;EACA,iBAAA;EACA,iBAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,mBAAA;EACA,kBAAA;EACA,uBAAA;EACA,gBAAA;AAnBN;AAsBK;EACC,yBCxMQ;EDyMR,cCtME;EDuMF,yBAAA;EACA,eAAA;AApBN;AAyBG;EACC;IACC,aAAA;IACA,sBAAA;IACA,WAAA;IACA,2BAAA;IAAA,wBAAA;IAAA,mBAAA;IACA,uBAAA;IACA,mBAAA;EAvBH;EAyBG;IACC,WAAA;IACA,aAAA;IACA,mBAAA;IACA,eAAA;EAvBJ;EA0BG;IACC,WAAA;IACA,WAAA;IACA,gBAAA;IACA,aAAA;EAxBJ;EA6BI;IACC,WAAA;IACA,gBAAA;IACA,aAAA;EA3BL;AACF;;AAmCA;EACC,WAAA;EACA,aAAA;EACA,sBAAA;EACA,mBAAA;EACA,uBAAA;EACA,aAAA;EACA,qBAAA;AAhCD;;AAmCA;EACC;IACC,aAAA;EAhCA;EAkCD;IACC,aAAA;IACA,wBAAA;IAAA,gBAAA;IACA,MAAA;EAhCA;AACF;AAmCA;EACC;IACC,WAAA;IACA,gBAAA;IACA,qBClRS;IDmRT,cC5QM;ID6QN,aAAA;IACA,sBAAA;EAjCA;EAmCD;IACC,aAAA;EAjCA;AACF;AAmCA;EACC,mBAAA;EACA,oBAAA;EACA,qBAAA;EACA,aAAA;EACA,cAAA;AAjCD;AAmCC;EAPD;IAQE,qCAAA;IACA,mBAAA;IACA,uBAAA;EAhCA;AACF;AAkCC;EAbD;IAcE,qCAAA;EA/BA;AACF;AAiCC;EAjBD;IAkBE,qCAAA;EA9BA;AACF;AAgCC;EArBD;IAsBE,qCAAA;EA7BA;AACF;AA+BC;EAzBD;IA0BE,qCAAA;EA5BA;AACF;;AA+BA;EACC,aAAA;EACA,sBAAA;EACA,WAAA;AA5BD\",\"sourcesContent\":[\"@import 'index';\\r\\n\\r\\n.container {\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction: column;\\r\\n\\twidth: 100%;\\r\\n\\tjustify-content: center;\\r\\n\\talign-items: center;\\r\\n\\tmargin-top: 5px;\\r\\n\\tpadding-left: 10px;\\r\\n\\tpadding-right: 10px;\\r\\n\\tbackground-color: $white;\\r\\n\\r\\n\\tdiv {\\r\\n\\t\\ttransition: 0.2s linear;\\r\\n\\t}\\r\\n\\t.innerContainer {\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tflex-direction: row;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\tmax-width: 1200px;\\r\\n\\r\\n\\t\\t.leftInnercontainerBody {\\r\\n\\t\\t\\t.sticky {\\r\\n\\t\\t\\t\\tposition: -webkit-sticky;\\r\\n\\t\\t\\t\\tposition: sticky;\\r\\n\\t\\t\\t\\ttop: 0;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t.topicHeader {\\r\\n\\t\\t\\t\\tdisplay: flex;\\r\\n\\t\\t\\t\\talign-items: center;\\r\\n\\t\\t\\t\\tmargin-top: 5px;\\r\\n\\t\\t\\t\\tfont-weight: 400;\\r\\n\\t\\t\\t\\theight: 40px;\\r\\n\\t\\t\\t\\tfont-family: $fontHeader;\\r\\n\\t\\t\\t\\tfont-size: 17px;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t.titleList {\\r\\n\\t\\t\\t\\tdisplay: flex;\\r\\n\\t\\t\\t\\tflex-direction: column;\\r\\n\\t\\t\\t\\tborder-left: 3px solid rgba($color: $black, $alpha: 0.1);\\r\\n\\t\\t\\t\\tmargin-left: 2px;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t.topicTittle {\\r\\n\\t\\t\\t\\tmargin-left: 0px;\\r\\n\\t\\t\\t\\tdisplay: flex;\\r\\n\\t\\t\\t\\tflex-direction: row;\\r\\n\\t\\t\\t\\talign-items: center;\\r\\n\\t\\t\\t\\tpadding: 8px;\\r\\n\\t\\t\\t\\tpadding-left: 10px;\\r\\n\\t\\t\\t\\tfont-size: 16px;\\r\\n\\t\\t\\t\\tfont-weight: 400;\\r\\n\\t\\t\\t\\tcursor: pointer;\\r\\n\\t\\t\\t\\tcolor: $black;\\r\\n\\t\\t\\t\\tborder-left: 3px solid transparent;\\r\\n\\t\\t\\t\\tposition: relative;\\r\\n\\t\\t\\t\\ttop: 0px;\\r\\n\\t\\t\\t\\tleft: -2px;\\r\\n\\t\\t\\t\\tz-index: 99;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t.topicTittle:hover {\\r\\n\\t\\t\\t\\ttransition: 0.2s linear;\\r\\n\\t\\t\\t\\tcolor: $lightblue;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t.Active {\\r\\n\\t\\t\\t\\ttransition: 0.2s linear;\\r\\n\\t\\t\\t\\tcolor: $lightblue;\\r\\n\\t\\t\\t\\tborder-left: 3px solid $lightblue;\\r\\n\\t\\t\\t\\tfont-weight: 600;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t.rightInnercontainerBody {\\r\\n\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\tdisplay: flex;\\r\\n\\t\\t\\tflex-direction: column;\\r\\n\\t\\t\\tflex-grow: 1;\\r\\n\\t\\t\\tmin-height: 75vh;\\r\\n\\r\\n\\t\\t\\th2 {\\r\\n\\t\\t\\t\\tmargin-top: 60px;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t.BodyHeader {\\r\\n\\t\\t\\t\\tdisplay: flex;\\r\\n\\t\\t\\t\\tflex-direction: row;\\r\\n\\t\\t\\t\\talign-items: center;\\r\\n\\t\\t\\t\\tjustify-content: space-between;\\r\\n\\t\\t\\t\\theight: 40px;\\r\\n\\t\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\t\\tfont-family: $fontHeader;\\r\\n\\t\\t\\t\\tfont-weight: 400;\\r\\n\\t\\t\\t\\tcolor: $ugoro;\\r\\n\\t\\t\\t\\tmargin-bottom: 10px;\\r\\n\\t\\t\\t\\tfont-size: 16px;\\r\\n\\t\\t\\t\\tmargin-top: 10px;\\r\\n\\r\\n\\t\\t\\t\\t.statusBar {\\r\\n\\t\\t\\t\\t\\twidth: fit-content;\\r\\n\\t\\t\\t\\t\\tdisplay: flex;\\r\\n\\t\\t\\t\\t\\tflex-direction: row;\\r\\n\\t\\t\\t\\t\\tjustify-content: center;\\r\\n\\t\\t\\t\\t\\talign-items: center;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t.download {\\r\\n\\t\\t\\t\\t\\twidth: fit-content;\\r\\n\\t\\t\\t\\t\\theight: 40px;\\r\\n\\t\\t\\t\\t\\tbackground-color: $ugoro;\\r\\n\\t\\t\\t\\t\\tcolor: $white;\\r\\n\\t\\t\\t\\t\\tborder: 2px solid transparent;\\r\\n\\t\\t\\t\\t\\tmargin: 10px 15px;\\r\\n\\t\\t\\t\\t\\tpadding: 0px 15px;\\r\\n\\t\\t\\t\\t\\tdisplay: flex;\\r\\n\\t\\t\\t\\t\\tflex-direction: row;\\r\\n\\t\\t\\t\\t\\tjustify-content: center;\\r\\n\\t\\t\\t\\t\\talign-items: center;\\r\\n\\t\\t\\t\\t\\tborder-radius: 5px;\\r\\n\\t\\t\\t\\t\\ttransition: 0.2s linear;\\r\\n\\t\\t\\t\\t\\tfont-weight: 500;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t.download:hover {\\r\\n\\t\\t\\t\\t\\tbackground-color: $lightkahawa;\\r\\n\\t\\t\\t\\t\\tcolor: $ugoro;\\r\\n\\t\\t\\t\\t\\tborder: 2px solid $lightblue;\\r\\n\\t\\t\\t\\t\\tcursor: pointer;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t.BodyContent {\\r\\n\\t\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\t\\tfont-style: normal;\\r\\n\\t\\t\\t\\tfont-family: $fontBody;\\r\\n\\t\\t\\t\\tfont-weight: 400;\\r\\n\\t\\t\\t\\tfont-size: 17px;\\r\\n\\t\\t\\t\\tline-height: 24px;\\r\\n\\t\\t\\t\\tmargin-bottom: 40px;\\r\\n\\r\\n\\t\\t\\t\\t.conteinerTable {\\r\\n\\t\\t\\t\\t\\th2 {\\r\\n\\t\\t\\t\\t\\t\\ttext-align: center;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t.headerHead {\\r\\n\\t\\t\\t\\t\\tmargin: 10px 0px;\\r\\n\\t\\t\\t\\t\\t.header {\\r\\n\\t\\t\\t\\t\\t\\tfont-family: $fontHeader;\\r\\n\\t\\t\\t\\t\\t\\tfont-weight: 500;\\r\\n\\t\\t\\t\\t\\t\\tfont-size: 18px;\\r\\n\\t\\t\\t\\t\\t\\tmargin: 10px 0px 0px 0px;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t.description {\\r\\n\\t\\t\\t\\t\\t\\tfont-family: $fontBody;\\r\\n\\t\\t\\t\\t\\t\\tfont-size: 16px;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t.hiddenExam {\\r\\n\\t\\t\\t\\t\\tposition: relative;\\r\\n\\t\\t\\t\\t\\theight: 700px;\\r\\n\\t\\t\\t\\t\\toverflow: hidden;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t.hiddenExam::before {\\r\\n\\t\\t\\t\\t\\tcontent: '';\\r\\n\\t\\t\\t\\t\\tposition: absolute;\\r\\n\\t\\t\\t\\t\\tbottom: 0;\\r\\n\\t\\t\\t\\t\\tleft: 0;\\r\\n\\t\\t\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\t\\t\\theight: 400px;\\r\\n\\t\\t\\t\\t\\tbackground: linear-gradient(transparent, $white);\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t.showMoreContainer {\\r\\n\\t\\t\\t\\t\\tdisplay: flex;\\r\\n\\t\\t\\t\\t\\tflex-direction: column;\\r\\n\\t\\t\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\t\\t\\tjustify-content: center;\\r\\n\\t\\t\\t\\t\\talign-items: center;\\r\\n\\t\\t\\t\\t\\tmargin-bottom: 70px;\\r\\n\\r\\n\\t\\t\\t\\t\\t.more {\\r\\n\\t\\t\\t\\t\\t\\twidth: fit-content;\\r\\n\\t\\t\\t\\t\\t\\theight: 40px;\\r\\n\\t\\t\\t\\t\\t\\tbackground-color: $ugoro;\\r\\n\\t\\t\\t\\t\\t\\tcolor: $white;\\r\\n\\t\\t\\t\\t\\t\\tborder: 2px solid transparent;\\r\\n\\t\\t\\t\\t\\t\\tmargin: 15px 15px;\\r\\n\\t\\t\\t\\t\\t\\tpadding: 0px 15px;\\r\\n\\t\\t\\t\\t\\t\\tdisplay: flex;\\r\\n\\t\\t\\t\\t\\t\\tflex-direction: row;\\r\\n\\t\\t\\t\\t\\t\\tjustify-content: center;\\r\\n\\t\\t\\t\\t\\t\\talign-items: center;\\r\\n\\t\\t\\t\\t\\t\\tborder-radius: 5px;\\r\\n\\t\\t\\t\\t\\t\\ttransition: 0.2s linear;\\r\\n\\t\\t\\t\\t\\t\\tfont-weight: 500;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t.more:hover {\\r\\n\\t\\t\\t\\t\\t\\tbackground-color: $lightkahawa;\\r\\n\\t\\t\\t\\t\\t\\tcolor: $ugoro;\\r\\n\\t\\t\\t\\t\\t\\tborder: 2px solid $lightblue;\\r\\n\\t\\t\\t\\t\\t\\tcursor: pointer;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t@media only screen and (max-width: 908px) {\\r\\n\\t\\t\\t\\t.BodyHeader {\\r\\n\\t\\t\\t\\t\\tdisplay: flex;\\r\\n\\t\\t\\t\\t\\tflex-direction: column;\\r\\n\\t\\t\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\t\\t\\theight: fit-content;\\r\\n\\t\\t\\t\\t\\tjustify-content: center;\\r\\n\\t\\t\\t\\t\\talign-items: center;\\r\\n\\r\\n\\t\\t\\t\\t\\t.statusBar {\\r\\n\\t\\t\\t\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\t\\t\\t\\tdisplay: flex;\\r\\n\\t\\t\\t\\t\\t\\tflex-direction: row;\\r\\n\\t\\t\\t\\t\\t\\tfont-size: 12px;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t.download {\\r\\n\\t\\t\\t\\t\\t\\twidth: 100%;\\r\\n\\t\\t\\t\\t\\t\\tmargin: 0px;\\r\\n\\t\\t\\t\\t\\t\\tmargin-top: 10px;\\r\\n\\t\\t\\t\\t\\t\\tpadding: 10px;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t.BodyContent {\\r\\n\\t\\t\\t\\t\\t.showMoreContainer {\\r\\n\\t\\t\\t\\t\\t\\t.more {\\r\\n\\t\\t\\t\\t\\t\\t\\tmargin: 0px;\\r\\n\\t\\t\\t\\t\\t\\t\\tmargin-top: 10px;\\r\\n\\t\\t\\t\\t\\t\\t\\tpadding: 10px;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\n.notFound {\\r\\n\\twidth: 100%;\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction: column;\\r\\n\\talign-items: center;\\r\\n\\tjustify-content: center;\\r\\n\\tpadding: 15px;\\r\\n\\tborder: 2px solid red;\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 908px) {\\r\\n\\t.leftInnercontainerBody {\\r\\n\\t\\tdisplay: none;\\r\\n\\t}\\r\\n\\t.mobile {\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tposition: sticky;\\r\\n\\t\\ttop: 0;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n@media only screen and (min-width: 908px) {\\r\\n\\t.leftInnercontainerBody {\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\tmax-width: 250px;\\r\\n\\t\\tfont-family: $fontBody;\\r\\n\\t\\tcolor: $ugoro;\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tflex-direction: column;\\r\\n\\t}\\r\\n\\t.mobile {\\r\\n\\t\\tdisplay: none;\\r\\n\\t}\\r\\n}\\r\\n.modal {\\r\\n\\tmargin-left: 1.8rem;\\r\\n\\tmargin-right: 1.8rem;\\r\\n\\tmargin-bottom: 1.8rem;\\r\\n\\tdisplay: grid;\\r\\n\\tgrid-gap: 10px;\\r\\n\\r\\n\\t@media (min-width: 268px) {\\r\\n\\t\\tgrid-template-columns: repeat(1, 1fr);\\r\\n\\t\\talign-items: center;\\r\\n\\t\\tjustify-content: center;\\r\\n\\t}\\r\\n\\r\\n\\t@media (min-width: 468px) {\\r\\n\\t\\tgrid-template-columns: repeat(2, 1fr);\\r\\n\\t}\\r\\n\\r\\n\\t@media (min-width: 768px) {\\r\\n\\t\\tgrid-template-columns: repeat(3, 1fr);\\r\\n\\t}\\r\\n\\r\\n\\t@media (min-width: 960px) {\\r\\n\\t\\tgrid-template-columns: repeat(4, 1fr);\\r\\n\\t}\\r\\n\\r\\n\\t@media (min-width: 1200px) {\\r\\n\\t\\tgrid-template-columns: repeat(5, 1fr);\\r\\n\\t}\\r\\n}\\r\\n\\r\\n.table {\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction: column;\\r\\n\\twidth: 100%;\\r\\n}\\r\\n\",\"$fontHeader: 'Montserrat';\\r\\n$fontBody: 'Roboto';\\r\\n$white: white;\\r\\n$black: black;\\r\\n$lightblue: #007aff;\\r\\n$lightkahawa: #ffd79d;\\r\\n$kahawa: #a35f2e;\\r\\n$gray: gray;\\r\\n$ugoro: #800000;\\r\\n$primaryBackground: #14805e;\\r\\n$boxShadow: 0 1rem 1rem rgba(0, 0, 0, 0.05);\\r\\n$boxShadowAnswers: 0 0.4rem 1.4rem 0 rgba(252, 181, 116, 0.5);\\r\\n$boxShadowRealBox: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,\\r\\n\\trgba(44, 36, 6, 0.65) 0px 4px 6px -1px,\\r\\n\\trgba(255, 255, 255, 0.08) 0px 1px 0px inset;\\r\\n$boxShadowRealBoxHover: rgba(16, 114, 243, 0.4) 0px 0px 0px 2px,\\r\\n\\trgba(118, 209, 115, 0.65) 0px 4px 6px -1px,\\r\\n\\trgba(236, 203, 19, 0.897) 0px 1px 0px inset;\\r\\n$mainBackGround: white;\\r\\n$backGround: #fffcec;\\r\\n$red: red;\\r\\n$captionBackground: hsl(0, 0%, 97%);\\r\\n$answerBackground: #eee;\\r\\n$shadowBox: 1px 1px 25px #000000;\\r\\n\\r\\n$cardColor1: #ffb200;\\r\\n$cardColor2: #ff9700;\\r\\n$cardColor3: #96c110;\\r\\n$cardColor4: #80ad0a;\\r\\n$cardColor5: #64b2f2;\\r\\n$cardColor6: #489ed9;\\r\\n$cardColor7: #c873df;\\r\\n$cardColor8: #af33d1;\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"reviewDisplay_container__u_iDG\",\n\t\"innerContainer\": \"reviewDisplay_innerContainer__gZBAc\",\n\t\"leftInnercontainerBody\": \"reviewDisplay_leftInnercontainerBody__C6i79\",\n\t\"sticky\": \"reviewDisplay_sticky__D6Org\",\n\t\"topicHeader\": \"reviewDisplay_topicHeader__HBMSk\",\n\t\"titleList\": \"reviewDisplay_titleList__VDU8o\",\n\t\"topicTittle\": \"reviewDisplay_topicTittle__QaBrz\",\n\t\"Active\": \"reviewDisplay_Active__6bV9R\",\n\t\"rightInnercontainerBody\": \"reviewDisplay_rightInnercontainerBody__trTeg\",\n\t\"BodyHeader\": \"reviewDisplay_BodyHeader__1NcCt\",\n\t\"statusBar\": \"reviewDisplay_statusBar__ARTzZ\",\n\t\"download\": \"reviewDisplay_download__1Fc7m\",\n\t\"BodyContent\": \"reviewDisplay_BodyContent__wnIEg\",\n\t\"conteinerTable\": \"reviewDisplay_conteinerTable__nFBKN\",\n\t\"headerHead\": \"reviewDisplay_headerHead__r7OJv\",\n\t\"header\": \"reviewDisplay_header__z6xrT\",\n\t\"description\": \"reviewDisplay_description__hGWr9\",\n\t\"hiddenExam\": \"reviewDisplay_hiddenExam__XVUsN\",\n\t\"showMoreContainer\": \"reviewDisplay_showMoreContainer__ZPHR9\",\n\t\"more\": \"reviewDisplay_more__4pXUk\",\n\t\"notFound\": \"reviewDisplay_notFound__xJnOb\",\n\t\"mobile\": \"reviewDisplay_mobile__Q3bwc\",\n\t\"modal\": \"reviewDisplay_modal__n6Kn_\",\n\t\"table\": \"reviewDisplay_table__JxKCV\"\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[5].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[4]!./styles/reviewDisplay.module.scss\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/@react-pdf-viewer/core/lib/styles/index.css":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/@react-pdf-viewer/core/lib/styles/index.css ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--rpv-core__annotation--link-hover-background-color:rgba(255,255,0,.2);--rpv-core__annotation-popup-wrapper-background-color:#faf089;--rpv-core__annotation-popup-wrapper-box-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -2px rgba(0,0,0,.05);--rpv-core__annotation-popup-content-border-top-color:#1a202c;--rpv-core__arrow-border-color:rgba(0,0,0,.3);--rpv-core__asking-password-color:#000;--rpv-core__asking-password-wrapper-background-color:#fff;--rpv-core__asking-password-wrapper-border-color:rgba(0,0,0,.3);--rpv-core__button-background-color:rgba(0,0,0,.3);--rpv-core__button-color:#000;--rpv-core__doc-error-background-color:#fff;--rpv-core__doc-error-text-background-color:#c02424;--rpv-core__doc-error-text-color:#fff;--rpv-core__doc-loading-background-color:#fff;--rpv-core__inner-page-background-color:#fff;--rpv-core__menu-divider-border-bottom-color:rgba(0,0,0,.3);--rpv-core__menu-item-color:#000;--rpv-core__menu-item--hover-background-color:rgba(0,0,0,.1);--rpv-core__menu-item--disabled-color:rgba(0,0,0,.3);--rpv-core__minimal-button-color:#000;--rpv-core__minimal-button--hover-background-color:rgba(0,0,0,.1);--rpv-core__minimal-button--disabled-color:rgba(0,0,0,.3);--rpv-core__minimal-button--selected-background-color:rgba(0,0,0,.1);--rpv-core__modal-body-background-color:#fff;--rpv-core__modal-body-border-color:rgba(0,0,0,.3);--rpv-core__modal-overlay-background-color:rgba(0,0,0,.5);--rpv-core__page-layer-box-shadow:2px 2px 8px 0 rgba(0,0,0,.2);--rpv-core__popover-body-background-color:#fff;--rpv-core__popover-body-border-color:rgba(0,0,0,.3);--rpv-core__popover-body-color:#000;--rpv-core__primary-button-background-color:#2566e8;--rpv-core__primary-button-color:#fff;--rpv-core__progress-bar-background-color:rgba(0,0,0,.1);--rpv-core__progress-bar-progress-background-color:#2566e8;--rpv-core__progress-bar-progress-color:#fff;--rpv-core__separator-border-bottom-color:rgba(0,0,0,.3);--rpv-core__spinner-border-color:rgba(0,0,0,.4);--rpv-core__spinner-border-transparent-color:transparent;--rpv-core__splitter-background-color:transparent;--rpv-core__splitter--hover-background-color:rgba(0,0,0,.2);--rpv-core__text-layer-text--selection-background-color:#00f;--rpv-core__text-layer-text--selection-color:transparent;--rpv-core__textbox-background-color:#fff;--rpv-core__textbox-border-color:rgba(0,0,0,.2);--rpv-core__textbox-color:#000;--rpv-core__tooltip-body-background-color:#000;--rpv-core__tooltip-body-color:#fff}.rpv-core__viewer--dark{--rpv-core__asking-password-background-color:#363636;--rpv-core__asking-password-color:#fff;--rpv-core__asking-password-wrapper-border-color:#191919;--rpv-core__asking-password-wrapper-background-color:#191919;--rpv-core__button-background-color:#171717;--rpv-core__button-color:#fff;--rpv-core__doc-error-background-color:#191919;--rpv-core__doc-error-text-background-color:#c02323;--rpv-core__doc-error-text-color:#fff;--rpv-core__doc-loading-background-color:#191919;--rpv-core__inner-page-background-color:#1a1a1a;--rpv-core__menu-divider-border-bottom-color:#000;--rpv-core__menu-item-color:#fff;--rpv-core__menu-item--hover-background-color:#2566e8;--rpv-core__menu-item--disabled-color:#5e5e5e;--rpv-core__minimal-button-color:#fff;--rpv-core__minimal-button--disabled-color:#5e5e5e;--rpv-core__minimal-button--hover-background-color:#191919;--rpv-core__minimal-button--selected-background-color:#1657bb;--rpv-core__modal-body-background-color:#363636;--rpv-core__primary-button-background-color:#2566e8;--rpv-core__popover-body-background-color:#363636;--rpv-core__popover-body-color:#fff;--rpv-core__progress-bar-background-color:#000;--rpv-core__separator-border-bottom-color:#000;--rpv-core__spinner-border-color:#fff;--rpv-core__splitter-background-color:#1a1a1a;--rpv-core__splitter--hover-background-color:#2566e8;--rpv-core__textbox-background-color:#121212;--rpv-core__textbox-border-color:#121212;--rpv-core__textbox-color:#fff;--rpv-core__tooltip-body-background-color:#414141;--rpv-core__tooltip-body-color:#fff}.rpv-core__annotation{position:absolute}.rpv-core__annotation-layer{z-index:1}.rpv-core__arrow{border-bottom:1px solid var(--rpv-core__arrow-border-color);border-left-color:var(--rpv-core__arrow-border-color);border-right:1px solid var(--rpv-core__arrow-border-color);border-top-color:var(--rpv-core__arrow-border-color);height:10px;position:absolute;width:10px;z-index:0}.rpv-core__arrow--tl{bottom:0;left:0;transform:translate(50%,50%) rotate(45deg)}.rpv-core__arrow--tc{left:50%}.rpv-core__arrow--tc,.rpv-core__arrow--tr{bottom:0;transform:translate(-50%,50%) rotate(45deg)}.rpv-core__arrow--tr{right:0}.rpv-core__arrow--rt{left:0;top:0;transform:translate(-50%,50%) rotate(135deg)}.rpv-core__arrow--rc{top:50%}.rpv-core__arrow--rb,.rpv-core__arrow--rc{left:0;transform:translate(-50%,-50%) rotate(135deg)}.rpv-core__arrow--rb{bottom:0}.rpv-core__arrow--bl{left:0;top:0;transform:translate(50%,-50%) rotate(225deg)}.rpv-core__arrow--bc{left:50%}.rpv-core__arrow--bc,.rpv-core__arrow--br{top:0;transform:translate(-50%,-50%) rotate(225deg)}.rpv-core__arrow--br{right:0}.rpv-core__arrow--lt{right:0;top:0;transform:translate(50%,50%) rotate(315deg)}.rpv-core__arrow--lc{top:50%}.rpv-core__arrow--lb,.rpv-core__arrow--lc{right:0;transform:translate(50%,-50%) rotate(315deg)}.rpv-core__arrow--lb{bottom:0}.rpv-core__asking-password{background-color:var(--rpv-core__asking-password-background-color);border-radius:.25rem;color:var(--rpv-core__asking-password-color);padding:2rem}.rpv-core__asking-password--rtl{direction:rtl}.rpv-core__asking-password-wrapper{align-items:center;background-color:var(--rpv-core__asking-password-wrapper-background-color);border:1px solid var(--rpv-core__asking-password-wrapper-border-color);display:flex;height:100%;justify-content:center;width:100%}.rpv-core__asking-password-message{margin:.5rem 0}.rpv-core__asking-password-body{align-items:center;display:flex;justify-content:center}.rpv-core__asking-password-input{width:15rem}.rpv-core__asking-password-input--ltr{margin-right:.5rem}.rpv-core__asking-password-input--rtl{margin-left:.5rem}.rpv-core__button{background-color:var(--rpv-core__button-background-color);border:none;border-radius:.25rem;color:var(--rpv-core__button-color);cursor:pointer;height:2rem;padding:0 1rem}.rpv-core__button--rtl{direction:rtl}.rpv-core__canvas-layer{direction:ltr;left:0;overflow:hidden;position:absolute;top:0}.rpv-core__doc-error{align-items:center;background-color:var(--rpv-core__doc-error-background-color);display:flex;height:100%;justify-content:center}.rpv-core__doc-error--rtl{direction:rtl}.rpv-core__doc-error-text{background-color:var(--rpv-core__doc-error-text-background-color);border-radius:.25rem;color:var(--rpv-core__doc-error-text-color);line-height:1.5;max-width:50%;padding:.5rem}.rpv-core__doc-loading{align-items:center;background-color:var(--rpv-core__doc-loading-background-color);display:flex;height:100%;justify-content:center;width:100%}.rpv-core__doc-loading--rtl{direction:rtl}.rpv-core__icon{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1;text-align:center}.rpv-core__icon--rtl{transform:scaleX(-1)}.rpv-core__inner-pages--rtl{direction:rtl}.rpv-core__inner-page{background-color:var(--rpv-core__inner-page-background-color)}.rpv-core__annotation--link a{height:100%;left:0;position:absolute;top:0;width:100%}.rpv-core__annotation--link a:hover{background-color:var(--rpv-core__annotation--link-hover-background-color)}.rpv-core__menu{display:flex;flex-direction:column}.rpv-core__menu--rtl{direction:rtl;text-align:right}.rpv-core__menu-divider{border-bottom:1px solid var(--rpv-core__menu-divider-border-bottom-color);margin:.25rem 0}.rpv-core__menu-item{align-items:center;background-color:transparent;border:none;color:var(--rpv-core__menu-item-color);cursor:pointer;display:flex;justify-content:center;padding:.25rem 0;width:100%}.rpv-core__menu-item:focus{outline:0}.rpv-core__menu-item:focus,.rpv-core__menu-item:hover{background-color:var(--rpv-core__menu-item--hover-background-color)}.rpv-core__menu-item-icon{align-items:center;display:flex}.rpv-core__menu-item-icon--ltr{padding-left:1rem;padding-right:.5rem}.rpv-core__menu-item-icon--rtl{padding-left:.5rem;padding-right:1rem}.rpv-core__menu-item-label{flex-grow:1;flex-shrink:1;white-space:nowrap}.rpv-core__menu-item-label--ltr{padding-right:2rem}.rpv-core__menu-item-label--rtl{padding-left:2rem}.rpv-core__menu-item-check--ltr{padding-right:1rem}.rpv-core__menu-item-check--rtl{padding-left:1rem}.rpv-core__menu-item--disabled{color:var(--rpv-core__menu-item--disabled-color)}.rpv-core__menu-item--disabled:hover{background-color:transparent}.rpv-core__menu-item--ltr{text-align:left}.rpv-core__menu-item--rtl{direction:rtl;text-align:right}.rpv-core__minimal-button{background-color:transparent;border:none;border-radius:.25rem;color:var(--rpv-core__minimal-button-color);cursor:pointer;height:2rem;padding:0 .5rem}.rpv-core__minimal-button:hover{background-color:var(--rpv-core__minimal-button--hover-background-color)}.rpv-core__minimal-button--disabled{color:var(--rpv-core__minimal-button--disabled-color)}.rpv-core__minimal-button--rtl{direction:rtl}.rpv-core__minimal-button--selected{background-color:var(--rpv-core__minimal-button--selected-background-color)}.rpv-core__modal-body{background-color:var(--rpv-core__modal-body-background-color);border:1px solid var(--rpv-core__modal-body-border-color);border-radius:.25rem;margin:1rem;max-width:32rem;overflow:auto}.rpv-core__modal-body--rtl{direction:rtl}.rpv-core__modal-overlay{background-color:var(--rpv-core__modal-overlay-background-color);bottom:0;left:0;position:fixed;right:0;top:0;z-index:9999}.rpv-core__modal-overlay,.rpv-core__page-layer{align-items:center;display:flex;justify-content:center}.rpv-core__page-layer{margin:0 auto;overflow:hidden;position:relative}.rpv-core__page-layer:after{bottom:.25rem;box-shadow:var(--rpv-core__page-layer-box-shadow);content:\\\"\\\";left:.25rem;position:absolute;right:.25rem;top:.25rem}.rpv-core__page-size-calculator{align-items:center;display:flex;height:100%;justify-content:center;width:100%}.rpv-core__popover-body{border:1px solid var(--rpv-core__popover-body-border-color);border-radius:.25rem;color:var(--rpv-core__popover-body-color);left:0;padding:.5rem 0;position:absolute;top:-9999px;z-index:9999}.rpv-core__popover-body,.rpv-core__popover-body-arrow{background-color:var(--rpv-core__popover-body-background-color)}.rpv-core__popover-body--rtl{direction:rtl}.rpv-core__popover-overlay{bottom:0;left:0;position:fixed;right:0;top:0}.rpv-core__annotation-popup-wrapper{background-color:var(--rpv-core__annotation-popup-wrapper-background-color);box-shadow:var(--rpv-core__annotation-popup-wrapper-box-shadow);font-size:.75rem;padding:.25rem;word-break:break-word}.rpv-core__annotation-popup-wrapper--rtl{direction:rtl}.rpv-core__annotation-popup-title{font-weight:600;margin-bottom:.25rem}.rpv-core__annotation-popup-date{font-size:.5rem}.rpv-core__annotation-popup-content{border-top:1px solid var(--rpv-core__annotation-popup-content-border-top-color);max-height:16rem;overflow:auto;padding:.25rem}.rpv-core__primary-button{background-color:var(--rpv-core__primary-button-background-color);border:none;border-radius:.25rem;color:var(--rpv-core__primary-button-color);cursor:pointer;height:2rem;padding:0 1rem}.rpv-core__primary-button--rtl{direction:rtl}.rpv-core__progress-bar{background-color:var(--rpv-core__progress-bar-background-color);border-radius:9999px;padding:.125rem}.rpv-core__progress-bar--rtl{direction:rtl}.rpv-core__progress-bar-progress{align-items:center;background-color:var(--rpv-core__progress-bar-progress-background-color);border-radius:9999px;color:var(--rpv-core__progress-bar-progress-color);display:flex;font-size:.75rem;height:.75rem;justify-content:center}.rpv-core__separator{border-bottom:1px solid var(--rpv-core__separator-border-bottom-color)}.rpv-core__spinner{border-bottom:2px solid var(--rpv-core__spinner-border-transparent-color);border-left:2px solid var(--rpv-core__spinner-border-transparent-color);border-radius:9999px;border-right:2px solid var(--rpv-core__spinner-border-color);border-top:2px solid var(--rpv-core__spinner-border-color)}.rpv-core__spinner--animating{-webkit-animation-duration:.4s;animation-duration:.4s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:rpv-core__spinner-transform;animation-name:rpv-core__spinner-transform;-webkit-animation-timing-function:linear;animation-timing-function:linear}@-webkit-keyframes rpv-core__spinner-transform{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes rpv-core__spinner-transform{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.rpv-core__splitter{background-color:var(--rpv-core__splitter-background-color);cursor:ew-resize;height:100%;width:.25rem}.rpv-core__splitter--resizing,.rpv-core__splitter:hover{background-color:var(--rpv-core__splitter--hover-background-color);cursor:col-resize}.rpv-core__splitter-body--resizing{cursor:col-resize}.rpv-core__splitter-sibling--resizing{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.rpv-core__textbox{background-color:var(--rpv-core__textbox-background-color);border:1px solid var(--rpv-core__textbox-border-color);border-radius:.25rem;box-sizing:border-box;color:var(--rpv-core__textbox-color);height:2rem;padding:0 .5rem;width:100%}.rpv-core__textbox--rtl{direction:rtl}.rpv-core__text-layer{height:100%;left:0;line-height:1;opacity:.2;position:absolute;top:0;width:100%;z-index:1}.rpv-core__text-layer span::-moz-selection{background-color:var(--rpv-core__text-layer-text--selection-background-color);color:var(--rpv-core__text-layer-text--selection-color)}.rpv-core__text-layer span::selection{background-color:var(--rpv-core__text-layer-text--selection-background-color);color:var(--rpv-core__text-layer-text--selection-color)}.rpv-core__text-layer br::-moz-selection{color:transparent}.rpv-core__text-layer br::selection{color:transparent}.rpv-core__text-layer-text{color:transparent;cursor:text;position:absolute;transform-origin:0 0;white-space:pre}.rpv-core__tooltip-body{background-color:var(--rpv-core__tooltip-body-background-color);border-radius:.25rem;color:var(--rpv-core__tooltip-body-color);left:0;max-width:20rem;position:absolute;text-align:center;top:-9999px;z-index:9999}.rpv-core__tooltip-body--rtl{direction:rtl}.rpv-core__tooltip-body-arrow{background-color:var(--rpv-core__tooltip-body-background-color)}.rpv-core__tooltip-body-content{padding:.5rem}.rpv-core__display--block{display:block}.rpv-core__display--hidden{display:none}@media (min-width:640px){.rpv-core__display--hidden-small{display:none}.rpv-core__display--block-small{display:block}}@media (min-width:768px){.rpv-core__display--hidden-medium{display:none}.rpv-core__display--block-medium{display:block}}@media (min-width:1024px){.rpv-core__display--hidden-large{display:none}.rpv-core__display--block-large{display:block}}\", \"\",{\"version\":3,\"sources\":[\"webpack://node_modules/@react-pdf-viewer/core/lib/styles/index.css\"],\"names\":[],\"mappings\":\"AAAA,MAAM,sEAAsE,CAAC,6DAA6D,CAAC,8GAA8G,CAAC,6DAA6D,CAAC,6CAA6C,CAAC,sCAAsC,CAAC,yDAAyD,CAAC,+DAA+D,CAAC,kDAAkD,CAAC,6BAA6B,CAAC,2CAA2C,CAAC,mDAAmD,CAAC,qCAAqC,CAAC,6CAA6C,CAAC,4CAA4C,CAAC,2DAA2D,CAAC,gCAAgC,CAAC,4DAA4D,CAAC,oDAAoD,CAAC,qCAAqC,CAAC,iEAAiE,CAAC,yDAAyD,CAAC,oEAAoE,CAAC,4CAA4C,CAAC,kDAAkD,CAAC,yDAAyD,CAAC,8DAA8D,CAAC,8CAA8C,CAAC,oDAAoD,CAAC,mCAAmC,CAAC,mDAAmD,CAAC,qCAAqC,CAAC,wDAAwD,CAAC,0DAA0D,CAAC,4CAA4C,CAAC,wDAAwD,CAAC,+CAA+C,CAAC,wDAAwD,CAAC,iDAAiD,CAAC,2DAA2D,CAAC,4DAA4D,CAAC,wDAAwD,CAAC,yCAAyC,CAAC,+CAA+C,CAAC,8BAA8B,CAAC,8CAA8C,CAAC,mCAAmC,CAAC,wBAAwB,oDAAoD,CAAC,sCAAsC,CAAC,wDAAwD,CAAC,4DAA4D,CAAC,2CAA2C,CAAC,6BAA6B,CAAC,8CAA8C,CAAC,mDAAmD,CAAC,qCAAqC,CAAC,gDAAgD,CAAC,+CAA+C,CAAC,iDAAiD,CAAC,gCAAgC,CAAC,qDAAqD,CAAC,6CAA6C,CAAC,qCAAqC,CAAC,kDAAkD,CAAC,0DAA0D,CAAC,6DAA6D,CAAC,+CAA+C,CAAC,mDAAmD,CAAC,iDAAiD,CAAC,mCAAmC,CAAC,8CAA8C,CAAC,8CAA8C,CAAC,qCAAqC,CAAC,6CAA6C,CAAC,oDAAoD,CAAC,4CAA4C,CAAC,wCAAwC,CAAC,8BAA8B,CAAC,iDAAiD,CAAC,mCAAmC,CAAC,sBAAsB,iBAAiB,CAAC,4BAA4B,SAAS,CAAC,iBAAiB,2DAA2D,CAAC,qDAAqD,CAAC,0DAA0D,CAAC,oDAAoD,CAAC,WAAW,CAAC,iBAAiB,CAAC,UAAU,CAAC,SAAS,CAAC,qBAAqB,QAAQ,CAAC,MAAM,CAAC,0CAA0C,CAAC,qBAAqB,QAAQ,CAAC,0CAA0C,QAAQ,CAAC,2CAA2C,CAAC,qBAAqB,OAAO,CAAC,qBAAqB,MAAM,CAAC,KAAK,CAAC,4CAA4C,CAAC,qBAAqB,OAAO,CAAC,0CAA0C,MAAM,CAAC,6CAA6C,CAAC,qBAAqB,QAAQ,CAAC,qBAAqB,MAAM,CAAC,KAAK,CAAC,4CAA4C,CAAC,qBAAqB,QAAQ,CAAC,0CAA0C,KAAK,CAAC,6CAA6C,CAAC,qBAAqB,OAAO,CAAC,qBAAqB,OAAO,CAAC,KAAK,CAAC,2CAA2C,CAAC,qBAAqB,OAAO,CAAC,0CAA0C,OAAO,CAAC,4CAA4C,CAAC,qBAAqB,QAAQ,CAAC,2BAA2B,kEAAkE,CAAC,oBAAoB,CAAC,4CAA4C,CAAC,YAAY,CAAC,gCAAgC,aAAa,CAAC,mCAAmC,kBAAkB,CAAC,0EAA0E,CAAC,sEAAsE,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,UAAU,CAAC,mCAAmC,cAAc,CAAC,gCAAgC,kBAAkB,CAAC,YAAY,CAAC,sBAAsB,CAAC,iCAAiC,WAAW,CAAC,sCAAsC,kBAAkB,CAAC,sCAAsC,iBAAiB,CAAC,kBAAkB,yDAAyD,CAAC,WAAW,CAAC,oBAAoB,CAAC,mCAAmC,CAAC,cAAc,CAAC,WAAW,CAAC,cAAc,CAAC,uBAAuB,aAAa,CAAC,wBAAwB,aAAa,CAAC,MAAM,CAAC,eAAe,CAAC,iBAAiB,CAAC,KAAK,CAAC,qBAAqB,kBAAkB,CAAC,4DAA4D,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,0BAA0B,aAAa,CAAC,0BAA0B,iEAAiE,CAAC,oBAAoB,CAAC,2CAA2C,CAAC,eAAe,CAAC,aAAa,CAAC,aAAa,CAAC,uBAAuB,kBAAkB,CAAC,8DAA8D,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,UAAU,CAAC,4BAA4B,aAAa,CAAC,gBAAgB,SAAS,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,cAAc,CAAC,iBAAiB,CAAC,qBAAqB,oBAAoB,CAAC,4BAA4B,aAAa,CAAC,sBAAsB,6DAA6D,CAAC,8BAA8B,WAAW,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,oCAAoC,yEAAyE,CAAC,gBAAgB,YAAY,CAAC,qBAAqB,CAAC,qBAAqB,aAAa,CAAC,gBAAgB,CAAC,wBAAwB,yEAAyE,CAAC,eAAe,CAAC,qBAAqB,kBAAkB,CAAC,4BAA4B,CAAC,WAAW,CAAC,sCAAsC,CAAC,cAAc,CAAC,YAAY,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,UAAU,CAAC,2BAA2B,SAAS,CAAC,sDAAsD,mEAAmE,CAAC,0BAA0B,kBAAkB,CAAC,YAAY,CAAC,+BAA+B,iBAAiB,CAAC,mBAAmB,CAAC,+BAA+B,kBAAkB,CAAC,kBAAkB,CAAC,2BAA2B,WAAW,CAAC,aAAa,CAAC,kBAAkB,CAAC,gCAAgC,kBAAkB,CAAC,gCAAgC,iBAAiB,CAAC,gCAAgC,kBAAkB,CAAC,gCAAgC,iBAAiB,CAAC,+BAA+B,gDAAgD,CAAC,qCAAqC,4BAA4B,CAAC,0BAA0B,eAAe,CAAC,0BAA0B,aAAa,CAAC,gBAAgB,CAAC,0BAA0B,4BAA4B,CAAC,WAAW,CAAC,oBAAoB,CAAC,2CAA2C,CAAC,cAAc,CAAC,WAAW,CAAC,eAAe,CAAC,gCAAgC,wEAAwE,CAAC,oCAAoC,qDAAqD,CAAC,+BAA+B,aAAa,CAAC,oCAAoC,2EAA2E,CAAC,sBAAsB,6DAA6D,CAAC,yDAAyD,CAAC,oBAAoB,CAAC,WAAW,CAAC,eAAe,CAAC,aAAa,CAAC,2BAA2B,aAAa,CAAC,yBAAyB,gEAAgE,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,+CAA+C,kBAAkB,CAAC,YAAY,CAAC,sBAAsB,CAAC,sBAAsB,aAAa,CAAC,eAAe,CAAC,iBAAiB,CAAC,4BAA4B,aAAa,CAAC,iDAAiD,CAAC,UAAU,CAAC,WAAW,CAAC,iBAAiB,CAAC,YAAY,CAAC,UAAU,CAAC,gCAAgC,kBAAkB,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,UAAU,CAAC,wBAAwB,2DAA2D,CAAC,oBAAoB,CAAC,yCAAyC,CAAC,MAAM,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC,sDAAsD,+DAA+D,CAAC,6BAA6B,aAAa,CAAC,2BAA2B,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,oCAAoC,2EAA2E,CAAC,+DAA+D,CAAC,gBAAgB,CAAC,cAAc,CAAC,qBAAqB,CAAC,yCAAyC,aAAa,CAAC,kCAAkC,eAAe,CAAC,oBAAoB,CAAC,iCAAiC,eAAe,CAAC,oCAAoC,+EAA+E,CAAC,gBAAgB,CAAC,aAAa,CAAC,cAAc,CAAC,0BAA0B,iEAAiE,CAAC,WAAW,CAAC,oBAAoB,CAAC,2CAA2C,CAAC,cAAc,CAAC,WAAW,CAAC,cAAc,CAAC,+BAA+B,aAAa,CAAC,wBAAwB,+DAA+D,CAAC,oBAAoB,CAAC,eAAe,CAAC,6BAA6B,aAAa,CAAC,iCAAiC,kBAAkB,CAAC,wEAAwE,CAAC,oBAAoB,CAAC,kDAAkD,CAAC,YAAY,CAAC,gBAAgB,CAAC,aAAa,CAAC,sBAAsB,CAAC,qBAAqB,sEAAsE,CAAC,mBAAmB,yEAAyE,CAAC,uEAAuE,CAAC,oBAAoB,CAAC,4DAA4D,CAAC,0DAA0D,CAAC,8BAA8B,8BAAsB,CAAtB,sBAAsB,CAAC,0CAAkC,CAAlC,kCAAkC,CAAC,kDAA0C,CAA1C,0CAA0C,CAAC,wCAA+B,CAA/B,gCAAgC,CAAC,+CAAuC,GAAG,sBAAsB,CAAC,GAAG,uBAAuB,CAAC,CAA5F,uCAAuC,GAAG,sBAAsB,CAAC,GAAG,uBAAuB,CAAC,CAAC,oBAAoB,2DAA2D,CAAC,gBAAgB,CAAC,WAAW,CAAC,YAAY,CAAC,wDAAwD,kEAAkE,CAAC,iBAAiB,CAAC,mCAAmC,iBAAiB,CAAC,sCAAsC,mBAAmB,CAAC,wBAAe,CAAf,qBAAe,CAAf,oBAAe,CAAf,gBAAgB,CAAC,mBAAmB,0DAA0D,CAAC,sDAAsD,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,oCAAoC,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,wBAAwB,aAAa,CAAC,sBAAsB,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,2CAAsC,6EAA6E,CAAC,uDAAuD,CAA3K,sCAAsC,6EAA6E,CAAC,uDAAuD,CAAC,yCAAoC,iBAAiB,CAArD,oCAAoC,iBAAiB,CAAC,2BAA2B,iBAAiB,CAAC,WAAW,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,eAAe,CAAC,wBAAwB,+DAA+D,CAAC,oBAAoB,CAAC,yCAAyC,CAAC,MAAM,CAAC,eAAe,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC,6BAA6B,aAAa,CAAC,8BAA8B,+DAA+D,CAAC,gCAAgC,aAAa,CAAC,0BAA0B,aAAa,CAAC,2BAA2B,YAAY,CAAC,yBAAyB,iCAAiC,YAAY,CAAC,gCAAgC,aAAa,CAAC,CAAC,yBAAyB,kCAAkC,YAAY,CAAC,iCAAiC,aAAa,CAAC,CAAC,0BAA0B,iCAAiC,YAAY,CAAC,gCAAgC,aAAa,CAAC\",\"sourcesContent\":[\":root{--rpv-core__annotation--link-hover-background-color:rgba(255,255,0,.2);--rpv-core__annotation-popup-wrapper-background-color:#faf089;--rpv-core__annotation-popup-wrapper-box-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -2px rgba(0,0,0,.05);--rpv-core__annotation-popup-content-border-top-color:#1a202c;--rpv-core__arrow-border-color:rgba(0,0,0,.3);--rpv-core__asking-password-color:#000;--rpv-core__asking-password-wrapper-background-color:#fff;--rpv-core__asking-password-wrapper-border-color:rgba(0,0,0,.3);--rpv-core__button-background-color:rgba(0,0,0,.3);--rpv-core__button-color:#000;--rpv-core__doc-error-background-color:#fff;--rpv-core__doc-error-text-background-color:#c02424;--rpv-core__doc-error-text-color:#fff;--rpv-core__doc-loading-background-color:#fff;--rpv-core__inner-page-background-color:#fff;--rpv-core__menu-divider-border-bottom-color:rgba(0,0,0,.3);--rpv-core__menu-item-color:#000;--rpv-core__menu-item--hover-background-color:rgba(0,0,0,.1);--rpv-core__menu-item--disabled-color:rgba(0,0,0,.3);--rpv-core__minimal-button-color:#000;--rpv-core__minimal-button--hover-background-color:rgba(0,0,0,.1);--rpv-core__minimal-button--disabled-color:rgba(0,0,0,.3);--rpv-core__minimal-button--selected-background-color:rgba(0,0,0,.1);--rpv-core__modal-body-background-color:#fff;--rpv-core__modal-body-border-color:rgba(0,0,0,.3);--rpv-core__modal-overlay-background-color:rgba(0,0,0,.5);--rpv-core__page-layer-box-shadow:2px 2px 8px 0 rgba(0,0,0,.2);--rpv-core__popover-body-background-color:#fff;--rpv-core__popover-body-border-color:rgba(0,0,0,.3);--rpv-core__popover-body-color:#000;--rpv-core__primary-button-background-color:#2566e8;--rpv-core__primary-button-color:#fff;--rpv-core__progress-bar-background-color:rgba(0,0,0,.1);--rpv-core__progress-bar-progress-background-color:#2566e8;--rpv-core__progress-bar-progress-color:#fff;--rpv-core__separator-border-bottom-color:rgba(0,0,0,.3);--rpv-core__spinner-border-color:rgba(0,0,0,.4);--rpv-core__spinner-border-transparent-color:transparent;--rpv-core__splitter-background-color:transparent;--rpv-core__splitter--hover-background-color:rgba(0,0,0,.2);--rpv-core__text-layer-text--selection-background-color:#00f;--rpv-core__text-layer-text--selection-color:transparent;--rpv-core__textbox-background-color:#fff;--rpv-core__textbox-border-color:rgba(0,0,0,.2);--rpv-core__textbox-color:#000;--rpv-core__tooltip-body-background-color:#000;--rpv-core__tooltip-body-color:#fff}.rpv-core__viewer--dark{--rpv-core__asking-password-background-color:#363636;--rpv-core__asking-password-color:#fff;--rpv-core__asking-password-wrapper-border-color:#191919;--rpv-core__asking-password-wrapper-background-color:#191919;--rpv-core__button-background-color:#171717;--rpv-core__button-color:#fff;--rpv-core__doc-error-background-color:#191919;--rpv-core__doc-error-text-background-color:#c02323;--rpv-core__doc-error-text-color:#fff;--rpv-core__doc-loading-background-color:#191919;--rpv-core__inner-page-background-color:#1a1a1a;--rpv-core__menu-divider-border-bottom-color:#000;--rpv-core__menu-item-color:#fff;--rpv-core__menu-item--hover-background-color:#2566e8;--rpv-core__menu-item--disabled-color:#5e5e5e;--rpv-core__minimal-button-color:#fff;--rpv-core__minimal-button--disabled-color:#5e5e5e;--rpv-core__minimal-button--hover-background-color:#191919;--rpv-core__minimal-button--selected-background-color:#1657bb;--rpv-core__modal-body-background-color:#363636;--rpv-core__primary-button-background-color:#2566e8;--rpv-core__popover-body-background-color:#363636;--rpv-core__popover-body-color:#fff;--rpv-core__progress-bar-background-color:#000;--rpv-core__separator-border-bottom-color:#000;--rpv-core__spinner-border-color:#fff;--rpv-core__splitter-background-color:#1a1a1a;--rpv-core__splitter--hover-background-color:#2566e8;--rpv-core__textbox-background-color:#121212;--rpv-core__textbox-border-color:#121212;--rpv-core__textbox-color:#fff;--rpv-core__tooltip-body-background-color:#414141;--rpv-core__tooltip-body-color:#fff}.rpv-core__annotation{position:absolute}.rpv-core__annotation-layer{z-index:1}.rpv-core__arrow{border-bottom:1px solid var(--rpv-core__arrow-border-color);border-left-color:var(--rpv-core__arrow-border-color);border-right:1px solid var(--rpv-core__arrow-border-color);border-top-color:var(--rpv-core__arrow-border-color);height:10px;position:absolute;width:10px;z-index:0}.rpv-core__arrow--tl{bottom:0;left:0;transform:translate(50%,50%) rotate(45deg)}.rpv-core__arrow--tc{left:50%}.rpv-core__arrow--tc,.rpv-core__arrow--tr{bottom:0;transform:translate(-50%,50%) rotate(45deg)}.rpv-core__arrow--tr{right:0}.rpv-core__arrow--rt{left:0;top:0;transform:translate(-50%,50%) rotate(135deg)}.rpv-core__arrow--rc{top:50%}.rpv-core__arrow--rb,.rpv-core__arrow--rc{left:0;transform:translate(-50%,-50%) rotate(135deg)}.rpv-core__arrow--rb{bottom:0}.rpv-core__arrow--bl{left:0;top:0;transform:translate(50%,-50%) rotate(225deg)}.rpv-core__arrow--bc{left:50%}.rpv-core__arrow--bc,.rpv-core__arrow--br{top:0;transform:translate(-50%,-50%) rotate(225deg)}.rpv-core__arrow--br{right:0}.rpv-core__arrow--lt{right:0;top:0;transform:translate(50%,50%) rotate(315deg)}.rpv-core__arrow--lc{top:50%}.rpv-core__arrow--lb,.rpv-core__arrow--lc{right:0;transform:translate(50%,-50%) rotate(315deg)}.rpv-core__arrow--lb{bottom:0}.rpv-core__asking-password{background-color:var(--rpv-core__asking-password-background-color);border-radius:.25rem;color:var(--rpv-core__asking-password-color);padding:2rem}.rpv-core__asking-password--rtl{direction:rtl}.rpv-core__asking-password-wrapper{align-items:center;background-color:var(--rpv-core__asking-password-wrapper-background-color);border:1px solid var(--rpv-core__asking-password-wrapper-border-color);display:flex;height:100%;justify-content:center;width:100%}.rpv-core__asking-password-message{margin:.5rem 0}.rpv-core__asking-password-body{align-items:center;display:flex;justify-content:center}.rpv-core__asking-password-input{width:15rem}.rpv-core__asking-password-input--ltr{margin-right:.5rem}.rpv-core__asking-password-input--rtl{margin-left:.5rem}.rpv-core__button{background-color:var(--rpv-core__button-background-color);border:none;border-radius:.25rem;color:var(--rpv-core__button-color);cursor:pointer;height:2rem;padding:0 1rem}.rpv-core__button--rtl{direction:rtl}.rpv-core__canvas-layer{direction:ltr;left:0;overflow:hidden;position:absolute;top:0}.rpv-core__doc-error{align-items:center;background-color:var(--rpv-core__doc-error-background-color);display:flex;height:100%;justify-content:center}.rpv-core__doc-error--rtl{direction:rtl}.rpv-core__doc-error-text{background-color:var(--rpv-core__doc-error-text-background-color);border-radius:.25rem;color:var(--rpv-core__doc-error-text-color);line-height:1.5;max-width:50%;padding:.5rem}.rpv-core__doc-loading{align-items:center;background-color:var(--rpv-core__doc-loading-background-color);display:flex;height:100%;justify-content:center;width:100%}.rpv-core__doc-loading--rtl{direction:rtl}.rpv-core__icon{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1;text-align:center}.rpv-core__icon--rtl{transform:scaleX(-1)}.rpv-core__inner-pages--rtl{direction:rtl}.rpv-core__inner-page{background-color:var(--rpv-core__inner-page-background-color)}.rpv-core__annotation--link a{height:100%;left:0;position:absolute;top:0;width:100%}.rpv-core__annotation--link a:hover{background-color:var(--rpv-core__annotation--link-hover-background-color)}.rpv-core__menu{display:flex;flex-direction:column}.rpv-core__menu--rtl{direction:rtl;text-align:right}.rpv-core__menu-divider{border-bottom:1px solid var(--rpv-core__menu-divider-border-bottom-color);margin:.25rem 0}.rpv-core__menu-item{align-items:center;background-color:transparent;border:none;color:var(--rpv-core__menu-item-color);cursor:pointer;display:flex;justify-content:center;padding:.25rem 0;width:100%}.rpv-core__menu-item:focus{outline:0}.rpv-core__menu-item:focus,.rpv-core__menu-item:hover{background-color:var(--rpv-core__menu-item--hover-background-color)}.rpv-core__menu-item-icon{align-items:center;display:flex}.rpv-core__menu-item-icon--ltr{padding-left:1rem;padding-right:.5rem}.rpv-core__menu-item-icon--rtl{padding-left:.5rem;padding-right:1rem}.rpv-core__menu-item-label{flex-grow:1;flex-shrink:1;white-space:nowrap}.rpv-core__menu-item-label--ltr{padding-right:2rem}.rpv-core__menu-item-label--rtl{padding-left:2rem}.rpv-core__menu-item-check--ltr{padding-right:1rem}.rpv-core__menu-item-check--rtl{padding-left:1rem}.rpv-core__menu-item--disabled{color:var(--rpv-core__menu-item--disabled-color)}.rpv-core__menu-item--disabled:hover{background-color:transparent}.rpv-core__menu-item--ltr{text-align:left}.rpv-core__menu-item--rtl{direction:rtl;text-align:right}.rpv-core__minimal-button{background-color:transparent;border:none;border-radius:.25rem;color:var(--rpv-core__minimal-button-color);cursor:pointer;height:2rem;padding:0 .5rem}.rpv-core__minimal-button:hover{background-color:var(--rpv-core__minimal-button--hover-background-color)}.rpv-core__minimal-button--disabled{color:var(--rpv-core__minimal-button--disabled-color)}.rpv-core__minimal-button--rtl{direction:rtl}.rpv-core__minimal-button--selected{background-color:var(--rpv-core__minimal-button--selected-background-color)}.rpv-core__modal-body{background-color:var(--rpv-core__modal-body-background-color);border:1px solid var(--rpv-core__modal-body-border-color);border-radius:.25rem;margin:1rem;max-width:32rem;overflow:auto}.rpv-core__modal-body--rtl{direction:rtl}.rpv-core__modal-overlay{background-color:var(--rpv-core__modal-overlay-background-color);bottom:0;left:0;position:fixed;right:0;top:0;z-index:9999}.rpv-core__modal-overlay,.rpv-core__page-layer{align-items:center;display:flex;justify-content:center}.rpv-core__page-layer{margin:0 auto;overflow:hidden;position:relative}.rpv-core__page-layer:after{bottom:.25rem;box-shadow:var(--rpv-core__page-layer-box-shadow);content:\\\"\\\";left:.25rem;position:absolute;right:.25rem;top:.25rem}.rpv-core__page-size-calculator{align-items:center;display:flex;height:100%;justify-content:center;width:100%}.rpv-core__popover-body{border:1px solid var(--rpv-core__popover-body-border-color);border-radius:.25rem;color:var(--rpv-core__popover-body-color);left:0;padding:.5rem 0;position:absolute;top:-9999px;z-index:9999}.rpv-core__popover-body,.rpv-core__popover-body-arrow{background-color:var(--rpv-core__popover-body-background-color)}.rpv-core__popover-body--rtl{direction:rtl}.rpv-core__popover-overlay{bottom:0;left:0;position:fixed;right:0;top:0}.rpv-core__annotation-popup-wrapper{background-color:var(--rpv-core__annotation-popup-wrapper-background-color);box-shadow:var(--rpv-core__annotation-popup-wrapper-box-shadow);font-size:.75rem;padding:.25rem;word-break:break-word}.rpv-core__annotation-popup-wrapper--rtl{direction:rtl}.rpv-core__annotation-popup-title{font-weight:600;margin-bottom:.25rem}.rpv-core__annotation-popup-date{font-size:.5rem}.rpv-core__annotation-popup-content{border-top:1px solid var(--rpv-core__annotation-popup-content-border-top-color);max-height:16rem;overflow:auto;padding:.25rem}.rpv-core__primary-button{background-color:var(--rpv-core__primary-button-background-color);border:none;border-radius:.25rem;color:var(--rpv-core__primary-button-color);cursor:pointer;height:2rem;padding:0 1rem}.rpv-core__primary-button--rtl{direction:rtl}.rpv-core__progress-bar{background-color:var(--rpv-core__progress-bar-background-color);border-radius:9999px;padding:.125rem}.rpv-core__progress-bar--rtl{direction:rtl}.rpv-core__progress-bar-progress{align-items:center;background-color:var(--rpv-core__progress-bar-progress-background-color);border-radius:9999px;color:var(--rpv-core__progress-bar-progress-color);display:flex;font-size:.75rem;height:.75rem;justify-content:center}.rpv-core__separator{border-bottom:1px solid var(--rpv-core__separator-border-bottom-color)}.rpv-core__spinner{border-bottom:2px solid var(--rpv-core__spinner-border-transparent-color);border-left:2px solid var(--rpv-core__spinner-border-transparent-color);border-radius:9999px;border-right:2px solid var(--rpv-core__spinner-border-color);border-top:2px solid var(--rpv-core__spinner-border-color)}.rpv-core__spinner--animating{animation-duration:.4s;animation-iteration-count:infinite;animation-name:rpv-core__spinner-transform;animation-timing-function:linear}@keyframes rpv-core__spinner-transform{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.rpv-core__splitter{background-color:var(--rpv-core__splitter-background-color);cursor:ew-resize;height:100%;width:.25rem}.rpv-core__splitter--resizing,.rpv-core__splitter:hover{background-color:var(--rpv-core__splitter--hover-background-color);cursor:col-resize}.rpv-core__splitter-body--resizing{cursor:col-resize}.rpv-core__splitter-sibling--resizing{pointer-events:none;user-select:none}.rpv-core__textbox{background-color:var(--rpv-core__textbox-background-color);border:1px solid var(--rpv-core__textbox-border-color);border-radius:.25rem;box-sizing:border-box;color:var(--rpv-core__textbox-color);height:2rem;padding:0 .5rem;width:100%}.rpv-core__textbox--rtl{direction:rtl}.rpv-core__text-layer{height:100%;left:0;line-height:1;opacity:.2;position:absolute;top:0;width:100%;z-index:1}.rpv-core__text-layer span::selection{background-color:var(--rpv-core__text-layer-text--selection-background-color);color:var(--rpv-core__text-layer-text--selection-color)}.rpv-core__text-layer br::selection{color:transparent}.rpv-core__text-layer-text{color:transparent;cursor:text;position:absolute;transform-origin:0 0;white-space:pre}.rpv-core__tooltip-body{background-color:var(--rpv-core__tooltip-body-background-color);border-radius:.25rem;color:var(--rpv-core__tooltip-body-color);left:0;max-width:20rem;position:absolute;text-align:center;top:-9999px;z-index:9999}.rpv-core__tooltip-body--rtl{direction:rtl}.rpv-core__tooltip-body-arrow{background-color:var(--rpv-core__tooltip-body-background-color)}.rpv-core__tooltip-body-content{padding:.5rem}.rpv-core__display--block{display:block}.rpv-core__display--hidden{display:none}@media (min-width:640px){.rpv-core__display--hidden-small{display:none}.rpv-core__display--block-small{display:block}}@media (min-width:768px){.rpv-core__display--hidden-medium{display:none}.rpv-core__display--block-medium{display:block}}@media (min-width:1024px){.rpv-core__display--hidden-large{display:none}.rpv-core__display--block-large{display:block}}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/@react-pdf-viewer/core/lib/styles/index.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/@react-pdf-viewer/default-layout/lib/styles/index.css":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/@react-pdf-viewer/default-layout/lib/styles/index.css ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--rpv-attachment__item--hover-background-color:rgba(0,0,0,.1);--rpv-attachment__item-color:#000}.rpv-core__viewer--dark{--rpv-attachment__item--hover-background-color:#2566e8;--rpv-attachment__item-color:#fff}.rpv-attachment__empty{height:100%;overflow:auto;padding:.5rem 0;text-align:center;width:100%}.rpv-attachment__empty--rtl{direction:rtl}.rpv-attachment__list{display:flex;flex-direction:column;height:100%;overflow:auto;padding:.5rem 0;width:100%}.rpv-attachment__list--rtl{direction:rtl}.rpv-attachment__item{align-items:center;background-color:transparent;border:none;color:var(--rpv-attachment__item-color);cursor:pointer;display:flex;padding:.5rem;text-align:left;width:100%}.rpv-attachment__item:focus{outline:0}.rpv-attachment__item:focus,.rpv-attachment__item:hover{background-color:var(--rpv-attachment__item--hover-background-color)}.rpv-attachment__loader{align-items:center;display:flex;height:100%;justify-content:center;width:100%}:root{--rpv-bookmark__item--hover-background-color:rgba(0,0,0,.1);--rpv-bookmark__item-color:#000}.rpv-core__viewer--dark{--rpv-bookmark__item--hover-background-color:#2566e8;--rpv-bookmark__item-color:#fff}.rpv-bookmark__item{align-items:center;color:var(--rpv-bookmark__item-color);cursor:pointer;display:flex;padding-bottom:.25rem;padding-right:.25rem;padding-top:.25rem}.rpv-bookmark__item:focus{outline:0}.rpv-bookmark__item:focus,.rpv-bookmark__item:hover{background-color:var(--rpv-bookmark__item--hover-background-color)}.rpv-bookmark__toggle{align-items:center;display:flex;height:1rem;margin-right:.25rem;width:1rem}.rpv-bookmark__title{flex-grow:1;flex-shrink:1;text-decoration:none}.rpv-bookmark__list{list-style-type:none;margin:0;overflow:auto;padding:0}.rpv-bookmark__loader{align-items:center;display:flex;height:100%;justify-content:center;width:100%}.rpv-bookmark__empty{height:100%;overflow:auto;padding:.5rem 0;text-align:center;width:100%}.rpv-bookmark__empty--rtl{direction:rtl}.rpv-bookmark__container{height:100%;overflow:auto;padding:.5rem 0;width:100%}.rpv-bookmark__container--rtl{direction:rtl}:root{--rpv-core__annotation--link-hover-background-color:rgba(255,255,0,.2);--rpv-core__annotation-popup-wrapper-background-color:#faf089;--rpv-core__annotation-popup-wrapper-box-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -2px rgba(0,0,0,.05);--rpv-core__annotation-popup-content-border-top-color:#1a202c;--rpv-core__arrow-border-color:rgba(0,0,0,.3);--rpv-core__asking-password-color:#000;--rpv-core__asking-password-wrapper-background-color:#fff;--rpv-core__asking-password-wrapper-border-color:rgba(0,0,0,.3);--rpv-core__button-background-color:rgba(0,0,0,.3);--rpv-core__button-color:#000;--rpv-core__doc-error-background-color:#fff;--rpv-core__doc-error-text-background-color:#c02424;--rpv-core__doc-error-text-color:#fff;--rpv-core__doc-loading-background-color:#fff;--rpv-core__inner-page-background-color:#fff;--rpv-core__menu-divider-border-bottom-color:rgba(0,0,0,.3);--rpv-core__menu-item-color:#000;--rpv-core__menu-item--hover-background-color:rgba(0,0,0,.1);--rpv-core__menu-item--disabled-color:rgba(0,0,0,.3);--rpv-core__minimal-button-color:#000;--rpv-core__minimal-button--hover-background-color:rgba(0,0,0,.1);--rpv-core__minimal-button--disabled-color:rgba(0,0,0,.3);--rpv-core__minimal-button--selected-background-color:rgba(0,0,0,.1);--rpv-core__modal-body-background-color:#fff;--rpv-core__modal-body-border-color:rgba(0,0,0,.3);--rpv-core__modal-overlay-background-color:rgba(0,0,0,.5);--rpv-core__page-layer-box-shadow:2px 2px 8px 0 rgba(0,0,0,.2);--rpv-core__popover-body-background-color:#fff;--rpv-core__popover-body-border-color:rgba(0,0,0,.3);--rpv-core__popover-body-color:#000;--rpv-core__primary-button-background-color:#2566e8;--rpv-core__primary-button-color:#fff;--rpv-core__progress-bar-background-color:rgba(0,0,0,.1);--rpv-core__progress-bar-progress-background-color:#2566e8;--rpv-core__progress-bar-progress-color:#fff;--rpv-core__separator-border-bottom-color:rgba(0,0,0,.3);--rpv-core__spinner-border-color:rgba(0,0,0,.4);--rpv-core__spinner-border-transparent-color:transparent;--rpv-core__splitter-background-color:transparent;--rpv-core__splitter--hover-background-color:rgba(0,0,0,.2);--rpv-core__text-layer-text--selection-background-color:#00f;--rpv-core__text-layer-text--selection-color:transparent;--rpv-core__textbox-background-color:#fff;--rpv-core__textbox-border-color:rgba(0,0,0,.2);--rpv-core__textbox-color:#000;--rpv-core__tooltip-body-background-color:#000;--rpv-core__tooltip-body-color:#fff}.rpv-core__viewer--dark{--rpv-core__asking-password-background-color:#363636;--rpv-core__asking-password-color:#fff;--rpv-core__asking-password-wrapper-border-color:#191919;--rpv-core__asking-password-wrapper-background-color:#191919;--rpv-core__button-background-color:#171717;--rpv-core__button-color:#fff;--rpv-core__doc-error-background-color:#191919;--rpv-core__doc-error-text-background-color:#c02323;--rpv-core__doc-error-text-color:#fff;--rpv-core__doc-loading-background-color:#191919;--rpv-core__inner-page-background-color:#1a1a1a;--rpv-core__menu-divider-border-bottom-color:#000;--rpv-core__menu-item-color:#fff;--rpv-core__menu-item--hover-background-color:#2566e8;--rpv-core__menu-item--disabled-color:#5e5e5e;--rpv-core__minimal-button-color:#fff;--rpv-core__minimal-button--disabled-color:#5e5e5e;--rpv-core__minimal-button--hover-background-color:#191919;--rpv-core__minimal-button--selected-background-color:#1657bb;--rpv-core__modal-body-background-color:#363636;--rpv-core__primary-button-background-color:#2566e8;--rpv-core__popover-body-background-color:#363636;--rpv-core__popover-body-color:#fff;--rpv-core__progress-bar-background-color:#000;--rpv-core__separator-border-bottom-color:#000;--rpv-core__spinner-border-color:#fff;--rpv-core__splitter-background-color:#1a1a1a;--rpv-core__splitter--hover-background-color:#2566e8;--rpv-core__textbox-background-color:#121212;--rpv-core__textbox-border-color:#121212;--rpv-core__textbox-color:#fff;--rpv-core__tooltip-body-background-color:#414141;--rpv-core__tooltip-body-color:#fff}.rpv-core__annotation{position:absolute}.rpv-core__annotation-layer{z-index:1}.rpv-core__arrow{border-bottom:1px solid var(--rpv-core__arrow-border-color);border-left-color:var(--rpv-core__arrow-border-color);border-right:1px solid var(--rpv-core__arrow-border-color);border-top-color:var(--rpv-core__arrow-border-color);height:10px;position:absolute;width:10px;z-index:0}.rpv-core__arrow--tl{bottom:0;left:0;transform:translate(50%,50%) rotate(45deg)}.rpv-core__arrow--tc{left:50%}.rpv-core__arrow--tc,.rpv-core__arrow--tr{bottom:0;transform:translate(-50%,50%) rotate(45deg)}.rpv-core__arrow--tr{right:0}.rpv-core__arrow--rt{left:0;top:0;transform:translate(-50%,50%) rotate(135deg)}.rpv-core__arrow--rc{top:50%}.rpv-core__arrow--rb,.rpv-core__arrow--rc{left:0;transform:translate(-50%,-50%) rotate(135deg)}.rpv-core__arrow--rb{bottom:0}.rpv-core__arrow--bl{left:0;top:0;transform:translate(50%,-50%) rotate(225deg)}.rpv-core__arrow--bc{left:50%}.rpv-core__arrow--bc,.rpv-core__arrow--br{top:0;transform:translate(-50%,-50%) rotate(225deg)}.rpv-core__arrow--br{right:0}.rpv-core__arrow--lt{right:0;top:0;transform:translate(50%,50%) rotate(315deg)}.rpv-core__arrow--lc{top:50%}.rpv-core__arrow--lb,.rpv-core__arrow--lc{right:0;transform:translate(50%,-50%) rotate(315deg)}.rpv-core__arrow--lb{bottom:0}.rpv-core__asking-password{background-color:var(--rpv-core__asking-password-background-color);border-radius:.25rem;color:var(--rpv-core__asking-password-color);padding:2rem}.rpv-core__asking-password--rtl{direction:rtl}.rpv-core__asking-password-wrapper{align-items:center;background-color:var(--rpv-core__asking-password-wrapper-background-color);border:1px solid var(--rpv-core__asking-password-wrapper-border-color);display:flex;height:100%;justify-content:center;width:100%}.rpv-core__asking-password-message{margin:.5rem 0}.rpv-core__asking-password-body{align-items:center;display:flex;justify-content:center}.rpv-core__asking-password-input{width:15rem}.rpv-core__asking-password-input--ltr{margin-right:.5rem}.rpv-core__asking-password-input--rtl{margin-left:.5rem}.rpv-core__button{background-color:var(--rpv-core__button-background-color);border:none;border-radius:.25rem;color:var(--rpv-core__button-color);cursor:pointer;height:2rem;padding:0 1rem}.rpv-core__button--rtl{direction:rtl}.rpv-core__canvas-layer{direction:ltr;left:0;overflow:hidden;position:absolute;top:0}.rpv-core__doc-error{align-items:center;background-color:var(--rpv-core__doc-error-background-color);display:flex;height:100%;justify-content:center}.rpv-core__doc-error--rtl{direction:rtl}.rpv-core__doc-error-text{background-color:var(--rpv-core__doc-error-text-background-color);border-radius:.25rem;color:var(--rpv-core__doc-error-text-color);line-height:1.5;max-width:50%;padding:.5rem}.rpv-core__doc-loading{align-items:center;background-color:var(--rpv-core__doc-loading-background-color);display:flex;height:100%;justify-content:center;width:100%}.rpv-core__doc-loading--rtl{direction:rtl}.rpv-core__icon{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1;text-align:center}.rpv-core__icon--rtl{transform:scaleX(-1)}.rpv-core__inner-pages--rtl{direction:rtl}.rpv-core__inner-page{background-color:var(--rpv-core__inner-page-background-color)}.rpv-core__annotation--link a{height:100%;left:0;position:absolute;top:0;width:100%}.rpv-core__annotation--link a:hover{background-color:var(--rpv-core__annotation--link-hover-background-color)}.rpv-core__menu{display:flex;flex-direction:column}.rpv-core__menu--rtl{direction:rtl;text-align:right}.rpv-core__menu-divider{border-bottom:1px solid var(--rpv-core__menu-divider-border-bottom-color);margin:.25rem 0}.rpv-core__menu-item{align-items:center;background-color:transparent;border:none;color:var(--rpv-core__menu-item-color);cursor:pointer;display:flex;justify-content:center;padding:.25rem 0;width:100%}.rpv-core__menu-item:focus{outline:0}.rpv-core__menu-item:focus,.rpv-core__menu-item:hover{background-color:var(--rpv-core__menu-item--hover-background-color)}.rpv-core__menu-item-icon{align-items:center;display:flex}.rpv-core__menu-item-icon--ltr{padding-left:1rem;padding-right:.5rem}.rpv-core__menu-item-icon--rtl{padding-left:.5rem;padding-right:1rem}.rpv-core__menu-item-label{flex-grow:1;flex-shrink:1;white-space:nowrap}.rpv-core__menu-item-label--ltr{padding-right:2rem}.rpv-core__menu-item-label--rtl{padding-left:2rem}.rpv-core__menu-item-check--ltr{padding-right:1rem}.rpv-core__menu-item-check--rtl{padding-left:1rem}.rpv-core__menu-item--disabled{color:var(--rpv-core__menu-item--disabled-color)}.rpv-core__menu-item--disabled:hover{background-color:transparent}.rpv-core__menu-item--ltr{text-align:left}.rpv-core__menu-item--rtl{direction:rtl;text-align:right}.rpv-core__minimal-button{background-color:transparent;border:none;border-radius:.25rem;color:var(--rpv-core__minimal-button-color);cursor:pointer;height:2rem;padding:0 .5rem}.rpv-core__minimal-button:hover{background-color:var(--rpv-core__minimal-button--hover-background-color)}.rpv-core__minimal-button--disabled{color:var(--rpv-core__minimal-button--disabled-color)}.rpv-core__minimal-button--rtl{direction:rtl}.rpv-core__minimal-button--selected{background-color:var(--rpv-core__minimal-button--selected-background-color)}.rpv-core__modal-body{background-color:var(--rpv-core__modal-body-background-color);border:1px solid var(--rpv-core__modal-body-border-color);border-radius:.25rem;margin:1rem;max-width:32rem;overflow:auto}.rpv-core__modal-body--rtl{direction:rtl}.rpv-core__modal-overlay{background-color:var(--rpv-core__modal-overlay-background-color);bottom:0;left:0;position:fixed;right:0;top:0;z-index:9999}.rpv-core__modal-overlay,.rpv-core__page-layer{align-items:center;display:flex;justify-content:center}.rpv-core__page-layer{margin:0 auto;overflow:hidden;position:relative}.rpv-core__page-layer:after{bottom:.25rem;box-shadow:var(--rpv-core__page-layer-box-shadow);content:\\\"\\\";left:.25rem;position:absolute;right:.25rem;top:.25rem}.rpv-core__page-size-calculator{align-items:center;display:flex;height:100%;justify-content:center;width:100%}.rpv-core__popover-body{border:1px solid var(--rpv-core__popover-body-border-color);border-radius:.25rem;color:var(--rpv-core__popover-body-color);left:0;padding:.5rem 0;position:absolute;top:-9999px;z-index:9999}.rpv-core__popover-body,.rpv-core__popover-body-arrow{background-color:var(--rpv-core__popover-body-background-color)}.rpv-core__popover-body--rtl{direction:rtl}.rpv-core__popover-overlay{bottom:0;left:0;position:fixed;right:0;top:0}.rpv-core__annotation-popup-wrapper{background-color:var(--rpv-core__annotation-popup-wrapper-background-color);box-shadow:var(--rpv-core__annotation-popup-wrapper-box-shadow);font-size:.75rem;padding:.25rem;word-break:break-word}.rpv-core__annotation-popup-wrapper--rtl{direction:rtl}.rpv-core__annotation-popup-title{font-weight:600;margin-bottom:.25rem}.rpv-core__annotation-popup-date{font-size:.5rem}.rpv-core__annotation-popup-content{border-top:1px solid var(--rpv-core__annotation-popup-content-border-top-color);max-height:16rem;overflow:auto;padding:.25rem}.rpv-core__primary-button{background-color:var(--rpv-core__primary-button-background-color);border:none;border-radius:.25rem;color:var(--rpv-core__primary-button-color);cursor:pointer;height:2rem;padding:0 1rem}.rpv-core__primary-button--rtl{direction:rtl}.rpv-core__progress-bar{background-color:var(--rpv-core__progress-bar-background-color);border-radius:9999px;padding:.125rem}.rpv-core__progress-bar--rtl{direction:rtl}.rpv-core__progress-bar-progress{align-items:center;background-color:var(--rpv-core__progress-bar-progress-background-color);border-radius:9999px;color:var(--rpv-core__progress-bar-progress-color);display:flex;font-size:.75rem;height:.75rem;justify-content:center}.rpv-core__separator{border-bottom:1px solid var(--rpv-core__separator-border-bottom-color)}.rpv-core__spinner{border-bottom:2px solid var(--rpv-core__spinner-border-transparent-color);border-left:2px solid var(--rpv-core__spinner-border-transparent-color);border-radius:9999px;border-right:2px solid var(--rpv-core__spinner-border-color);border-top:2px solid var(--rpv-core__spinner-border-color)}.rpv-core__spinner--animating{-webkit-animation-duration:.4s;animation-duration:.4s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:rpv-core__spinner-transform;animation-name:rpv-core__spinner-transform;-webkit-animation-timing-function:linear;animation-timing-function:linear}@-webkit-keyframes rpv-core__spinner-transform{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes rpv-core__spinner-transform{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.rpv-core__splitter{background-color:var(--rpv-core__splitter-background-color);cursor:ew-resize;height:100%;width:.25rem}.rpv-core__splitter--resizing,.rpv-core__splitter:hover{background-color:var(--rpv-core__splitter--hover-background-color);cursor:col-resize}.rpv-core__splitter-body--resizing{cursor:col-resize}.rpv-core__splitter-sibling--resizing{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.rpv-core__textbox{background-color:var(--rpv-core__textbox-background-color);border:1px solid var(--rpv-core__textbox-border-color);border-radius:.25rem;box-sizing:border-box;color:var(--rpv-core__textbox-color);height:2rem;padding:0 .5rem;width:100%}.rpv-core__textbox--rtl{direction:rtl}.rpv-core__text-layer{height:100%;left:0;line-height:1;opacity:.2;position:absolute;top:0;width:100%;z-index:1}.rpv-core__text-layer span::-moz-selection{background-color:var(--rpv-core__text-layer-text--selection-background-color);color:var(--rpv-core__text-layer-text--selection-color)}.rpv-core__text-layer span::selection{background-color:var(--rpv-core__text-layer-text--selection-background-color);color:var(--rpv-core__text-layer-text--selection-color)}.rpv-core__text-layer br::-moz-selection{color:transparent}.rpv-core__text-layer br::selection{color:transparent}.rpv-core__text-layer-text{color:transparent;cursor:text;position:absolute;transform-origin:0 0;white-space:pre}.rpv-core__tooltip-body{background-color:var(--rpv-core__tooltip-body-background-color);border-radius:.25rem;color:var(--rpv-core__tooltip-body-color);left:0;max-width:20rem;position:absolute;text-align:center;top:-9999px;z-index:9999}.rpv-core__tooltip-body--rtl{direction:rtl}.rpv-core__tooltip-body-arrow{background-color:var(--rpv-core__tooltip-body-background-color)}.rpv-core__tooltip-body-content{padding:.5rem}.rpv-core__display--block{display:block}.rpv-core__display--hidden{display:none}@media (min-width:640px){.rpv-core__display--hidden-small{display:none}.rpv-core__display--block-small{display:block}}@media (min-width:768px){.rpv-core__display--hidden-medium{display:none}.rpv-core__display--block-medium{display:block}}@media (min-width:1024px){.rpv-core__display--hidden-large{display:none}.rpv-core__display--block-large{display:block}}:root{--rpv-thumbnail__container-box-shadow:rgba(0,0,0,.2) 2px 2px 8px 0px;--rpv-thumbnail__item--selected-background-color:rgba(0,0,0,.3)}.rpv-core__viewer--dark{--rpv-thumbnail__item--selected-background-color:#2566e8}.rpv-thumbnail__cover{align-items:center;display:flex;height:100%;justify-content:center;position:relative;width:100%}.rpv-thumbnail__cover-image{max-height:100%;max-width:100%}.rpv-thumbnail__cover-loader{align-items:center;display:flex;height:100%;justify-content:center;left:0;position:absolute;top:0;width:100%}.rpv-thumbnail__container{align-items:center;box-shadow:var(--rpv-thumbnail__container-box-shadow);display:flex;justify-content:center;margin:0 auto;position:relative}.rpv-thumbnail__item{cursor:pointer;padding:.5rem}.rpv-thumbnail__item--selected,.rpv-thumbnail__item:focus,.rpv-thumbnail__item:hover{background-color:var(--rpv-thumbnail__item--selected-background-color)}.rpv-thumbnail__item:focus{outline:0}.rpv-thumbnail__label{font-size:.75em;padding:.25rem;text-align:center}.rpv-thumbnail__list{align-content:flex-start;align-items:center;display:flex;flex-flow:row wrap;height:100%;justify-content:center;overflow:auto;padding:.5rem 0}.rpv-thumbnail__list--rtl{direction:rtl}.rpv-thumbnail__list-container{height:100%;width:100%}.rpv-thumbnail__loader{align-items:center;display:flex;height:100%;justify-content:center;width:100%}:root{--rpv-drop__area-background-color:#fff;--rpv-drop__area-body-border-color:rgba(0,0,0,.3);--rpv-drop__area-body-color:#000}.rpv-core__viewer--dark{--rpv-drop__area-background-color:#191919;--rpv-drop__area-body-border-color:#fff;--rpv-drop__area-body-color:#fff}.rpv-drop__area{background-color:var(--rpv-drop__area-background-color);bottom:0;left:0;padding:.5rem;position:absolute;right:0;top:0;z-index:9999}.rpv-drop__area-body{align-items:center;border:2px dashed var(--rpv-drop__area-body-border-color);color:var(--rpv-drop__area-body-color);display:flex;font-size:1.5rem;height:100%;justify-content:center}.rpv-drop__area-body--rtl{direction:rtl}:root{--rpv-full-screen__pages-background-color:#fff}.rpv-core__viewer--dark{--rpv-full-screen__pages-background-color:#1a1a1a}.rpv-full-screen__exit-button{bottom:0;padding:.5rem;position:fixed;z-index:1}.rpv-full-screen__exit-button--ltr{right:0}.rpv-full-screen__exit-button--rtl{left:0}.rpv-full-screen__pages{background-color:var(--rpv-full-screen__pages-background-color)}.rpv-open__input-wrapper{position:relative}.rpv-open__input{bottom:0;cursor:pointer;display:none;height:100%;left:0;opacity:0;position:absolute;right:0;top:0;width:100%}.rpv-open__input::-webkit-file-upload-button{width:0}.rpv-page-navigation__current-page-input{margin:0 .25rem;text-align:right;width:3rem}:root{--rpv-print__progress-body-background-color:#fff;--rpv-print__progress-body-border-color:rgba(0,0,0,.3);--rpv-print__progress-body-color:#000}.rpv-core__viewer--dark{--rpv-print__progress-body-background-color:#363636;--rpv-print__progress-body-border-color:transparent;--rpv-print__progress-body-color:#fff}.rpv-print__permission-body{padding:1rem}.rpv-print__permission-footer{display:flex;justify-content:center;padding:0 1rem 1rem 0}.rpv-print__progress{align-items:center;display:flex;height:100%;justify-content:center;left:0;position:absolute;top:0;width:100%;z-index:9999}.rpv-print__progress-body{background-color:var(--rpv-print__progress-body-background-color);border:1px solid var(--rpv-print__progress-body-border-color);border-radius:.25rem;color:var(--rpv-print__progress-body-color);padding:1.5rem;text-align:center;width:15rem}.rpv-print__progress-body--rtl{direction:rtl}.rpv-print__progress-bar{margin-bottom:1rem}.rpv-print__progress-message{margin-bottom:.5rem}.rpv-print__zone{display:none}@media print{@page{margin:0}.rpv-print__html-printing{height:100%}.rpv-print__body-printing{height:100%;margin:0}.rpv-print__body-printing *{display:none}.rpv-print__zone{display:block;height:100%}.rpv-print__page{align-items:center;display:flex;flex-direction:column;height:100%;justify-content:center;page-break-after:always;page-break-inside:avoid;width:100%}.rpv-print__page img{display:block;max-height:100%;max-width:100%}}.rpv-properties__loader{text-align:center}.rpv-properties__modal{min-height:20rem;padding:.5rem 0}.rpv-properties__modal-section{padding:0 .5rem}.rpv-properties__modal-footer{display:flex;justify-content:center;margin-top:.5rem}.rpv-properties__item{align-items:flex-start;display:flex;margin:.5rem 0}.rpv-properties__item--rtl{direction:rtl}.rpv-properties__item-label{padding-right:.5rem;width:25%}.rpv-properties__item-value{flex:1 1}.rpv-search__highlights{height:100%;left:0;position:absolute;top:0;width:100%}.rpv-search__highlight{background-color:var(--rpv-search__highlight-background-color);border-radius:.25rem;position:absolute;z-index:1}.rpv-search__highlight--current{background-color:var(--rpv-search__highlight--current-background-color)}.rpv-search__popover{padding:0 .5rem}.rpv-search__popover-input-counter{align-items:center;display:flex;margin-bottom:.5rem;position:relative;width:12rem}.rpv-search__popover-counter{align-items:center;bottom:0;display:flex;position:absolute;top:0}.rpv-search__popover-counter--ltr{padding-right:.25rem;right:0}.rpv-search__popover-counter--rtl{left:0;padding-left:.25rem}.rpv-search__popover-label{align-items:center;display:flex;margin-bottom:.5rem}.rpv-search__popover-label-checkbox{margin-right:.25rem}.rpv-search__popover-footer{align-items:center;display:flex}.rpv-search__popover-footer-item{padding:0 .25rem}.rpv-search__popover-footer-button--ltr{margin-left:auto}.rpv-search__popover-footer-button--rtl{margin-right:auto}:root{--rpv-search__highlight-background-color:rgba(255,255,0,.4);--rpv-search__highlight--current-background-color:rgba(0,128,0,.4)}.rpv-selection-mode__grab{cursor:-webkit-grab;cursor:grab}.rpv-selection-mode__grab :not(input),.rpv-selection-mode__grab :not(select),.rpv-selection-mode__grab :not(textarea){cursor:-webkit-grab!important;cursor:grab!important}.rpv-selection-mode__grabbing{cursor:-webkit-grabbing;cursor:grabbing}.rpv-selection-mode__grabbing :not(input),.rpv-selection-mode__grabbing :not(select),.rpv-selection-mode__grabbing :not(textarea){cursor:-webkit-grabbing!important;cursor:grabbing!important}:root{--rpv-zoom__popover-target-arrow-border-color:rgba(0,0,0,.6)}.rpv-core__viewer--dark{--rpv-zoom__popover-target-arrow-border-color:#fff}.rpv-zoom__popover-target{align-items:center;color:var(--rpv-zoom__popover-target-color);display:flex}.rpv-zoom__popover-target-scale--ltr{margin-right:.25rem}.rpv-zoom__popover-target-scale--rtl{margin-left:.25rem}.rpv-zoom__popover-target-arrow{border-color:var(--rpv-zoom__popover-target-arrow-border-color) transparent transparent;border-style:solid;border-width:.5rem .25rem 0;height:0;width:0}:root{--rpv-toolbar__label--color:#000}.rpv-core__viewer--dark{--rpv-toolbar__label--color:#fff}.rpv-toolbar{align-items:center;display:flex;width:100%}.rpv-toolbar--rtl{direction:rtl}.rpv-toolbar__center,.rpv-toolbar__left{align-items:center;display:flex}.rpv-toolbar__center{flex-grow:1;flex-shrink:1;justify-content:center}.rpv-toolbar__right{align-items:center;display:flex;margin-left:auto}.rpv-toolbar__item{align-items:center;display:flex;padding:0 .125rem}.rpv-toolbar__label{color:var(--rpv-toolbar__label--color)}:root{--rpv-default-layout__body-background-color:#fff;--rpv-default-layout__container-border-color:rgba(0,0,0,.3);--rpv-default-layout__toolbar-background-color:#eee;--rpv-default-layout__toolbar-border-bottom-color:rgba(0,0,0,.1);--rpv-default-layout__sidebar-border-color:rgba(0,0,0,.2);--rpv-default-layout__sidebar--opened-background-color:#fff;--rpv-default-layout__sidebar-headers-background-color:#eee;--rpv-default-layout__sidebar-content--opened-background-color:#fff;--rpv-default-layout__sidebar-content--opened-border-color:rgba(0,0,0,.2);--rpv-default-layout__sidebar-content--opened-color:#000}.rpv-core__viewer--dark{--rpv-default-layout__body-background-color:#1a1a1a;--rpv-default-layout__container-border-color:#454647;--rpv-default-layout__toolbar-background-color:#292929;--rpv-default-layout__toolbar-border-bottom-color:#000;--rpv-default-layout__sidebar-border-color:#000;--rpv-default-layout__sidebar--opened-background-color:#fff;--rpv-default-layout__sidebar-headers-background-color:#292929;--rpv-default-layout__sidebar-content--opened-background-color:#1a1a1a;--rpv-default-layout__sidebar-content--opened-border-color:#292929;--rpv-default-layout__sidebar-content--opened-color:#fff}.rpv-default-layout__container{border:1px solid var(--rpv-default-layout__container-border-color);box-sizing:border-box;height:100%;width:100%}.rpv-default-layout__toolbar{align-items:center;background-color:var(--rpv-default-layout__toolbar-background-color);border-bottom:1px solid var(--rpv-default-layout__toolbar-border-bottom-color);display:flex;height:2.5rem;left:0;position:absolute;top:0;width:100%;z-index:1}.rpv-default-layout__sidebar{display:flex;padding-top:2.5rem}.rpv-default-layout__sidebar--opened{background-color:var(--rpv-default-layout__sidebar--opened-background-color);bottom:0;left:0;position:absolute;top:0;width:12rem;z-index:1}.rpv-default-layout__sidebar--ltr{border-right:1px solid var(--rpv-default-layout__sidebar-border-color)}.rpv-default-layout__sidebar--rtl{border-left:1px solid var(--rpv-default-layout__sidebar-border-color)}.rpv-default-layout__main{display:flex;height:100%;position:relative}.rpv-default-layout__main--rtl{direction:rtl}.rpv-default-layout__body{background-color:var(--rpv-default-layout__body-background-color);flex:1 1;overflow:auto;padding-top:2.5rem}@media (min-width:768px){.rpv-default-layout__sidebar--opened{width:16rem}}@media (min-width:1024px){.rpv-default-layout__sidebar--opened{background:inherit;position:inherit;width:20rem;z-index:inherit}}.rpv-default-layout__sidebar-tabs{display:flex;height:100%;width:100%}.rpv-default-layout__sidebar-headers{background-color:var(--rpv-default-layout__sidebar-headers-background-color);padding:.25rem}.rpv-default-layout__sidebar-header{padding:.125rem}.rpv-default-layout__sidebar-content{display:none;flex-grow:1;flex-shrink:1}.rpv-default-layout__sidebar-content--opened{background-color:var(--rpv-default-layout__sidebar-content--opened-background-color);color:var(--rpv-default-layout__sidebar-content--opened-color);display:flex;overflow:hidden}.rpv-default-layout__sidebar-content--ltr{border-left:1px solid var(--rpv-default-layout__sidebar-content--opened-border-color)}.rpv-default-layout__sidebar-content--rtl{border-right:1px solid var(--rpv-default-layout__sidebar-content--opened-border-color)}\", \"\",{\"version\":3,\"sources\":[\"webpack://node_modules/@react-pdf-viewer/default-layout/lib/styles/index.css\"],\"names\":[],\"mappings\":\"AAAA,MAAM,6DAA6D,CAAC,iCAAiC,CAAC,wBAAwB,sDAAsD,CAAC,iCAAiC,CAAC,uBAAuB,WAAW,CAAC,aAAa,CAAC,eAAe,CAAC,iBAAiB,CAAC,UAAU,CAAC,4BAA4B,aAAa,CAAC,sBAAsB,YAAY,CAAC,qBAAqB,CAAC,WAAW,CAAC,aAAa,CAAC,eAAe,CAAC,UAAU,CAAC,2BAA2B,aAAa,CAAC,sBAAsB,kBAAkB,CAAC,4BAA4B,CAAC,WAAW,CAAC,uCAAuC,CAAC,cAAc,CAAC,YAAY,CAAC,aAAa,CAAC,eAAe,CAAC,UAAU,CAAC,4BAA4B,SAAS,CAAC,wDAAwD,oEAAoE,CAAC,wBAAwB,kBAAkB,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,UAAU,CAAC,MAAM,2DAA2D,CAAC,+BAA+B,CAAC,wBAAwB,oDAAoD,CAAC,+BAA+B,CAAC,oBAAoB,kBAAkB,CAAC,qCAAqC,CAAC,cAAc,CAAC,YAAY,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,0BAA0B,SAAS,CAAC,oDAAoD,kEAAkE,CAAC,sBAAsB,kBAAkB,CAAC,YAAY,CAAC,WAAW,CAAC,mBAAmB,CAAC,UAAU,CAAC,qBAAqB,WAAW,CAAC,aAAa,CAAC,oBAAoB,CAAC,oBAAoB,oBAAoB,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,sBAAsB,kBAAkB,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,UAAU,CAAC,qBAAqB,WAAW,CAAC,aAAa,CAAC,eAAe,CAAC,iBAAiB,CAAC,UAAU,CAAC,0BAA0B,aAAa,CAAC,yBAAyB,WAAW,CAAC,aAAa,CAAC,eAAe,CAAC,UAAU,CAAC,8BAA8B,aAAa,CAAC,MAAM,sEAAsE,CAAC,6DAA6D,CAAC,8GAA8G,CAAC,6DAA6D,CAAC,6CAA6C,CAAC,sCAAsC,CAAC,yDAAyD,CAAC,+DAA+D,CAAC,kDAAkD,CAAC,6BAA6B,CAAC,2CAA2C,CAAC,mDAAmD,CAAC,qCAAqC,CAAC,6CAA6C,CAAC,4CAA4C,CAAC,2DAA2D,CAAC,gCAAgC,CAAC,4DAA4D,CAAC,oDAAoD,CAAC,qCAAqC,CAAC,iEAAiE,CAAC,yDAAyD,CAAC,oEAAoE,CAAC,4CAA4C,CAAC,kDAAkD,CAAC,yDAAyD,CAAC,8DAA8D,CAAC,8CAA8C,CAAC,oDAAoD,CAAC,mCAAmC,CAAC,mDAAmD,CAAC,qCAAqC,CAAC,wDAAwD,CAAC,0DAA0D,CAAC,4CAA4C,CAAC,wDAAwD,CAAC,+CAA+C,CAAC,wDAAwD,CAAC,iDAAiD,CAAC,2DAA2D,CAAC,4DAA4D,CAAC,wDAAwD,CAAC,yCAAyC,CAAC,+CAA+C,CAAC,8BAA8B,CAAC,8CAA8C,CAAC,mCAAmC,CAAC,wBAAwB,oDAAoD,CAAC,sCAAsC,CAAC,wDAAwD,CAAC,4DAA4D,CAAC,2CAA2C,CAAC,6BAA6B,CAAC,8CAA8C,CAAC,mDAAmD,CAAC,qCAAqC,CAAC,gDAAgD,CAAC,+CAA+C,CAAC,iDAAiD,CAAC,gCAAgC,CAAC,qDAAqD,CAAC,6CAA6C,CAAC,qCAAqC,CAAC,kDAAkD,CAAC,0DAA0D,CAAC,6DAA6D,CAAC,+CAA+C,CAAC,mDAAmD,CAAC,iDAAiD,CAAC,mCAAmC,CAAC,8CAA8C,CAAC,8CAA8C,CAAC,qCAAqC,CAAC,6CAA6C,CAAC,oDAAoD,CAAC,4CAA4C,CAAC,wCAAwC,CAAC,8BAA8B,CAAC,iDAAiD,CAAC,mCAAmC,CAAC,sBAAsB,iBAAiB,CAAC,4BAA4B,SAAS,CAAC,iBAAiB,2DAA2D,CAAC,qDAAqD,CAAC,0DAA0D,CAAC,oDAAoD,CAAC,WAAW,CAAC,iBAAiB,CAAC,UAAU,CAAC,SAAS,CAAC,qBAAqB,QAAQ,CAAC,MAAM,CAAC,0CAA0C,CAAC,qBAAqB,QAAQ,CAAC,0CAA0C,QAAQ,CAAC,2CAA2C,CAAC,qBAAqB,OAAO,CAAC,qBAAqB,MAAM,CAAC,KAAK,CAAC,4CAA4C,CAAC,qBAAqB,OAAO,CAAC,0CAA0C,MAAM,CAAC,6CAA6C,CAAC,qBAAqB,QAAQ,CAAC,qBAAqB,MAAM,CAAC,KAAK,CAAC,4CAA4C,CAAC,qBAAqB,QAAQ,CAAC,0CAA0C,KAAK,CAAC,6CAA6C,CAAC,qBAAqB,OAAO,CAAC,qBAAqB,OAAO,CAAC,KAAK,CAAC,2CAA2C,CAAC,qBAAqB,OAAO,CAAC,0CAA0C,OAAO,CAAC,4CAA4C,CAAC,qBAAqB,QAAQ,CAAC,2BAA2B,kEAAkE,CAAC,oBAAoB,CAAC,4CAA4C,CAAC,YAAY,CAAC,gCAAgC,aAAa,CAAC,mCAAmC,kBAAkB,CAAC,0EAA0E,CAAC,sEAAsE,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,UAAU,CAAC,mCAAmC,cAAc,CAAC,gCAAgC,kBAAkB,CAAC,YAAY,CAAC,sBAAsB,CAAC,iCAAiC,WAAW,CAAC,sCAAsC,kBAAkB,CAAC,sCAAsC,iBAAiB,CAAC,kBAAkB,yDAAyD,CAAC,WAAW,CAAC,oBAAoB,CAAC,mCAAmC,CAAC,cAAc,CAAC,WAAW,CAAC,cAAc,CAAC,uBAAuB,aAAa,CAAC,wBAAwB,aAAa,CAAC,MAAM,CAAC,eAAe,CAAC,iBAAiB,CAAC,KAAK,CAAC,qBAAqB,kBAAkB,CAAC,4DAA4D,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,0BAA0B,aAAa,CAAC,0BAA0B,iEAAiE,CAAC,oBAAoB,CAAC,2CAA2C,CAAC,eAAe,CAAC,aAAa,CAAC,aAAa,CAAC,uBAAuB,kBAAkB,CAAC,8DAA8D,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,UAAU,CAAC,4BAA4B,aAAa,CAAC,gBAAgB,SAAS,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,cAAc,CAAC,iBAAiB,CAAC,qBAAqB,oBAAoB,CAAC,4BAA4B,aAAa,CAAC,sBAAsB,6DAA6D,CAAC,8BAA8B,WAAW,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,oCAAoC,yEAAyE,CAAC,gBAAgB,YAAY,CAAC,qBAAqB,CAAC,qBAAqB,aAAa,CAAC,gBAAgB,CAAC,wBAAwB,yEAAyE,CAAC,eAAe,CAAC,qBAAqB,kBAAkB,CAAC,4BAA4B,CAAC,WAAW,CAAC,sCAAsC,CAAC,cAAc,CAAC,YAAY,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,UAAU,CAAC,2BAA2B,SAAS,CAAC,sDAAsD,mEAAmE,CAAC,0BAA0B,kBAAkB,CAAC,YAAY,CAAC,+BAA+B,iBAAiB,CAAC,mBAAmB,CAAC,+BAA+B,kBAAkB,CAAC,kBAAkB,CAAC,2BAA2B,WAAW,CAAC,aAAa,CAAC,kBAAkB,CAAC,gCAAgC,kBAAkB,CAAC,gCAAgC,iBAAiB,CAAC,gCAAgC,kBAAkB,CAAC,gCAAgC,iBAAiB,CAAC,+BAA+B,gDAAgD,CAAC,qCAAqC,4BAA4B,CAAC,0BAA0B,eAAe,CAAC,0BAA0B,aAAa,CAAC,gBAAgB,CAAC,0BAA0B,4BAA4B,CAAC,WAAW,CAAC,oBAAoB,CAAC,2CAA2C,CAAC,cAAc,CAAC,WAAW,CAAC,eAAe,CAAC,gCAAgC,wEAAwE,CAAC,oCAAoC,qDAAqD,CAAC,+BAA+B,aAAa,CAAC,oCAAoC,2EAA2E,CAAC,sBAAsB,6DAA6D,CAAC,yDAAyD,CAAC,oBAAoB,CAAC,WAAW,CAAC,eAAe,CAAC,aAAa,CAAC,2BAA2B,aAAa,CAAC,yBAAyB,gEAAgE,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,+CAA+C,kBAAkB,CAAC,YAAY,CAAC,sBAAsB,CAAC,sBAAsB,aAAa,CAAC,eAAe,CAAC,iBAAiB,CAAC,4BAA4B,aAAa,CAAC,iDAAiD,CAAC,UAAU,CAAC,WAAW,CAAC,iBAAiB,CAAC,YAAY,CAAC,UAAU,CAAC,gCAAgC,kBAAkB,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,UAAU,CAAC,wBAAwB,2DAA2D,CAAC,oBAAoB,CAAC,yCAAyC,CAAC,MAAM,CAAC,eAAe,CAAC,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC,sDAAsD,+DAA+D,CAAC,6BAA6B,aAAa,CAAC,2BAA2B,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,oCAAoC,2EAA2E,CAAC,+DAA+D,CAAC,gBAAgB,CAAC,cAAc,CAAC,qBAAqB,CAAC,yCAAyC,aAAa,CAAC,kCAAkC,eAAe,CAAC,oBAAoB,CAAC,iCAAiC,eAAe,CAAC,oCAAoC,+EAA+E,CAAC,gBAAgB,CAAC,aAAa,CAAC,cAAc,CAAC,0BAA0B,iEAAiE,CAAC,WAAW,CAAC,oBAAoB,CAAC,2CAA2C,CAAC,cAAc,CAAC,WAAW,CAAC,cAAc,CAAC,+BAA+B,aAAa,CAAC,wBAAwB,+DAA+D,CAAC,oBAAoB,CAAC,eAAe,CAAC,6BAA6B,aAAa,CAAC,iCAAiC,kBAAkB,CAAC,wEAAwE,CAAC,oBAAoB,CAAC,kDAAkD,CAAC,YAAY,CAAC,gBAAgB,CAAC,aAAa,CAAC,sBAAsB,CAAC,qBAAqB,sEAAsE,CAAC,mBAAmB,yEAAyE,CAAC,uEAAuE,CAAC,oBAAoB,CAAC,4DAA4D,CAAC,0DAA0D,CAAC,8BAA8B,8BAAsB,CAAtB,sBAAsB,CAAC,0CAAkC,CAAlC,kCAAkC,CAAC,kDAA0C,CAA1C,0CAA0C,CAAC,wCAA+B,CAA/B,gCAAgC,CAAC,+CAAuC,GAAG,sBAAsB,CAAC,GAAG,uBAAuB,CAAC,CAA5F,uCAAuC,GAAG,sBAAsB,CAAC,GAAG,uBAAuB,CAAC,CAAC,oBAAoB,2DAA2D,CAAC,gBAAgB,CAAC,WAAW,CAAC,YAAY,CAAC,wDAAwD,kEAAkE,CAAC,iBAAiB,CAAC,mCAAmC,iBAAiB,CAAC,sCAAsC,mBAAmB,CAAC,wBAAe,CAAf,qBAAe,CAAf,oBAAe,CAAf,gBAAgB,CAAC,mBAAmB,0DAA0D,CAAC,sDAAsD,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,oCAAoC,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,wBAAwB,aAAa,CAAC,sBAAsB,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,2CAAsC,6EAA6E,CAAC,uDAAuD,CAA3K,sCAAsC,6EAA6E,CAAC,uDAAuD,CAAC,yCAAoC,iBAAiB,CAArD,oCAAoC,iBAAiB,CAAC,2BAA2B,iBAAiB,CAAC,WAAW,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,eAAe,CAAC,wBAAwB,+DAA+D,CAAC,oBAAoB,CAAC,yCAAyC,CAAC,MAAM,CAAC,eAAe,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC,6BAA6B,aAAa,CAAC,8BAA8B,+DAA+D,CAAC,gCAAgC,aAAa,CAAC,0BAA0B,aAAa,CAAC,2BAA2B,YAAY,CAAC,yBAAyB,iCAAiC,YAAY,CAAC,gCAAgC,aAAa,CAAC,CAAC,yBAAyB,kCAAkC,YAAY,CAAC,iCAAiC,aAAa,CAAC,CAAC,0BAA0B,iCAAiC,YAAY,CAAC,gCAAgC,aAAa,CAAC,CAAC,MAAM,oEAAoE,CAAC,+DAA+D,CAAC,wBAAwB,wDAAwD,CAAC,sBAAsB,kBAAkB,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,UAAU,CAAC,4BAA4B,eAAe,CAAC,cAAc,CAAC,6BAA6B,kBAAkB,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,0BAA0B,kBAAkB,CAAC,qDAAqD,CAAC,YAAY,CAAC,sBAAsB,CAAC,aAAa,CAAC,iBAAiB,CAAC,qBAAqB,cAAc,CAAC,aAAa,CAAC,qFAAqF,sEAAsE,CAAC,2BAA2B,SAAS,CAAC,sBAAsB,eAAe,CAAC,cAAc,CAAC,iBAAiB,CAAC,qBAAqB,wBAAwB,CAAC,kBAAkB,CAAC,YAAY,CAAC,kBAAkB,CAAC,WAAW,CAAC,sBAAsB,CAAC,aAAa,CAAC,eAAe,CAAC,0BAA0B,aAAa,CAAC,+BAA+B,WAAW,CAAC,UAAU,CAAC,uBAAuB,kBAAkB,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,UAAU,CAAC,MAAM,sCAAsC,CAAC,iDAAiD,CAAC,gCAAgC,CAAC,wBAAwB,yCAAyC,CAAC,uCAAuC,CAAC,gCAAgC,CAAC,gBAAgB,uDAAuD,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,qBAAqB,kBAAkB,CAAC,yDAAyD,CAAC,sCAAsC,CAAC,YAAY,CAAC,gBAAgB,CAAC,WAAW,CAAC,sBAAsB,CAAC,0BAA0B,aAAa,CAAC,MAAM,8CAA8C,CAAC,wBAAwB,iDAAiD,CAAC,8BAA8B,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,CAAC,mCAAmC,OAAO,CAAC,mCAAmC,MAAM,CAAC,wBAAwB,+DAA+D,CAAC,yBAAyB,iBAAiB,CAAC,iBAAiB,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,6CAA6C,OAAO,CAAC,yCAAyC,eAAe,CAAC,gBAAgB,CAAC,UAAU,CAAC,MAAM,gDAAgD,CAAC,sDAAsD,CAAC,qCAAqC,CAAC,wBAAwB,mDAAmD,CAAC,mDAAmD,CAAC,qCAAqC,CAAC,4BAA4B,YAAY,CAAC,8BAA8B,YAAY,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,qBAAqB,kBAAkB,CAAC,YAAY,CAAC,WAAW,CAAC,sBAAsB,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,0BAA0B,iEAAiE,CAAC,6DAA6D,CAAC,oBAAoB,CAAC,2CAA2C,CAAC,cAAc,CAAC,iBAAiB,CAAC,WAAW,CAAC,+BAA+B,aAAa,CAAC,yBAAyB,kBAAkB,CAAC,6BAA6B,mBAAmB,CAAC,iBAAiB,YAAY,CAAC,aAAa,MAAM,QAAQ,CAAC,0BAA0B,WAAW,CAAC,0BAA0B,WAAW,CAAC,QAAQ,CAAC,4BAA4B,YAAY,CAAC,iBAAiB,aAAa,CAAC,WAAW,CAAC,iBAAiB,kBAAkB,CAAC,YAAY,CAAC,qBAAqB,CAAC,WAAW,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,uBAAuB,CAAC,UAAU,CAAC,qBAAqB,aAAa,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,wBAAwB,iBAAiB,CAAC,uBAAuB,gBAAgB,CAAC,eAAe,CAAC,+BAA+B,eAAe,CAAC,8BAA8B,YAAY,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,sBAAsB,sBAAsB,CAAC,YAAY,CAAC,cAAc,CAAC,2BAA2B,aAAa,CAAC,4BAA4B,mBAAmB,CAAC,SAAS,CAAC,4BAA4B,QAAM,CAAC,wBAAwB,WAAW,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,uBAAuB,8DAA8D,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,SAAS,CAAC,gCAAgC,uEAAuE,CAAC,qBAAqB,eAAe,CAAC,mCAAmC,kBAAkB,CAAC,YAAY,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,WAAW,CAAC,6BAA6B,kBAAkB,CAAC,QAAQ,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAK,CAAC,kCAAkC,oBAAoB,CAAC,OAAO,CAAC,kCAAkC,MAAM,CAAC,mBAAmB,CAAC,2BAA2B,kBAAkB,CAAC,YAAY,CAAC,mBAAmB,CAAC,oCAAoC,mBAAmB,CAAC,4BAA4B,kBAAkB,CAAC,YAAY,CAAC,iCAAiC,gBAAgB,CAAC,wCAAwC,gBAAgB,CAAC,wCAAwC,iBAAiB,CAAC,MAAM,2DAA2D,CAAC,kEAAkE,CAAC,0BAA0B,mBAAU,CAAV,WAAW,CAAC,sHAAsH,6BAAoB,CAApB,qBAAqB,CAAC,8BAA8B,uBAAc,CAAd,eAAe,CAAC,kIAAkI,iCAAwB,CAAxB,yBAAyB,CAAC,MAAM,4DAA4D,CAAC,wBAAwB,kDAAkD,CAAC,0BAA0B,kBAAkB,CAAC,2CAA2C,CAAC,YAAY,CAAC,qCAAqC,mBAAmB,CAAC,qCAAqC,kBAAkB,CAAC,gCAAgC,uFAAuF,CAAC,kBAAkB,CAAC,2BAA2B,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,gCAAgC,CAAC,wBAAwB,gCAAgC,CAAC,aAAa,kBAAkB,CAAC,YAAY,CAAC,UAAU,CAAC,kBAAkB,aAAa,CAAC,wCAAwC,kBAAkB,CAAC,YAAY,CAAC,qBAAqB,WAAW,CAAC,aAAa,CAAC,sBAAsB,CAAC,oBAAoB,kBAAkB,CAAC,YAAY,CAAC,gBAAgB,CAAC,mBAAmB,kBAAkB,CAAC,YAAY,CAAC,iBAAiB,CAAC,oBAAoB,sCAAsC,CAAC,MAAM,gDAAgD,CAAC,2DAA2D,CAAC,mDAAmD,CAAC,gEAAgE,CAAC,yDAAyD,CAAC,2DAA2D,CAAC,2DAA2D,CAAC,mEAAmE,CAAC,yEAAyE,CAAC,wDAAwD,CAAC,wBAAwB,mDAAmD,CAAC,oDAAoD,CAAC,sDAAsD,CAAC,sDAAsD,CAAC,+CAA+C,CAAC,2DAA2D,CAAC,8DAA8D,CAAC,sEAAsE,CAAC,kEAAkE,CAAC,wDAAwD,CAAC,+BAA+B,kEAAkE,CAAC,qBAAqB,CAAC,WAAW,CAAC,UAAU,CAAC,6BAA6B,kBAAkB,CAAC,oEAAoE,CAAC,8EAA8E,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,6BAA6B,YAAY,CAAC,kBAAkB,CAAC,qCAAqC,4EAA4E,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,kCAAkC,sEAAsE,CAAC,kCAAkC,qEAAqE,CAAC,0BAA0B,YAAY,CAAC,WAAW,CAAC,iBAAiB,CAAC,+BAA+B,aAAa,CAAC,0BAA0B,iEAAiE,CAAC,QAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,yBAAyB,qCAAqC,WAAW,CAAC,CAAC,0BAA0B,qCAAqC,kBAAkB,CAAC,gBAAgB,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,kCAAkC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,qCAAqC,4EAA4E,CAAC,cAAc,CAAC,oCAAoC,eAAe,CAAC,qCAAqC,YAAY,CAAC,WAAW,CAAC,aAAa,CAAC,6CAA6C,oFAAoF,CAAC,8DAA8D,CAAC,YAAY,CAAC,eAAe,CAAC,0CAA0C,qFAAqF,CAAC,0CAA0C,sFAAsF\",\"sourcesContent\":[\":root{--rpv-attachment__item--hover-background-color:rgba(0,0,0,.1);--rpv-attachment__item-color:#000}.rpv-core__viewer--dark{--rpv-attachment__item--hover-background-color:#2566e8;--rpv-attachment__item-color:#fff}.rpv-attachment__empty{height:100%;overflow:auto;padding:.5rem 0;text-align:center;width:100%}.rpv-attachment__empty--rtl{direction:rtl}.rpv-attachment__list{display:flex;flex-direction:column;height:100%;overflow:auto;padding:.5rem 0;width:100%}.rpv-attachment__list--rtl{direction:rtl}.rpv-attachment__item{align-items:center;background-color:transparent;border:none;color:var(--rpv-attachment__item-color);cursor:pointer;display:flex;padding:.5rem;text-align:left;width:100%}.rpv-attachment__item:focus{outline:0}.rpv-attachment__item:focus,.rpv-attachment__item:hover{background-color:var(--rpv-attachment__item--hover-background-color)}.rpv-attachment__loader{align-items:center;display:flex;height:100%;justify-content:center;width:100%}:root{--rpv-bookmark__item--hover-background-color:rgba(0,0,0,.1);--rpv-bookmark__item-color:#000}.rpv-core__viewer--dark{--rpv-bookmark__item--hover-background-color:#2566e8;--rpv-bookmark__item-color:#fff}.rpv-bookmark__item{align-items:center;color:var(--rpv-bookmark__item-color);cursor:pointer;display:flex;padding-bottom:.25rem;padding-right:.25rem;padding-top:.25rem}.rpv-bookmark__item:focus{outline:0}.rpv-bookmark__item:focus,.rpv-bookmark__item:hover{background-color:var(--rpv-bookmark__item--hover-background-color)}.rpv-bookmark__toggle{align-items:center;display:flex;height:1rem;margin-right:.25rem;width:1rem}.rpv-bookmark__title{flex-grow:1;flex-shrink:1;text-decoration:none}.rpv-bookmark__list{list-style-type:none;margin:0;overflow:auto;padding:0}.rpv-bookmark__loader{align-items:center;display:flex;height:100%;justify-content:center;width:100%}.rpv-bookmark__empty{height:100%;overflow:auto;padding:.5rem 0;text-align:center;width:100%}.rpv-bookmark__empty--rtl{direction:rtl}.rpv-bookmark__container{height:100%;overflow:auto;padding:.5rem 0;width:100%}.rpv-bookmark__container--rtl{direction:rtl}:root{--rpv-core__annotation--link-hover-background-color:rgba(255,255,0,.2);--rpv-core__annotation-popup-wrapper-background-color:#faf089;--rpv-core__annotation-popup-wrapper-box-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -2px rgba(0,0,0,.05);--rpv-core__annotation-popup-content-border-top-color:#1a202c;--rpv-core__arrow-border-color:rgba(0,0,0,.3);--rpv-core__asking-password-color:#000;--rpv-core__asking-password-wrapper-background-color:#fff;--rpv-core__asking-password-wrapper-border-color:rgba(0,0,0,.3);--rpv-core__button-background-color:rgba(0,0,0,.3);--rpv-core__button-color:#000;--rpv-core__doc-error-background-color:#fff;--rpv-core__doc-error-text-background-color:#c02424;--rpv-core__doc-error-text-color:#fff;--rpv-core__doc-loading-background-color:#fff;--rpv-core__inner-page-background-color:#fff;--rpv-core__menu-divider-border-bottom-color:rgba(0,0,0,.3);--rpv-core__menu-item-color:#000;--rpv-core__menu-item--hover-background-color:rgba(0,0,0,.1);--rpv-core__menu-item--disabled-color:rgba(0,0,0,.3);--rpv-core__minimal-button-color:#000;--rpv-core__minimal-button--hover-background-color:rgba(0,0,0,.1);--rpv-core__minimal-button--disabled-color:rgba(0,0,0,.3);--rpv-core__minimal-button--selected-background-color:rgba(0,0,0,.1);--rpv-core__modal-body-background-color:#fff;--rpv-core__modal-body-border-color:rgba(0,0,0,.3);--rpv-core__modal-overlay-background-color:rgba(0,0,0,.5);--rpv-core__page-layer-box-shadow:2px 2px 8px 0 rgba(0,0,0,.2);--rpv-core__popover-body-background-color:#fff;--rpv-core__popover-body-border-color:rgba(0,0,0,.3);--rpv-core__popover-body-color:#000;--rpv-core__primary-button-background-color:#2566e8;--rpv-core__primary-button-color:#fff;--rpv-core__progress-bar-background-color:rgba(0,0,0,.1);--rpv-core__progress-bar-progress-background-color:#2566e8;--rpv-core__progress-bar-progress-color:#fff;--rpv-core__separator-border-bottom-color:rgba(0,0,0,.3);--rpv-core__spinner-border-color:rgba(0,0,0,.4);--rpv-core__spinner-border-transparent-color:transparent;--rpv-core__splitter-background-color:transparent;--rpv-core__splitter--hover-background-color:rgba(0,0,0,.2);--rpv-core__text-layer-text--selection-background-color:#00f;--rpv-core__text-layer-text--selection-color:transparent;--rpv-core__textbox-background-color:#fff;--rpv-core__textbox-border-color:rgba(0,0,0,.2);--rpv-core__textbox-color:#000;--rpv-core__tooltip-body-background-color:#000;--rpv-core__tooltip-body-color:#fff}.rpv-core__viewer--dark{--rpv-core__asking-password-background-color:#363636;--rpv-core__asking-password-color:#fff;--rpv-core__asking-password-wrapper-border-color:#191919;--rpv-core__asking-password-wrapper-background-color:#191919;--rpv-core__button-background-color:#171717;--rpv-core__button-color:#fff;--rpv-core__doc-error-background-color:#191919;--rpv-core__doc-error-text-background-color:#c02323;--rpv-core__doc-error-text-color:#fff;--rpv-core__doc-loading-background-color:#191919;--rpv-core__inner-page-background-color:#1a1a1a;--rpv-core__menu-divider-border-bottom-color:#000;--rpv-core__menu-item-color:#fff;--rpv-core__menu-item--hover-background-color:#2566e8;--rpv-core__menu-item--disabled-color:#5e5e5e;--rpv-core__minimal-button-color:#fff;--rpv-core__minimal-button--disabled-color:#5e5e5e;--rpv-core__minimal-button--hover-background-color:#191919;--rpv-core__minimal-button--selected-background-color:#1657bb;--rpv-core__modal-body-background-color:#363636;--rpv-core__primary-button-background-color:#2566e8;--rpv-core__popover-body-background-color:#363636;--rpv-core__popover-body-color:#fff;--rpv-core__progress-bar-background-color:#000;--rpv-core__separator-border-bottom-color:#000;--rpv-core__spinner-border-color:#fff;--rpv-core__splitter-background-color:#1a1a1a;--rpv-core__splitter--hover-background-color:#2566e8;--rpv-core__textbox-background-color:#121212;--rpv-core__textbox-border-color:#121212;--rpv-core__textbox-color:#fff;--rpv-core__tooltip-body-background-color:#414141;--rpv-core__tooltip-body-color:#fff}.rpv-core__annotation{position:absolute}.rpv-core__annotation-layer{z-index:1}.rpv-core__arrow{border-bottom:1px solid var(--rpv-core__arrow-border-color);border-left-color:var(--rpv-core__arrow-border-color);border-right:1px solid var(--rpv-core__arrow-border-color);border-top-color:var(--rpv-core__arrow-border-color);height:10px;position:absolute;width:10px;z-index:0}.rpv-core__arrow--tl{bottom:0;left:0;transform:translate(50%,50%) rotate(45deg)}.rpv-core__arrow--tc{left:50%}.rpv-core__arrow--tc,.rpv-core__arrow--tr{bottom:0;transform:translate(-50%,50%) rotate(45deg)}.rpv-core__arrow--tr{right:0}.rpv-core__arrow--rt{left:0;top:0;transform:translate(-50%,50%) rotate(135deg)}.rpv-core__arrow--rc{top:50%}.rpv-core__arrow--rb,.rpv-core__arrow--rc{left:0;transform:translate(-50%,-50%) rotate(135deg)}.rpv-core__arrow--rb{bottom:0}.rpv-core__arrow--bl{left:0;top:0;transform:translate(50%,-50%) rotate(225deg)}.rpv-core__arrow--bc{left:50%}.rpv-core__arrow--bc,.rpv-core__arrow--br{top:0;transform:translate(-50%,-50%) rotate(225deg)}.rpv-core__arrow--br{right:0}.rpv-core__arrow--lt{right:0;top:0;transform:translate(50%,50%) rotate(315deg)}.rpv-core__arrow--lc{top:50%}.rpv-core__arrow--lb,.rpv-core__arrow--lc{right:0;transform:translate(50%,-50%) rotate(315deg)}.rpv-core__arrow--lb{bottom:0}.rpv-core__asking-password{background-color:var(--rpv-core__asking-password-background-color);border-radius:.25rem;color:var(--rpv-core__asking-password-color);padding:2rem}.rpv-core__asking-password--rtl{direction:rtl}.rpv-core__asking-password-wrapper{align-items:center;background-color:var(--rpv-core__asking-password-wrapper-background-color);border:1px solid var(--rpv-core__asking-password-wrapper-border-color);display:flex;height:100%;justify-content:center;width:100%}.rpv-core__asking-password-message{margin:.5rem 0}.rpv-core__asking-password-body{align-items:center;display:flex;justify-content:center}.rpv-core__asking-password-input{width:15rem}.rpv-core__asking-password-input--ltr{margin-right:.5rem}.rpv-core__asking-password-input--rtl{margin-left:.5rem}.rpv-core__button{background-color:var(--rpv-core__button-background-color);border:none;border-radius:.25rem;color:var(--rpv-core__button-color);cursor:pointer;height:2rem;padding:0 1rem}.rpv-core__button--rtl{direction:rtl}.rpv-core__canvas-layer{direction:ltr;left:0;overflow:hidden;position:absolute;top:0}.rpv-core__doc-error{align-items:center;background-color:var(--rpv-core__doc-error-background-color);display:flex;height:100%;justify-content:center}.rpv-core__doc-error--rtl{direction:rtl}.rpv-core__doc-error-text{background-color:var(--rpv-core__doc-error-text-background-color);border-radius:.25rem;color:var(--rpv-core__doc-error-text-color);line-height:1.5;max-width:50%;padding:.5rem}.rpv-core__doc-loading{align-items:center;background-color:var(--rpv-core__doc-loading-background-color);display:flex;height:100%;justify-content:center;width:100%}.rpv-core__doc-loading--rtl{direction:rtl}.rpv-core__icon{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1;text-align:center}.rpv-core__icon--rtl{transform:scaleX(-1)}.rpv-core__inner-pages--rtl{direction:rtl}.rpv-core__inner-page{background-color:var(--rpv-core__inner-page-background-color)}.rpv-core__annotation--link a{height:100%;left:0;position:absolute;top:0;width:100%}.rpv-core__annotation--link a:hover{background-color:var(--rpv-core__annotation--link-hover-background-color)}.rpv-core__menu{display:flex;flex-direction:column}.rpv-core__menu--rtl{direction:rtl;text-align:right}.rpv-core__menu-divider{border-bottom:1px solid var(--rpv-core__menu-divider-border-bottom-color);margin:.25rem 0}.rpv-core__menu-item{align-items:center;background-color:transparent;border:none;color:var(--rpv-core__menu-item-color);cursor:pointer;display:flex;justify-content:center;padding:.25rem 0;width:100%}.rpv-core__menu-item:focus{outline:0}.rpv-core__menu-item:focus,.rpv-core__menu-item:hover{background-color:var(--rpv-core__menu-item--hover-background-color)}.rpv-core__menu-item-icon{align-items:center;display:flex}.rpv-core__menu-item-icon--ltr{padding-left:1rem;padding-right:.5rem}.rpv-core__menu-item-icon--rtl{padding-left:.5rem;padding-right:1rem}.rpv-core__menu-item-label{flex-grow:1;flex-shrink:1;white-space:nowrap}.rpv-core__menu-item-label--ltr{padding-right:2rem}.rpv-core__menu-item-label--rtl{padding-left:2rem}.rpv-core__menu-item-check--ltr{padding-right:1rem}.rpv-core__menu-item-check--rtl{padding-left:1rem}.rpv-core__menu-item--disabled{color:var(--rpv-core__menu-item--disabled-color)}.rpv-core__menu-item--disabled:hover{background-color:transparent}.rpv-core__menu-item--ltr{text-align:left}.rpv-core__menu-item--rtl{direction:rtl;text-align:right}.rpv-core__minimal-button{background-color:transparent;border:none;border-radius:.25rem;color:var(--rpv-core__minimal-button-color);cursor:pointer;height:2rem;padding:0 .5rem}.rpv-core__minimal-button:hover{background-color:var(--rpv-core__minimal-button--hover-background-color)}.rpv-core__minimal-button--disabled{color:var(--rpv-core__minimal-button--disabled-color)}.rpv-core__minimal-button--rtl{direction:rtl}.rpv-core__minimal-button--selected{background-color:var(--rpv-core__minimal-button--selected-background-color)}.rpv-core__modal-body{background-color:var(--rpv-core__modal-body-background-color);border:1px solid var(--rpv-core__modal-body-border-color);border-radius:.25rem;margin:1rem;max-width:32rem;overflow:auto}.rpv-core__modal-body--rtl{direction:rtl}.rpv-core__modal-overlay{background-color:var(--rpv-core__modal-overlay-background-color);bottom:0;left:0;position:fixed;right:0;top:0;z-index:9999}.rpv-core__modal-overlay,.rpv-core__page-layer{align-items:center;display:flex;justify-content:center}.rpv-core__page-layer{margin:0 auto;overflow:hidden;position:relative}.rpv-core__page-layer:after{bottom:.25rem;box-shadow:var(--rpv-core__page-layer-box-shadow);content:\\\"\\\";left:.25rem;position:absolute;right:.25rem;top:.25rem}.rpv-core__page-size-calculator{align-items:center;display:flex;height:100%;justify-content:center;width:100%}.rpv-core__popover-body{border:1px solid var(--rpv-core__popover-body-border-color);border-radius:.25rem;color:var(--rpv-core__popover-body-color);left:0;padding:.5rem 0;position:absolute;top:-9999px;z-index:9999}.rpv-core__popover-body,.rpv-core__popover-body-arrow{background-color:var(--rpv-core__popover-body-background-color)}.rpv-core__popover-body--rtl{direction:rtl}.rpv-core__popover-overlay{bottom:0;left:0;position:fixed;right:0;top:0}.rpv-core__annotation-popup-wrapper{background-color:var(--rpv-core__annotation-popup-wrapper-background-color);box-shadow:var(--rpv-core__annotation-popup-wrapper-box-shadow);font-size:.75rem;padding:.25rem;word-break:break-word}.rpv-core__annotation-popup-wrapper--rtl{direction:rtl}.rpv-core__annotation-popup-title{font-weight:600;margin-bottom:.25rem}.rpv-core__annotation-popup-date{font-size:.5rem}.rpv-core__annotation-popup-content{border-top:1px solid var(--rpv-core__annotation-popup-content-border-top-color);max-height:16rem;overflow:auto;padding:.25rem}.rpv-core__primary-button{background-color:var(--rpv-core__primary-button-background-color);border:none;border-radius:.25rem;color:var(--rpv-core__primary-button-color);cursor:pointer;height:2rem;padding:0 1rem}.rpv-core__primary-button--rtl{direction:rtl}.rpv-core__progress-bar{background-color:var(--rpv-core__progress-bar-background-color);border-radius:9999px;padding:.125rem}.rpv-core__progress-bar--rtl{direction:rtl}.rpv-core__progress-bar-progress{align-items:center;background-color:var(--rpv-core__progress-bar-progress-background-color);border-radius:9999px;color:var(--rpv-core__progress-bar-progress-color);display:flex;font-size:.75rem;height:.75rem;justify-content:center}.rpv-core__separator{border-bottom:1px solid var(--rpv-core__separator-border-bottom-color)}.rpv-core__spinner{border-bottom:2px solid var(--rpv-core__spinner-border-transparent-color);border-left:2px solid var(--rpv-core__spinner-border-transparent-color);border-radius:9999px;border-right:2px solid var(--rpv-core__spinner-border-color);border-top:2px solid var(--rpv-core__spinner-border-color)}.rpv-core__spinner--animating{animation-duration:.4s;animation-iteration-count:infinite;animation-name:rpv-core__spinner-transform;animation-timing-function:linear}@keyframes rpv-core__spinner-transform{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.rpv-core__splitter{background-color:var(--rpv-core__splitter-background-color);cursor:ew-resize;height:100%;width:.25rem}.rpv-core__splitter--resizing,.rpv-core__splitter:hover{background-color:var(--rpv-core__splitter--hover-background-color);cursor:col-resize}.rpv-core__splitter-body--resizing{cursor:col-resize}.rpv-core__splitter-sibling--resizing{pointer-events:none;user-select:none}.rpv-core__textbox{background-color:var(--rpv-core__textbox-background-color);border:1px solid var(--rpv-core__textbox-border-color);border-radius:.25rem;box-sizing:border-box;color:var(--rpv-core__textbox-color);height:2rem;padding:0 .5rem;width:100%}.rpv-core__textbox--rtl{direction:rtl}.rpv-core__text-layer{height:100%;left:0;line-height:1;opacity:.2;position:absolute;top:0;width:100%;z-index:1}.rpv-core__text-layer span::selection{background-color:var(--rpv-core__text-layer-text--selection-background-color);color:var(--rpv-core__text-layer-text--selection-color)}.rpv-core__text-layer br::selection{color:transparent}.rpv-core__text-layer-text{color:transparent;cursor:text;position:absolute;transform-origin:0 0;white-space:pre}.rpv-core__tooltip-body{background-color:var(--rpv-core__tooltip-body-background-color);border-radius:.25rem;color:var(--rpv-core__tooltip-body-color);left:0;max-width:20rem;position:absolute;text-align:center;top:-9999px;z-index:9999}.rpv-core__tooltip-body--rtl{direction:rtl}.rpv-core__tooltip-body-arrow{background-color:var(--rpv-core__tooltip-body-background-color)}.rpv-core__tooltip-body-content{padding:.5rem}.rpv-core__display--block{display:block}.rpv-core__display--hidden{display:none}@media (min-width:640px){.rpv-core__display--hidden-small{display:none}.rpv-core__display--block-small{display:block}}@media (min-width:768px){.rpv-core__display--hidden-medium{display:none}.rpv-core__display--block-medium{display:block}}@media (min-width:1024px){.rpv-core__display--hidden-large{display:none}.rpv-core__display--block-large{display:block}}:root{--rpv-thumbnail__container-box-shadow:rgba(0,0,0,.2) 2px 2px 8px 0px;--rpv-thumbnail__item--selected-background-color:rgba(0,0,0,.3)}.rpv-core__viewer--dark{--rpv-thumbnail__item--selected-background-color:#2566e8}.rpv-thumbnail__cover{align-items:center;display:flex;height:100%;justify-content:center;position:relative;width:100%}.rpv-thumbnail__cover-image{max-height:100%;max-width:100%}.rpv-thumbnail__cover-loader{align-items:center;display:flex;height:100%;justify-content:center;left:0;position:absolute;top:0;width:100%}.rpv-thumbnail__container{align-items:center;box-shadow:var(--rpv-thumbnail__container-box-shadow);display:flex;justify-content:center;margin:0 auto;position:relative}.rpv-thumbnail__item{cursor:pointer;padding:.5rem}.rpv-thumbnail__item--selected,.rpv-thumbnail__item:focus,.rpv-thumbnail__item:hover{background-color:var(--rpv-thumbnail__item--selected-background-color)}.rpv-thumbnail__item:focus{outline:0}.rpv-thumbnail__label{font-size:.75em;padding:.25rem;text-align:center}.rpv-thumbnail__list{align-content:flex-start;align-items:center;display:flex;flex-flow:row wrap;height:100%;justify-content:center;overflow:auto;padding:.5rem 0}.rpv-thumbnail__list--rtl{direction:rtl}.rpv-thumbnail__list-container{height:100%;width:100%}.rpv-thumbnail__loader{align-items:center;display:flex;height:100%;justify-content:center;width:100%}:root{--rpv-drop__area-background-color:#fff;--rpv-drop__area-body-border-color:rgba(0,0,0,.3);--rpv-drop__area-body-color:#000}.rpv-core__viewer--dark{--rpv-drop__area-background-color:#191919;--rpv-drop__area-body-border-color:#fff;--rpv-drop__area-body-color:#fff}.rpv-drop__area{background-color:var(--rpv-drop__area-background-color);bottom:0;left:0;padding:.5rem;position:absolute;right:0;top:0;z-index:9999}.rpv-drop__area-body{align-items:center;border:2px dashed var(--rpv-drop__area-body-border-color);color:var(--rpv-drop__area-body-color);display:flex;font-size:1.5rem;height:100%;justify-content:center}.rpv-drop__area-body--rtl{direction:rtl}:root{--rpv-full-screen__pages-background-color:#fff}.rpv-core__viewer--dark{--rpv-full-screen__pages-background-color:#1a1a1a}.rpv-full-screen__exit-button{bottom:0;padding:.5rem;position:fixed;z-index:1}.rpv-full-screen__exit-button--ltr{right:0}.rpv-full-screen__exit-button--rtl{left:0}.rpv-full-screen__pages{background-color:var(--rpv-full-screen__pages-background-color)}.rpv-open__input-wrapper{position:relative}.rpv-open__input{bottom:0;cursor:pointer;display:none;height:100%;left:0;opacity:0;position:absolute;right:0;top:0;width:100%}.rpv-open__input::-webkit-file-upload-button{width:0}.rpv-page-navigation__current-page-input{margin:0 .25rem;text-align:right;width:3rem}:root{--rpv-print__progress-body-background-color:#fff;--rpv-print__progress-body-border-color:rgba(0,0,0,.3);--rpv-print__progress-body-color:#000}.rpv-core__viewer--dark{--rpv-print__progress-body-background-color:#363636;--rpv-print__progress-body-border-color:transparent;--rpv-print__progress-body-color:#fff}.rpv-print__permission-body{padding:1rem}.rpv-print__permission-footer{display:flex;justify-content:center;padding:0 1rem 1rem 0}.rpv-print__progress{align-items:center;display:flex;height:100%;justify-content:center;left:0;position:absolute;top:0;width:100%;z-index:9999}.rpv-print__progress-body{background-color:var(--rpv-print__progress-body-background-color);border:1px solid var(--rpv-print__progress-body-border-color);border-radius:.25rem;color:var(--rpv-print__progress-body-color);padding:1.5rem;text-align:center;width:15rem}.rpv-print__progress-body--rtl{direction:rtl}.rpv-print__progress-bar{margin-bottom:1rem}.rpv-print__progress-message{margin-bottom:.5rem}.rpv-print__zone{display:none}@media print{@page{margin:0}.rpv-print__html-printing{height:100%}.rpv-print__body-printing{height:100%;margin:0}.rpv-print__body-printing *{display:none}.rpv-print__zone{display:block;height:100%}.rpv-print__page{align-items:center;display:flex;flex-direction:column;height:100%;justify-content:center;page-break-after:always;page-break-inside:avoid;width:100%}.rpv-print__page img{display:block;max-height:100%;max-width:100%}}.rpv-properties__loader{text-align:center}.rpv-properties__modal{min-height:20rem;padding:.5rem 0}.rpv-properties__modal-section{padding:0 .5rem}.rpv-properties__modal-footer{display:flex;justify-content:center;margin-top:.5rem}.rpv-properties__item{align-items:flex-start;display:flex;margin:.5rem 0}.rpv-properties__item--rtl{direction:rtl}.rpv-properties__item-label{padding-right:.5rem;width:25%}.rpv-properties__item-value{flex:1}.rpv-search__highlights{height:100%;left:0;position:absolute;top:0;width:100%}.rpv-search__highlight{background-color:var(--rpv-search__highlight-background-color);border-radius:.25rem;position:absolute;z-index:1}.rpv-search__highlight--current{background-color:var(--rpv-search__highlight--current-background-color)}.rpv-search__popover{padding:0 .5rem}.rpv-search__popover-input-counter{align-items:center;display:flex;margin-bottom:.5rem;position:relative;width:12rem}.rpv-search__popover-counter{align-items:center;bottom:0;display:flex;position:absolute;top:0}.rpv-search__popover-counter--ltr{padding-right:.25rem;right:0}.rpv-search__popover-counter--rtl{left:0;padding-left:.25rem}.rpv-search__popover-label{align-items:center;display:flex;margin-bottom:.5rem}.rpv-search__popover-label-checkbox{margin-right:.25rem}.rpv-search__popover-footer{align-items:center;display:flex}.rpv-search__popover-footer-item{padding:0 .25rem}.rpv-search__popover-footer-button--ltr{margin-left:auto}.rpv-search__popover-footer-button--rtl{margin-right:auto}:root{--rpv-search__highlight-background-color:rgba(255,255,0,.4);--rpv-search__highlight--current-background-color:rgba(0,128,0,.4)}.rpv-selection-mode__grab{cursor:grab}.rpv-selection-mode__grab :not(input),.rpv-selection-mode__grab :not(select),.rpv-selection-mode__grab :not(textarea){cursor:grab!important}.rpv-selection-mode__grabbing{cursor:grabbing}.rpv-selection-mode__grabbing :not(input),.rpv-selection-mode__grabbing :not(select),.rpv-selection-mode__grabbing :not(textarea){cursor:grabbing!important}:root{--rpv-zoom__popover-target-arrow-border-color:rgba(0,0,0,.6)}.rpv-core__viewer--dark{--rpv-zoom__popover-target-arrow-border-color:#fff}.rpv-zoom__popover-target{align-items:center;color:var(--rpv-zoom__popover-target-color);display:flex}.rpv-zoom__popover-target-scale--ltr{margin-right:.25rem}.rpv-zoom__popover-target-scale--rtl{margin-left:.25rem}.rpv-zoom__popover-target-arrow{border-color:var(--rpv-zoom__popover-target-arrow-border-color) transparent transparent;border-style:solid;border-width:.5rem .25rem 0;height:0;width:0}:root{--rpv-toolbar__label--color:#000}.rpv-core__viewer--dark{--rpv-toolbar__label--color:#fff}.rpv-toolbar{align-items:center;display:flex;width:100%}.rpv-toolbar--rtl{direction:rtl}.rpv-toolbar__center,.rpv-toolbar__left{align-items:center;display:flex}.rpv-toolbar__center{flex-grow:1;flex-shrink:1;justify-content:center}.rpv-toolbar__right{align-items:center;display:flex;margin-left:auto}.rpv-toolbar__item{align-items:center;display:flex;padding:0 .125rem}.rpv-toolbar__label{color:var(--rpv-toolbar__label--color)}:root{--rpv-default-layout__body-background-color:#fff;--rpv-default-layout__container-border-color:rgba(0,0,0,.3);--rpv-default-layout__toolbar-background-color:#eee;--rpv-default-layout__toolbar-border-bottom-color:rgba(0,0,0,.1);--rpv-default-layout__sidebar-border-color:rgba(0,0,0,.2);--rpv-default-layout__sidebar--opened-background-color:#fff;--rpv-default-layout__sidebar-headers-background-color:#eee;--rpv-default-layout__sidebar-content--opened-background-color:#fff;--rpv-default-layout__sidebar-content--opened-border-color:rgba(0,0,0,.2);--rpv-default-layout__sidebar-content--opened-color:#000}.rpv-core__viewer--dark{--rpv-default-layout__body-background-color:#1a1a1a;--rpv-default-layout__container-border-color:#454647;--rpv-default-layout__toolbar-background-color:#292929;--rpv-default-layout__toolbar-border-bottom-color:#000;--rpv-default-layout__sidebar-border-color:#000;--rpv-default-layout__sidebar--opened-background-color:#fff;--rpv-default-layout__sidebar-headers-background-color:#292929;--rpv-default-layout__sidebar-content--opened-background-color:#1a1a1a;--rpv-default-layout__sidebar-content--opened-border-color:#292929;--rpv-default-layout__sidebar-content--opened-color:#fff}.rpv-default-layout__container{border:1px solid var(--rpv-default-layout__container-border-color);box-sizing:border-box;height:100%;width:100%}.rpv-default-layout__toolbar{align-items:center;background-color:var(--rpv-default-layout__toolbar-background-color);border-bottom:1px solid var(--rpv-default-layout__toolbar-border-bottom-color);display:flex;height:2.5rem;left:0;position:absolute;top:0;width:100%;z-index:1}.rpv-default-layout__sidebar{display:flex;padding-top:2.5rem}.rpv-default-layout__sidebar--opened{background-color:var(--rpv-default-layout__sidebar--opened-background-color);bottom:0;left:0;position:absolute;top:0;width:12rem;z-index:1}.rpv-default-layout__sidebar--ltr{border-right:1px solid var(--rpv-default-layout__sidebar-border-color)}.rpv-default-layout__sidebar--rtl{border-left:1px solid var(--rpv-default-layout__sidebar-border-color)}.rpv-default-layout__main{display:flex;height:100%;position:relative}.rpv-default-layout__main--rtl{direction:rtl}.rpv-default-layout__body{background-color:var(--rpv-default-layout__body-background-color);flex:1;overflow:auto;padding-top:2.5rem}@media (min-width:768px){.rpv-default-layout__sidebar--opened{width:16rem}}@media (min-width:1024px){.rpv-default-layout__sidebar--opened{background:inherit;position:inherit;width:20rem;z-index:inherit}}.rpv-default-layout__sidebar-tabs{display:flex;height:100%;width:100%}.rpv-default-layout__sidebar-headers{background-color:var(--rpv-default-layout__sidebar-headers-background-color);padding:.25rem}.rpv-default-layout__sidebar-header{padding:.125rem}.rpv-default-layout__sidebar-content{display:none;flex-grow:1;flex-shrink:1}.rpv-default-layout__sidebar-content--opened{background-color:var(--rpv-default-layout__sidebar-content--opened-background-color);color:var(--rpv-default-layout__sidebar-content--opened-color);display:flex;overflow:hidden}.rpv-default-layout__sidebar-content--ltr{border-left:1px solid var(--rpv-default-layout__sidebar-content--opened-border-color)}.rpv-default-layout__sidebar-content--rtl{border-right:1px solid var(--rpv-default-layout__sidebar-content--opened-border-color)}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/@react-pdf-viewer/default-layout/lib/styles/index.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Fluca%2FDocuments%2FGitHub%2Fshule%2Fpages%2FReferences%2FPhysics%2FFormOne%2F%5Bid%5D.tsx&page=%2FReferences%2FPhysics%2FFormOne%2F%5Bid%5D!":
/*!**********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Fluca%2FDocuments%2FGitHub%2Fshule%2Fpages%2FReferences%2FPhysics%2FFormOne%2F%5Bid%5D.tsx&page=%2FReferences%2FPhysics%2FFormOne%2F%5Bid%5D! ***!
  \**********************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/References/Physics/FormOne/[id]\",\n      function () {\n        return __webpack_require__(/*! ./pages/References/Physics/FormOne/[id].tsx */ \"./pages/References/Physics/FormOne/[id].tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/References/Physics/FormOne/[id]\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD0lMkZob21lJTJGbHVjYSUyRkRvY3VtZW50cyUyRkdpdEh1YiUyRnNodWxlJTJGcGFnZXMlMkZSZWZlcmVuY2VzJTJGUGh5c2ljcyUyRkZvcm1PbmUlMkYlNUJpZCU1RC50c3gmcGFnZT0lMkZSZWZlcmVuY2VzJTJGUGh5c2ljcyUyRkZvcm1PbmUlMkYlNUJpZCU1RCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnR0FBNkM7QUFDcEU7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzM5YWQiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9SZWZlcmVuY2VzL1BoeXNpY3MvRm9ybU9uZS9baWRdXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwiLi9wYWdlcy9SZWZlcmVuY2VzL1BoeXNpY3MvRm9ybU9uZS9baWRdLnRzeFwiKTtcbiAgICAgIH1cbiAgICBdKTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKCkge1xuICAgICAgICB3aW5kb3cuX19ORVhUX1AucHVzaChbXCIvUmVmZXJlbmNlcy9QaHlzaWNzL0Zvcm1PbmUvW2lkXVwiXSlcbiAgICAgIH0pO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Fluca%2FDocuments%2FGitHub%2Fshule%2Fpages%2FReferences%2FPhysics%2FFormOne%2F%5Bid%5D.tsx&page=%2FReferences%2FPhysics%2FFormOne%2F%5Bid%5D!\n"));

/***/ }),

/***/ "./styles/reviewDisplay.module.scss":
/*!******************************************!*\
  !*** ./styles/reviewDisplay.module.scss ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[2]!../node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[5].use[3]!../node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[4]!./reviewDisplay.module.scss */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[5].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[4]!./styles/reviewDisplay.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[2]!../node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[5].use[3]!../node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[4]!./reviewDisplay.module.scss */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[5].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[4]!./styles/reviewDisplay.module.scss\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[2]!../node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[5].use[3]!../node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[4]!./reviewDisplay.module.scss */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[5].use[2]!./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[2].oneOf[5].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[2].oneOf[5].use[4]!./styles/reviewDisplay.module.scss\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvcmV2aWV3RGlzcGxheS5tb2R1bGUuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsb05BQXdHO0FBQzFILDBCQUEwQixtQkFBTyxDQUFDLHk1QkFBeWM7O0FBRTNlOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLElBQUksSUFBVTtBQUNkLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLHk1QkFBeWM7QUFDL2M7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyx5NUJBQXljOztBQUVuZTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zdHlsZXMvcmV2aWV3RGlzcGxheS5tb2R1bGUuc2Nzcz9jYzZlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtc3R5bGUtbG9hZGVyL3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls1XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzVdLnVzZVsyXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9yZXNvbHZlLXVybC1sb2FkZXIvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNV0udXNlWzNdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvc2Fzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzVdLnVzZVs0XSEuL3Jldmlld0Rpc3BsYXkubW9kdWxlLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFRoZXNlIGVsZW1lbnRzIHNob3VsZCBhbHdheXMgZXhpc3QuIElmIHRoZXkgZG8gbm90LFxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIGNvZGUgc2hvdWxkIGZhaWwuXG4gICAgICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNfX25leHRfY3NzX19ET19OT1RfVVNFX19cIik7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnROb2RlID0gYW5jaG9yRWxlbWVudC5wYXJlbnROb2RlLy8gTm9ybWFsbHkgPGhlYWQ+XG4gICAgICAgICAgICAgICAgICAgIDtcbiAgICAgICAgICAgICAgICAgICAgLy8gRWFjaCBzdHlsZSB0YWcgc2hvdWxkIGJlIHBsYWNlZCByaWdodCBiZWZvcmUgb3VyXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuY2hvci4gQnkgaW5zZXJ0aW5nIGJlZm9yZSBhbmQgbm90IGFmdGVyLCB3ZSBkbyBub3RcbiAgICAgICAgICAgICAgICAgICAgLy8gbmVlZCB0byB0cmFjayB0aGUgbGFzdCBpbnNlcnRlZCBlbGVtZW50LlxuICAgICAgICAgICAgICAgICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtZW50LCBhbmNob3JFbGVtZW50KTtcbiAgICAgICAgICAgICAgICB9O1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLCBiLCBpc05hbWVkRXhwb3J0KSB7XG4gICAgaWYgKCFhICYmIGIgfHwgYSAmJiAhYikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBwO1xuICAgIGZvcihwIGluIGEpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFbcF0gIT09IGJbcF0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb3IocCBpbiBiKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghYVtwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufTtcbiAgICB2YXIgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcbiAgICAgIFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls1XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzVdLnVzZVsyXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9yZXNvbHZlLXVybC1sb2FkZXIvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNV0udXNlWzNdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvc2Fzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzVdLnVzZVs0XSEuL3Jldmlld0Rpc3BsYXkubW9kdWxlLnNjc3NcIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzVdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNV0udXNlWzJdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Jlc29sdmUtdXJsLWxvYWRlci9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls1XS51c2VbM10hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9zYXNzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNV0udXNlWzRdIS4vcmV2aWV3RGlzcGxheS5tb2R1bGUuc2Nzc1wiKTtcblxuICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFpc0VxdWFsTG9jYWxzKG9sZExvY2FscywgY29udGVudC5sb2NhbHMpKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgICAgICAgICAgICB1cGRhdGUoY29udGVudCk7XG4gICAgICB9XG4gICAgKVxuICB9XG5cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkge1xuICAgIHVwZGF0ZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./styles/reviewDisplay.module.scss\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/core/lib/styles/index.css":
/*!******************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/core/lib/styles/index.css ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../../../../next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!../../../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./index.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/@react-pdf-viewer/core/lib/styles/index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!../../../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./index.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/@react-pdf-viewer/core/lib/styles/index.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!../../../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./index.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/@react-pdf-viewer/core/lib/styles/index.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvY29yZS9saWIvc3R5bGVzL2luZGV4LmNzcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsZ05BQW9HO0FBQ3RILDBCQUEwQixtQkFBTyxDQUFDLG1nQkFBcU87O0FBRXZROztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLElBQUksSUFBVTtBQUNkLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLG1nQkFBcU87QUFDM087QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyxtZ0JBQXFPOztBQUUvUDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvY29yZS9saWIvc3R5bGVzL2luZGV4LmNzcz80ODM4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhcGkgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1zdHlsZS1sb2FkZXIvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbN10udXNlWzFdIS4uLy4uLy4uLy4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzddLnVzZVsyXSEuL2luZGV4LmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgY29kZSBzaG91bGQgZmFpbC5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI19fbmV4dF9jc3NfX0RPX05PVF9VU0VfX1wiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cbiAgICAgICAgICAgICAgICAgICAgO1xuICAgICAgICAgICAgICAgICAgICAvLyBFYWNoIHN0eWxlIHRhZyBzaG91bGQgYmUgcGxhY2VkIHJpZ2h0IGJlZm9yZSBvdXJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxuICAgICAgICAgICAgICAgICAgICAvLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnQsIGFuY2hvckVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcbiAgICBpZiAoIWEgJiYgYiB8fCBhICYmICFiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IHA7XG4gICAgZm9yKHAgaW4gYSl7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvcihwIGluIGIpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uLy4uLy4uLy4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbN10udXNlWzFdIS4uLy4uLy4uLy4uL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzddLnVzZVsyXSEuL2luZGV4LmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls3XS51c2VbMV0hLi4vLi4vLi4vLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbN10udXNlWzJdIS4vaW5kZXguY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/core/lib/styles/index.css\n"));

/***/ }),

/***/ "./node_modules/@react-pdf-viewer/default-layout/lib/styles/index.css":
/*!****************************************************************************!*\
  !*** ./node_modules/@react-pdf-viewer/default-layout/lib/styles/index.css ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../../../../next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../../../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!../../../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./index.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/@react-pdf-viewer/default-layout/lib/styles/index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../../../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!../../../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./index.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/@react-pdf-viewer/default-layout/lib/styles/index.css\",\n      function () {\n        content = __webpack_require__(/*! !!../../../../next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!../../../../next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./index.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[7].use[2]!./node_modules/@react-pdf-viewer/default-layout/lib/styles/index.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJlYWN0LXBkZi12aWV3ZXIvZGVmYXVsdC1sYXlvdXQvbGliL3N0eWxlcy9pbmRleC5jc3MuanMiLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLGdOQUFvRztBQUN0SCwwQkFBMEIsbUJBQU8sQ0FBQyw2Z0JBQXFPOztBQUV2UTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxpQkFBaUI7QUFDckIsTUFBTSw2Z0JBQXFPO0FBQzNPO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsNmdCQUFxTzs7QUFFL1A7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLFVBQVU7O0FBRTFCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxVQUFVO0FBQ1o7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByZWFjdC1wZGYtdmlld2VyL2RlZmF1bHQtbGF5b3V0L2xpYi9zdHlsZXMvaW5kZXguY3NzP2YxNWIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls3XS51c2VbMV0hLi4vLi4vLi4vLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbN10udXNlWzJdIS4vaW5kZXguY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBUaGVzZSBlbGVtZW50cyBzaG91bGQgYWx3YXlzIGV4aXN0LiBJZiB0aGV5IGRvIG5vdCxcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBjb2RlIHNob3VsZCBmYWlsLlxuICAgICAgICAgICAgICAgICAgICB2YXIgYW5jaG9yRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjX19uZXh0X2Nzc19fRE9fTk9UX1VTRV9fXCIpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50Tm9kZSA9IGFuY2hvckVsZW1lbnQucGFyZW50Tm9kZS8vIE5vcm1hbGx5IDxoZWFkPlxuICAgICAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuICAgICAgICAgICAgICAgICAgICAvLyBhbmNob3IuIEJ5IGluc2VydGluZyBiZWZvcmUgYW5kIG5vdCBhZnRlciwgd2UgZG8gbm90XG4gICAgICAgICAgICAgICAgICAgIC8vIG5lZWQgdG8gdHJhY2sgdGhlIGxhc3QgaW5zZXJ0ZWQgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfTtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSwgYiwgaXNOYW1lZEV4cG9ydCkge1xuICAgIGlmICghYSAmJiBiIHx8IGEgJiYgIWIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgcDtcbiAgICBmb3IocCBpbiBhKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhW3BdICE9PSBiW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yKHAgaW4gYil7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWFbcF0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG4gICAgdmFyIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXG4gICAgICBcIiEhLi4vLi4vLi4vLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls3XS51c2VbMV0hLi4vLi4vLi4vLi4vbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbN10udXNlWzJdIS4vaW5kZXguY3NzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzddLnVzZVsxXSEuLi8uLi8uLi8uLi9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls3XS51c2VbMl0hLi9pbmRleC5jc3NcIik7XG5cbiAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGNvbnRlbnQubG9jYWxzKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@react-pdf-viewer/default-layout/lib/styles/index.css\n"));

/***/ }),

/***/ "./components/tools/PdfViewer.tsx":
/*!****************************************!*\
  !*** ./components/tools/PdfViewer.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ pdf; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _react_pdf_viewer_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-pdf-viewer/core */ \"./node_modules/@react-pdf-viewer/core/lib/index.js\");\n/* harmony import */ var _react_pdf_viewer_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_react_pdf_viewer_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _react_pdf_viewer_default_layout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-pdf-viewer/default-layout */ \"./node_modules/@react-pdf-viewer/default-layout/lib/index.js\");\n/* harmony import */ var _react_pdf_viewer_default_layout__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_react_pdf_viewer_default_layout__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _react_pdf_viewer_core_lib_styles_index_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @react-pdf-viewer/core/lib/styles/index.css */ \"./node_modules/@react-pdf-viewer/core/lib/styles/index.css\");\n/* harmony import */ var _react_pdf_viewer_core_lib_styles_index_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_react_pdf_viewer_core_lib_styles_index_css__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _react_pdf_viewer_default_layout_lib_styles_index_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @react-pdf-viewer/default-layout/lib/styles/index.css */ \"./node_modules/@react-pdf-viewer/default-layout/lib/styles/index.css\");\n/* harmony import */ var _react_pdf_viewer_default_layout_lib_styles_index_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_react_pdf_viewer_default_layout_lib_styles_index_css__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\nvar _s = $RefreshSig$();\nfunction pdf(param) {\n    var url = param.url;\n    var onItemClick = function onItemClick(param) {\n        var itemPageNumber = param.pageNumber;\n        setPageNumber(itemPageNumber);\n    };\n    _s();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(1), pageNumber = ref[0], setPageNumber = ref[1];\n    var defaultLayoutPluginInstance = (0,_react_pdf_viewer_default_layout__WEBPACK_IMPORTED_MODULE_3__.defaultLayoutPlugin)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_pdf_viewer_core__WEBPACK_IMPORTED_MODULE_1__.Worker, {\n        workerUrl: \"https://unpkg.com/pdfjs-dist@2.14.305/build/pdf.worker.min.js\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                height: \"750px\"\n            },\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_pdf_viewer_core__WEBPACK_IMPORTED_MODULE_1__.Viewer, {\n                fileUrl: url,\n                plugins: [\n                    defaultLayoutPluginInstance\n                ]\n            }, void 0, false, {\n                fileName: \"/home/luca/Documents/GitHub/shule/components/tools/PdfViewer.tsx\",\n                lineNumber: 23,\n                columnNumber: 5\n            }, this)\n        }, void 0, false, {\n            fileName: \"/home/luca/Documents/GitHub/shule/components/tools/PdfViewer.tsx\",\n            lineNumber: 22,\n            columnNumber: 4\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/luca/Documents/GitHub/shule/components/tools/PdfViewer.tsx\",\n        lineNumber: 21,\n        columnNumber: 3\n    }, this);\n};\n_s(pdf, \"vpR6s6c+pWN9iYRRE4XhvQBqRwA=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL3Rvb2xzL1BkZlZpZXdlci50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQXdEO0FBQ2hCO0FBQytCO0FBRWxCO0FBQ1U7O0FBT2hELFNBQVNLLEdBQUcsQ0FBQyxLQUFpQixFQUFFO1FBQW5CLEdBQUssR0FBTCxLQUFpQixDQUFmQyxHQUFHO1FBR3ZCQyxXQUFXLEdBQXBCLFNBQVNBLFdBQVcsQ0FBQyxLQUFtQyxFQUFFO1lBQW5DQyxjQUEwQixHQUE1QixLQUFtQyxDQUFqQ0EsVUFBVTtRQUNoQ0UsYUFBYSxDQUFDRCxjQUFjLENBQUMsQ0FBQztLQUM5Qjs7SUFKRCxJQUFvQ04sR0FBVyxHQUFYQSwrQ0FBUSxDQUFDLENBQUMsQ0FBQyxFQUF4Q0ssVUFBVSxHQUFtQkwsR0FBVyxHQUE5QixFQUFFTyxhQUFhLEdBQUlQLEdBQVcsR0FBZjtJQUNoQyxJQUFNUSwyQkFBMkIsR0FBR1AscUZBQW1CLEVBQUU7SUFLekQscUJBQ0MsOERBQUNKLDBEQUFNO1FBQUNZLFNBQVMsRUFBQywrREFBK0Q7a0JBQ2hGLDRFQUFDQyxLQUFHO1lBQUNDLEtBQUssRUFBRTtnQkFBRUMsTUFBTSxFQUFFLE9BQU87YUFBRTtzQkFDOUIsNEVBQUNkLDBEQUFNO2dCQUFDZSxPQUFPLEVBQUVWLEdBQUc7Z0JBQUVXLE9BQU8sRUFBRTtvQkFBQ04sMkJBQTJCO2lCQUFDOzs7OztvQkFBSTs7Ozs7Z0JBQzNEOzs7OztZQUNFLENBQ1I7Q0FDRjtHQWR1Qk4sR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL3Rvb2xzL1BkZlZpZXdlci50c3g/Y2M5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXb3JrZXIsIFZpZXdlciB9IGZyb20gJ0ByZWFjdC1wZGYtdmlld2VyL2NvcmUnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZGVmYXVsdExheW91dFBsdWdpbiB9IGZyb20gJ0ByZWFjdC1wZGYtdmlld2VyL2RlZmF1bHQtbGF5b3V0JztcblxuaW1wb3J0ICdAcmVhY3QtcGRmLXZpZXdlci9jb3JlL2xpYi9zdHlsZXMvaW5kZXguY3NzJztcbmltcG9ydCAnQHJlYWN0LXBkZi12aWV3ZXIvZGVmYXVsdC1sYXlvdXQvbGliL3N0eWxlcy9pbmRleC5jc3MnO1xuaW1wb3J0IHsgdHlwZSB9IGZyb20gJ29zJztcblxudHlwZSBkYXRhVHlwZSA9IHtcblx0dXJsOiBzdHJpbmc7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwZGYoeyB1cmwgfTogZGF0YVR5cGUpIHtcblx0Y29uc3QgW3BhZ2VOdW1iZXIsIHNldFBhZ2VOdW1iZXJdID0gdXNlU3RhdGUoMSk7XG5cdGNvbnN0IGRlZmF1bHRMYXlvdXRQbHVnaW5JbnN0YW5jZSA9IGRlZmF1bHRMYXlvdXRQbHVnaW4oKTtcblx0ZnVuY3Rpb24gb25JdGVtQ2xpY2soeyBwYWdlTnVtYmVyOiBpdGVtUGFnZU51bWJlciB9OiBhbnkpIHtcblx0XHRzZXRQYWdlTnVtYmVyKGl0ZW1QYWdlTnVtYmVyKTtcblx0fVxuXG5cdHJldHVybiAoXG5cdFx0PFdvcmtlciB3b3JrZXJVcmw9J2h0dHBzOi8vdW5wa2cuY29tL3BkZmpzLWRpc3RAMi4xNC4zMDUvYnVpbGQvcGRmLndvcmtlci5taW4uanMnPlxuXHRcdFx0PGRpdiBzdHlsZT17eyBoZWlnaHQ6ICc3NTBweCcgfX0+XG5cdFx0XHRcdDxWaWV3ZXIgZmlsZVVybD17dXJsfSBwbHVnaW5zPXtbZGVmYXVsdExheW91dFBsdWdpbkluc3RhbmNlXX0gLz5cblx0XHRcdDwvZGl2PlxuXHRcdDwvV29ya2VyPlxuXHQpO1xufVxuIl0sIm5hbWVzIjpbIldvcmtlciIsIlZpZXdlciIsIlJlYWN0IiwidXNlU3RhdGUiLCJkZWZhdWx0TGF5b3V0UGx1Z2luIiwicGRmIiwidXJsIiwib25JdGVtQ2xpY2siLCJwYWdlTnVtYmVyIiwiaXRlbVBhZ2VOdW1iZXIiLCJzZXRQYWdlTnVtYmVyIiwiZGVmYXVsdExheW91dFBsdWdpbkluc3RhbmNlIiwid29ya2VyVXJsIiwiZGl2Iiwic3R5bGUiLCJoZWlnaHQiLCJmaWxlVXJsIiwicGx1Z2lucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/tools/PdfViewer.tsx\n"));

/***/ }),

/***/ "./pages/References/Physics/FormOne/[id].tsx":
/*!***************************************************!*\
  !*** ./pages/References/Physics/FormOne/[id].tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__N_SSG\": function() { return /* binding */ __N_SSG; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_reviewDisplay_module_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../styles/reviewDisplay.module.scss */ \"./styles/reviewDisplay.module.scss\");\n/* harmony import */ var _styles_reviewDisplay_module_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_styles_reviewDisplay_module_scss__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _mui_icons_material_ChevronRightOutlined__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/icons-material/ChevronRightOutlined */ \"./node_modules/@mui/icons-material/ChevronRightOutlined.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_context_StateContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../components/context/StateContext */ \"./components/context/StateContext.tsx\");\n/* harmony import */ var _components_tools_PdfViewer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../components/tools/PdfViewer */ \"./components/tools/PdfViewer.tsx\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_5__);\nvar _this = undefined;\n\n\n\n\n\n\n\n\nvar _s = $RefreshSig$();\nvar subjectLocatorLink = \"Physics\";\nvar formLocatorLink = \"FormOne\";\nvar Index = function(param) {\n    var reference = param.reference;\n    _s();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_components_context_StateContext__WEBPACK_IMPORTED_MODULE_3__.NavContext), navActive = ref.navActive, setNavActive = ref.setNavActive;\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        setNavActive(\"References\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        navActive\n    ]);\n    //!mambo yanaanza\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_styles_reviewDisplay_module_scss__WEBPACK_IMPORTED_MODULE_6___default().container),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: reference.name\n                    }, void 0, false, {\n                        fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                        lineNumber: 104,\n                        columnNumber: 5\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"initial-scale=1.0, width=device-width\"\n                    }, void 0, false, {\n                        fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                        lineNumber: 105,\n                        columnNumber: 5\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"description\",\n                        content: reference.description\n                    }, void 0, false, {\n                        fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                        lineNumber: 106,\n                        columnNumber: 5\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"keywords\",\n                        content: reference.description\n                    }, void 0, false, {\n                        fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                        lineNumber: 108,\n                        columnNumber: 5\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                lineNumber: 103,\n                columnNumber: 4\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_styles_reviewDisplay_module_scss__WEBPACK_IMPORTED_MODULE_6___default().innerContainer),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: (_styles_reviewDisplay_module_scss__WEBPACK_IMPORTED_MODULE_6___default().rightInnercontainerBody),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: (_styles_reviewDisplay_module_scss__WEBPACK_IMPORTED_MODULE_6___default().BodyHeader),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: (_styles_reviewDisplay_module_scss__WEBPACK_IMPORTED_MODULE_6___default().statusBar),\n                                    children: [\n                                        reference.subjectReference.subjectName,\n                                        \" \",\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_ChevronRightOutlined__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {}, void 0, false, {\n                                            fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                                            lineNumber: 115,\n                                            columnNumber: 8\n                                        }, _this),\n                                        \" \",\n                                        reference.name\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                                    lineNumber: 113,\n                                    columnNumber: 7\n                                }, _this),\n                                reference.isPdf && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_5___default()), {\n                                        href: \"/References/Download?id=\".concat(reference.id),\n                                        passHref: true,\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: (_styles_reviewDisplay_module_scss__WEBPACK_IMPORTED_MODULE_6___default().download),\n                                                children: \"Download\"\n                                            }, void 0, false, {\n                                                fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                                                lineNumber: 121,\n                                                columnNumber: 11\n                                            }, _this)\n                                        }, void 0, false, {\n                                            fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                                            lineNumber: 120,\n                                            columnNumber: 10\n                                        }, _this)\n                                    }, void 0, false, {\n                                        fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                                        lineNumber: 119,\n                                        columnNumber: 9\n                                    }, _this)\n                                }, void 0, false)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                            lineNumber: 112,\n                            columnNumber: 6\n                        }, _this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: (_styles_reviewDisplay_module_scss__WEBPACK_IMPORTED_MODULE_6___default().BodyContent),\n                            children: [\n                                reference.isPdf && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: (_styles_reviewDisplay_module_scss__WEBPACK_IMPORTED_MODULE_6___default().headerHead),\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: (_styles_reviewDisplay_module_scss__WEBPACK_IMPORTED_MODULE_6___default().header),\n                                            children: \"Book Description\"\n                                        }, void 0, false, {\n                                            fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                                            lineNumber: 130,\n                                            columnNumber: 9\n                                        }, _this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: (_styles_reviewDisplay_module_scss__WEBPACK_IMPORTED_MODULE_6___default().description),\n                                            children: reference.description\n                                        }, void 0, false, {\n                                            fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                                            lineNumber: 131,\n                                            columnNumber: 9\n                                        }, _this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                                    lineNumber: 129,\n                                    columnNumber: 8\n                                }, _this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: reference.isPdf ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_tools_PdfViewer__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                        url: \"/min.pdf\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                                        lineNumber: 138,\n                                        columnNumber: 9\n                                    }, _this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"ckContent\",\n                                        dangerouslySetInnerHTML: {\n                                            __html: reference.data\n                                        }\n                                    }, void 0, false, {\n                                        fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                                        lineNumber: 140,\n                                        columnNumber: 9\n                                    }, _this)\n                                }, void 0, false, {\n                                    fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                                    lineNumber: 136,\n                                    columnNumber: 7\n                                }, _this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                            lineNumber: 127,\n                            columnNumber: 6\n                        }, _this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                    lineNumber: 111,\n                    columnNumber: 5\n                }, _this)\n            }, void 0, false, {\n                fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n                lineNumber: 110,\n                columnNumber: 4\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/luca/Documents/GitHub/shule/pages/References/Physics/FormOne/[id].tsx\",\n        lineNumber: 102,\n        columnNumber: 3\n    }, _this);\n};\n_s(Index, \"8XnDBuqwid0ybPU6g7WdH1V+qSo=\");\n_c = Index;\nvar __N_SSG = true;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Index);\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/References/Physics/FormOne/[id].tsx\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/native-url/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/compiled/native-url/index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={477:function(e){\"use strict\";e.exports=__webpack_require__(/*! querystring */ \"./node_modules/next/dist/compiled/querystring-es3/index.js\")}};var t={};function __nccwpck_require__(o){var a=t[o];if(a!==undefined){return a.exports}var s=t[o]={exports:{}};var n=true;try{e[o](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete t[o]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o={};!function(){var e=o;var t,a=(t=__nccwpck_require__(477))&&\"object\"==typeof t&&\"default\"in t?t.default:t,s=/https?|ftp|gopher|file/;function r(e){\"string\"==typeof e&&(e=d(e));var t=function(e,t,o){var a=e.auth,s=e.hostname,n=e.protocol||\"\",p=e.pathname||\"\",c=e.hash||\"\",i=e.query||\"\",u=!1;a=a?encodeURIComponent(a).replace(/%3A/i,\":\")+\"@\":\"\",e.host?u=a+e.host:s&&(u=a+(~s.indexOf(\":\")?\"[\"+s+\"]\":s),e.port&&(u+=\":\"+e.port)),i&&\"object\"==typeof i&&(i=t.encode(i));var f=e.search||i&&\"?\"+i||\"\";return n&&\":\"!==n.substr(-1)&&(n+=\":\"),e.slashes||(!n||o.test(n))&&!1!==u?(u=\"//\"+(u||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):u||(u=\"\"),c&&\"#\"!==c[0]&&(c=\"#\"+c),f&&\"?\"!==f[0]&&(f=\"?\"+f),{protocol:n,host:u,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:f=f.replace(\"#\",\"%23\"),hash:c}}(e,a,s);return\"\"+t.protocol+t.host+t.pathname+t.search+t.hash}var n=\"http://\",p=\"w.w\",c=n+p,i=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,u=/https?|ftp|gopher|file/;function h(e,t){var o=\"string\"==typeof e?d(e):e;e=\"object\"==typeof e?r(e):e;var a=d(t),s=\"\";o.protocol&&!o.slashes&&(s=o.protocol,e=e.replace(o.protocol,\"\"),s+=\"/\"===t[0]||\"/\"===e[0]?\"/\":\"\"),s&&a.protocol&&(s=\"\",a.slashes||(s=a.protocol,t=t.replace(a.protocol,\"\")));var p=e.match(i);p&&!a.protocol&&(e=e.substr((s=p[1]+(p[2]||\"\")).length),/^\\/\\/[^/]/.test(t)&&(s=s.slice(0,-1)));var f=new URL(e,c+\"/\"),m=new URL(t,f).toString().replace(c,\"\"),v=a.protocol||o.protocol;return v+=o.slashes||a.slashes?\"//\":\"\",!s&&v?m=m.replace(n,v):s&&(m=m.replace(n,\"\")),u.test(m)||~t.indexOf(\".\")||\"/\"===e.slice(-1)||\"/\"===t.slice(-1)||\"/\"!==m.slice(-1)||(m=m.slice(0,-1)),s&&(m=s+(\"/\"===m[0]?m.substr(1):m)),m}function l(){}l.prototype.parse=d,l.prototype.format=r,l.prototype.resolve=h,l.prototype.resolveObject=h;var f=/^https?|ftp|gopher|file/,m=/^(.*?)([#?].*)/,v=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,_=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,b=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function d(e,t,o){if(void 0===t&&(t=!1),void 0===o&&(o=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var s=(e=e.trim()).match(m);e=s?s[1].replace(/\\\\/g,\"/\")+s[2]:e.replace(/\\\\/g,\"/\"),b.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var n=!/(^javascript)/.test(e)&&e.match(v),i=_.test(e),u=\"\";n&&(f.test(n[1])||(u=n[1].toLowerCase(),e=\"\"+n[2]+n[3]),n[2]||(i=!1,f.test(n[1])?(u=n[1],e=\"\"+n[3]):e=\"//\"+n[3]),3!==n[2].length&&1!==n[2].length||(u=n[1],e=\"/\"+n[3]));var g,y=(s?s[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),w=y&&y[1],C=new l,U=\"\",j=\"\";try{g=new URL(e)}catch(t){U=t,u||o||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(j=\"/\",e=e.substr(1));try{g=new URL(e,c)}catch(e){return C.protocol=u,C.href=u,C}}C.slashes=i&&!j,C.host=g.host===p?\"\":g.host,C.hostname=g.hostname===p?\"\":g.hostname.replace(/(\\[|\\])/g,\"\"),C.protocol=U?u||null:g.protocol,C.search=g.search.replace(/\\\\/g,\"%5C\"),C.hash=g.hash.replace(/\\\\/g,\"%5C\");var x=e.split(\"#\");!C.search&&~x[0].indexOf(\"?\")&&(C.search=\"?\"),C.hash||\"\"!==x[1]||(C.hash=\"#\"),C.query=t?a.decode(g.search.substr(1)):C.search.substr(1),C.pathname=j+(n?function(e){return e.replace(/['^|`]/g,(function(e){return\"%\"+e.charCodeAt().toString(16).toUpperCase()})).replace(/((?:%[0-9A-F]{2})+)/g,(function(e,t){try{return decodeURIComponent(t).split(\"\").map((function(e){var t=e.charCodeAt();return t>256||/^[a-z0-9]$/i.test(e)?e:\"%\"+t.toString(16).toUpperCase()})).join(\"\")}catch(e){return t}}))}(g.pathname):g.pathname),\"about:\"===C.protocol&&\"blank\"===C.pathname&&(C.protocol=\"\",C.pathname=\"\"),U&&\"/\"!==e[0]&&(C.pathname=C.pathname.substr(1)),u&&!f.test(u)&&\"/\"!==e.slice(-1)&&\"/\"===C.pathname&&(C.pathname=\"\"),C.path=C.pathname+C.search,C.auth=[g.username,g.password].map(decodeURIComponent).filter(Boolean).join(\":\"),C.port=g.port,w&&!C.host.endsWith(w)&&(C.host+=w,C.port=w.slice(1)),C.href=j?\"\"+C.pathname+C.search+C.hash:r(C);var q=/^(file)/.test(C.href)?[\"host\",\"hostname\"]:[];return Object.keys(C).forEach((function(e){~q.indexOf(e)||(C[e]=C[e]||null)})),C}e.parse=d,e.format=r,e.resolve=h,e.resolveObject=function(e,t){return d(h(e,t))},e.Url=l}();module.exports=o})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL25hdGl2ZS11cmwvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFlBQVksT0FBTyxnQkFBZ0IsYUFBYSxVQUFVLG1CQUFPLENBQUMsK0VBQWEsSUFBSSxTQUFTLGdDQUFnQyxXQUFXLGtCQUFrQixpQkFBaUIsWUFBWSxZQUFZLFdBQVcsSUFBSSxzQ0FBc0MsUUFBUSxRQUFRLGlCQUFpQixpQkFBaUIsbUVBQW1FLFNBQVMsS0FBSyxTQUFTLFlBQVksUUFBUSwrR0FBK0csY0FBYyw2QkFBNkIsc0JBQXNCLDRGQUE0Riw2S0FBNkssNkJBQTZCLGlMQUFpTCx5R0FBeUcsUUFBUSxzREFBc0QsdUdBQXVHLGdCQUFnQixnQ0FBZ0MsNEJBQTRCLGdCQUFnQiw4S0FBOEssaUJBQWlCLGdHQUFnRyx3RkFBd0Ysa09BQWtPLGNBQWMsMkZBQTJGLDBFQUEwRSxJQUFJLDZEQUE2RCxJQUFJLGFBQWEsa0JBQWtCLHdGQUF3Riw0QkFBNEIsNkZBQTZGLDREQUE0RCx3S0FBd0ssMkZBQTJGLElBQUksYUFBYSxTQUFTLHlFQUF5RSxJQUFJLGVBQWUsU0FBUyxnQ0FBZ0MscU5BQXFOLG1CQUFtQixvS0FBb0ssd0NBQXdDLG9EQUFvRCwwQkFBMEIsRUFBRSxxQkFBcUIsSUFBSSx3REFBd0QscUJBQXFCLHVFQUF1RSxZQUFZLFNBQVMsVUFBVSxHQUFHLHFiQUFxYixvREFBb0QsMkNBQTJDLGlDQUFpQyxLQUFLLCtEQUErRCxpQkFBaUIsU0FBUyxHQUFHLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL25hdGl2ZS11cmwvaW5kZXguanM/NzI0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17NDc3OmZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO2UuZXhwb3J0cz1yZXF1aXJlKFwicXVlcnlzdHJpbmdcIil9fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKG8pe3ZhciBhPXRbb107aWYoYSE9PXVuZGVmaW5lZCl7cmV0dXJuIGEuZXhwb3J0c312YXIgcz10W29dPXtleHBvcnRzOnt9fTt2YXIgbj10cnVlO3RyeXtlW29dKHMscy5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO249ZmFsc2V9ZmluYWxseXtpZihuKWRlbGV0ZSB0W29dfXJldHVybiBzLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciBvPXt9OyFmdW5jdGlvbigpe3ZhciBlPW87dmFyIHQsYT0odD1fX25jY3dwY2tfcmVxdWlyZV9fKDQ3NykpJiZcIm9iamVjdFwiPT10eXBlb2YgdCYmXCJkZWZhdWx0XCJpbiB0P3QuZGVmYXVsdDp0LHM9L2h0dHBzP3xmdHB8Z29waGVyfGZpbGUvO2Z1bmN0aW9uIHIoZSl7XCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPWQoZSkpO3ZhciB0PWZ1bmN0aW9uKGUsdCxvKXt2YXIgYT1lLmF1dGgscz1lLmhvc3RuYW1lLG49ZS5wcm90b2NvbHx8XCJcIixwPWUucGF0aG5hbWV8fFwiXCIsYz1lLmhhc2h8fFwiXCIsaT1lLnF1ZXJ5fHxcIlwiLHU9ITE7YT1hP2VuY29kZVVSSUNvbXBvbmVudChhKS5yZXBsYWNlKC8lM0EvaSxcIjpcIikrXCJAXCI6XCJcIixlLmhvc3Q/dT1hK2UuaG9zdDpzJiYodT1hKyh+cy5pbmRleE9mKFwiOlwiKT9cIltcIitzK1wiXVwiOnMpLGUucG9ydCYmKHUrPVwiOlwiK2UucG9ydCkpLGkmJlwib2JqZWN0XCI9PXR5cGVvZiBpJiYoaT10LmVuY29kZShpKSk7dmFyIGY9ZS5zZWFyY2h8fGkmJlwiP1wiK2l8fFwiXCI7cmV0dXJuIG4mJlwiOlwiIT09bi5zdWJzdHIoLTEpJiYobis9XCI6XCIpLGUuc2xhc2hlc3x8KCFufHxvLnRlc3QobikpJiYhMSE9PXU/KHU9XCIvL1wiKyh1fHxcIlwiKSxwJiZcIi9cIiE9PXBbMF0mJihwPVwiL1wiK3ApKTp1fHwodT1cIlwiKSxjJiZcIiNcIiE9PWNbMF0mJihjPVwiI1wiK2MpLGYmJlwiP1wiIT09ZlswXSYmKGY9XCI/XCIrZikse3Byb3RvY29sOm4saG9zdDp1LHBhdGhuYW1lOnA9cC5yZXBsYWNlKC9bPyNdL2csZW5jb2RlVVJJQ29tcG9uZW50KSxzZWFyY2g6Zj1mLnJlcGxhY2UoXCIjXCIsXCIlMjNcIiksaGFzaDpjfX0oZSxhLHMpO3JldHVyblwiXCIrdC5wcm90b2NvbCt0Lmhvc3QrdC5wYXRobmFtZSt0LnNlYXJjaCt0Lmhhc2h9dmFyIG49XCJodHRwOi8vXCIscD1cIncud1wiLGM9bitwLGk9L14oW2EtejAtOS4rLV0qOlxcL1xcL1xcLykoW2EtejAtOS4rLV06XFwvKik/L2ksdT0vaHR0cHM/fGZ0cHxnb3BoZXJ8ZmlsZS87ZnVuY3Rpb24gaChlLHQpe3ZhciBvPVwic3RyaW5nXCI9PXR5cGVvZiBlP2QoZSk6ZTtlPVwib2JqZWN0XCI9PXR5cGVvZiBlP3IoZSk6ZTt2YXIgYT1kKHQpLHM9XCJcIjtvLnByb3RvY29sJiYhby5zbGFzaGVzJiYocz1vLnByb3RvY29sLGU9ZS5yZXBsYWNlKG8ucHJvdG9jb2wsXCJcIikscys9XCIvXCI9PT10WzBdfHxcIi9cIj09PWVbMF0/XCIvXCI6XCJcIikscyYmYS5wcm90b2NvbCYmKHM9XCJcIixhLnNsYXNoZXN8fChzPWEucHJvdG9jb2wsdD10LnJlcGxhY2UoYS5wcm90b2NvbCxcIlwiKSkpO3ZhciBwPWUubWF0Y2goaSk7cCYmIWEucHJvdG9jb2wmJihlPWUuc3Vic3RyKChzPXBbMV0rKHBbMl18fFwiXCIpKS5sZW5ndGgpLC9eXFwvXFwvW14vXS8udGVzdCh0KSYmKHM9cy5zbGljZSgwLC0xKSkpO3ZhciBmPW5ldyBVUkwoZSxjK1wiL1wiKSxtPW5ldyBVUkwodCxmKS50b1N0cmluZygpLnJlcGxhY2UoYyxcIlwiKSx2PWEucHJvdG9jb2x8fG8ucHJvdG9jb2w7cmV0dXJuIHYrPW8uc2xhc2hlc3x8YS5zbGFzaGVzP1wiLy9cIjpcIlwiLCFzJiZ2P209bS5yZXBsYWNlKG4sdik6cyYmKG09bS5yZXBsYWNlKG4sXCJcIikpLHUudGVzdChtKXx8fnQuaW5kZXhPZihcIi5cIil8fFwiL1wiPT09ZS5zbGljZSgtMSl8fFwiL1wiPT09dC5zbGljZSgtMSl8fFwiL1wiIT09bS5zbGljZSgtMSl8fChtPW0uc2xpY2UoMCwtMSkpLHMmJihtPXMrKFwiL1wiPT09bVswXT9tLnN1YnN0cigxKTptKSksbX1mdW5jdGlvbiBsKCl7fWwucHJvdG90eXBlLnBhcnNlPWQsbC5wcm90b3R5cGUuZm9ybWF0PXIsbC5wcm90b3R5cGUucmVzb2x2ZT1oLGwucHJvdG90eXBlLnJlc29sdmVPYmplY3Q9aDt2YXIgZj0vXmh0dHBzP3xmdHB8Z29waGVyfGZpbGUvLG09L14oLio/KShbIz9dLiopLyx2PS9eKFthLXowLTkuKy1dKjopKFxcL3swLDN9KSguKikvaSxfPS9eKFthLXowLTkuKy1dKjopP1xcL1xcL1xcLyovaSxiPS9eKFthLXowLTkuKy1dKjopKFxcL3swLDJ9KVxcWyguKilcXF0kL2k7ZnVuY3Rpb24gZChlLHQsbyl7aWYodm9pZCAwPT09dCYmKHQ9ITEpLHZvaWQgMD09PW8mJihvPSExKSxlJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmZSBpbnN0YW5jZW9mIGwpcmV0dXJuIGU7dmFyIHM9KGU9ZS50cmltKCkpLm1hdGNoKG0pO2U9cz9zWzFdLnJlcGxhY2UoL1xcXFwvZyxcIi9cIikrc1syXTplLnJlcGxhY2UoL1xcXFwvZyxcIi9cIiksYi50ZXN0KGUpJiZcIi9cIiE9PWUuc2xpY2UoLTEpJiYoZSs9XCIvXCIpO3ZhciBuPSEvKF5qYXZhc2NyaXB0KS8udGVzdChlKSYmZS5tYXRjaCh2KSxpPV8udGVzdChlKSx1PVwiXCI7biYmKGYudGVzdChuWzFdKXx8KHU9blsxXS50b0xvd2VyQ2FzZSgpLGU9XCJcIituWzJdK25bM10pLG5bMl18fChpPSExLGYudGVzdChuWzFdKT8odT1uWzFdLGU9XCJcIituWzNdKTplPVwiLy9cIituWzNdKSwzIT09blsyXS5sZW5ndGgmJjEhPT1uWzJdLmxlbmd0aHx8KHU9blsxXSxlPVwiL1wiK25bM10pKTt2YXIgZyx5PShzP3NbMV06ZSkubWF0Y2goL15odHRwcz86XFwvXFwvW14vXSsoOlswLTldKykoPz1cXC98JCkvKSx3PXkmJnlbMV0sQz1uZXcgbCxVPVwiXCIsaj1cIlwiO3RyeXtnPW5ldyBVUkwoZSl9Y2F0Y2godCl7VT10LHV8fG98fCEvXlxcL1xcLy8udGVzdChlKXx8L15cXC9cXC8uK1tALl0vLnRlc3QoZSl8fChqPVwiL1wiLGU9ZS5zdWJzdHIoMSkpO3RyeXtnPW5ldyBVUkwoZSxjKX1jYXRjaChlKXtyZXR1cm4gQy5wcm90b2NvbD11LEMuaHJlZj11LEN9fUMuc2xhc2hlcz1pJiYhaixDLmhvc3Q9Zy5ob3N0PT09cD9cIlwiOmcuaG9zdCxDLmhvc3RuYW1lPWcuaG9zdG5hbWU9PT1wP1wiXCI6Zy5ob3N0bmFtZS5yZXBsYWNlKC8oXFxbfFxcXSkvZyxcIlwiKSxDLnByb3RvY29sPVU/dXx8bnVsbDpnLnByb3RvY29sLEMuc2VhcmNoPWcuc2VhcmNoLnJlcGxhY2UoL1xcXFwvZyxcIiU1Q1wiKSxDLmhhc2g9Zy5oYXNoLnJlcGxhY2UoL1xcXFwvZyxcIiU1Q1wiKTt2YXIgeD1lLnNwbGl0KFwiI1wiKTshQy5zZWFyY2gmJn54WzBdLmluZGV4T2YoXCI/XCIpJiYoQy5zZWFyY2g9XCI/XCIpLEMuaGFzaHx8XCJcIiE9PXhbMV18fChDLmhhc2g9XCIjXCIpLEMucXVlcnk9dD9hLmRlY29kZShnLnNlYXJjaC5zdWJzdHIoMSkpOkMuc2VhcmNoLnN1YnN0cigxKSxDLnBhdGhuYW1lPWorKG4/ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZSgvWydefGBdL2csKGZ1bmN0aW9uKGUpe3JldHVyblwiJVwiK2UuY2hhckNvZGVBdCgpLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpfSkpLnJlcGxhY2UoLygoPzolWzAtOUEtRl17Mn0pKykvZywoZnVuY3Rpb24oZSx0KXt0cnl7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudCh0KS5zcGxpdChcIlwiKS5tYXAoKGZ1bmN0aW9uKGUpe3ZhciB0PWUuY2hhckNvZGVBdCgpO3JldHVybiB0PjI1Nnx8L15bYS16MC05XSQvaS50ZXN0KGUpP2U6XCIlXCIrdC50b1N0cmluZygxNikudG9VcHBlckNhc2UoKX0pKS5qb2luKFwiXCIpfWNhdGNoKGUpe3JldHVybiB0fX0pKX0oZy5wYXRobmFtZSk6Zy5wYXRobmFtZSksXCJhYm91dDpcIj09PUMucHJvdG9jb2wmJlwiYmxhbmtcIj09PUMucGF0aG5hbWUmJihDLnByb3RvY29sPVwiXCIsQy5wYXRobmFtZT1cIlwiKSxVJiZcIi9cIiE9PWVbMF0mJihDLnBhdGhuYW1lPUMucGF0aG5hbWUuc3Vic3RyKDEpKSx1JiYhZi50ZXN0KHUpJiZcIi9cIiE9PWUuc2xpY2UoLTEpJiZcIi9cIj09PUMucGF0aG5hbWUmJihDLnBhdGhuYW1lPVwiXCIpLEMucGF0aD1DLnBhdGhuYW1lK0Muc2VhcmNoLEMuYXV0aD1bZy51c2VybmFtZSxnLnBhc3N3b3JkXS5tYXAoZGVjb2RlVVJJQ29tcG9uZW50KS5maWx0ZXIoQm9vbGVhbikuam9pbihcIjpcIiksQy5wb3J0PWcucG9ydCx3JiYhQy5ob3N0LmVuZHNXaXRoKHcpJiYoQy5ob3N0Kz13LEMucG9ydD13LnNsaWNlKDEpKSxDLmhyZWY9aj9cIlwiK0MucGF0aG5hbWUrQy5zZWFyY2grQy5oYXNoOnIoQyk7dmFyIHE9L14oZmlsZSkvLnRlc3QoQy5ocmVmKT9bXCJob3N0XCIsXCJob3N0bmFtZVwiXTpbXTtyZXR1cm4gT2JqZWN0LmtleXMoQykuZm9yRWFjaCgoZnVuY3Rpb24oZSl7fnEuaW5kZXhPZihlKXx8KENbZV09Q1tlXXx8bnVsbCl9KSksQ31lLnBhcnNlPWQsZS5mb3JtYXQ9cixlLnJlc29sdmU9aCxlLnJlc29sdmVPYmplY3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZChoKGUsdCkpfSxlLlVybD1sfSgpO21vZHVsZS5leHBvcnRzPW99KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/native-url/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/querystring-es3/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/querystring-es3/index.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){\"use strict\";var e={721:function(e){function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}e.exports=function(e,n,t,o){n=n||\"&\";t=t||\"=\";var a={};if(typeof e!==\"string\"||e.length===0){return a}var i=/\\+/g;e=e.split(n);var u=1e3;if(o&&typeof o.maxKeys===\"number\"){u=o.maxKeys}var c=e.length;if(u>0&&c>u){c=u}for(var p=0;p<c;++p){var f=e[p].replace(i,\"%20\"),s=f.indexOf(t),_,l,y,d;if(s>=0){_=f.substr(0,s);l=f.substr(s+1)}else{_=f;l=\"\"}y=decodeURIComponent(_);d=decodeURIComponent(l);if(!hasOwnProperty(a,y)){a[y]=d}else if(r(a[y])){a[y].push(d)}else{a[y]=[a[y],d]}}return a};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"}},850:function(e){var stringifyPrimitive=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};e.exports=function(e,t,o,a){t=t||\"&\";o=o||\"=\";if(e===null){e=undefined}if(typeof e===\"object\"){return map(n(e),(function(n){var a=encodeURIComponent(stringifyPrimitive(n))+o;if(r(e[n])){return map(e[n],(function(e){return a+encodeURIComponent(stringifyPrimitive(e))})).join(t)}else{return a+encodeURIComponent(stringifyPrimitive(e[n]))}})).join(t)}if(!a)return\"\";return encodeURIComponent(stringifyPrimitive(a))+o+encodeURIComponent(stringifyPrimitive(e))};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"};function map(e,r){if(e.map)return e.map(r);var n=[];for(var t=0;t<e.length;t++){n.push(r(e[t],t))}return n}var n=Object.keys||function(e){var r=[];for(var n in e){if(Object.prototype.hasOwnProperty.call(e,n))r.push(n)}return r}}};var r={};function __nccwpck_require__(n){var t=r[n];if(t!==undefined){return t.exports}var o=r[n]={exports:{}};var a=true;try{e[n](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};!function(){var e=n;e.decode=e.parse=__nccwpck_require__(721);e.encode=e.stringify=__nccwpck_require__(850)}();module.exports=n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3F1ZXJ5c3RyaW5nLWVzMy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxhQUFhLE9BQU8sZ0JBQWdCLDZCQUE2QixpREFBaUQsNEJBQTRCLFNBQVMsU0FBUyxTQUFTLHNDQUFzQyxTQUFTLFlBQVksYUFBYSxVQUFVLG1DQUFtQyxZQUFZLGVBQWUsYUFBYSxJQUFJLFlBQVksSUFBSSxLQUFLLG1EQUFtRCxTQUFTLGdCQUFnQixnQkFBZ0IsS0FBSyxJQUFJLEtBQUssd0JBQXdCLHdCQUF3Qix5QkFBeUIsT0FBTyxpQkFBaUIsYUFBYSxLQUFLLGVBQWUsVUFBVSxpQ0FBaUMsNkRBQTZELGlCQUFpQixtQ0FBbUMsaUJBQWlCLHNCQUFzQixzQ0FBc0MscUNBQXFDLG1CQUFtQiw0QkFBNEIsU0FBUyxTQUFTLGFBQWEsWUFBWSx3QkFBd0IsNkJBQTZCLGtEQUFrRCxZQUFZLDZCQUE2QixtREFBbUQsV0FBVyxLQUFLLHVEQUF1RCxXQUFXLGVBQWUsOEZBQThGLGlDQUFpQyw2REFBNkQsa0JBQWtCLHlCQUF5QixTQUFTLFlBQVksV0FBVyxLQUFLLGtCQUFrQixTQUFTLCtCQUErQixTQUFTLGdCQUFnQix1REFBdUQsWUFBWSxTQUFTLGdDQUFnQyxXQUFXLGtCQUFrQixpQkFBaUIsWUFBWSxZQUFZLFdBQVcsSUFBSSxzQ0FBc0MsUUFBUSxRQUFRLGlCQUFpQixpQkFBaUIsbUVBQW1FLFNBQVMsS0FBSyxTQUFTLFlBQVksUUFBUSwwQ0FBMEMsOENBQThDLEdBQUcsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzPzI0MWYiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9ezcyMTpmdW5jdGlvbihlKXtmdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShlLHIpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSxuLHQsbyl7bj1ufHxcIiZcIjt0PXR8fFwiPVwiO3ZhciBhPXt9O2lmKHR5cGVvZiBlIT09XCJzdHJpbmdcInx8ZS5sZW5ndGg9PT0wKXtyZXR1cm4gYX12YXIgaT0vXFwrL2c7ZT1lLnNwbGl0KG4pO3ZhciB1PTFlMztpZihvJiZ0eXBlb2Ygby5tYXhLZXlzPT09XCJudW1iZXJcIil7dT1vLm1heEtleXN9dmFyIGM9ZS5sZW5ndGg7aWYodT4wJiZjPnUpe2M9dX1mb3IodmFyIHA9MDtwPGM7KytwKXt2YXIgZj1lW3BdLnJlcGxhY2UoaSxcIiUyMFwiKSxzPWYuaW5kZXhPZih0KSxfLGwseSxkO2lmKHM+PTApe189Zi5zdWJzdHIoMCxzKTtsPWYuc3Vic3RyKHMrMSl9ZWxzZXtfPWY7bD1cIlwifXk9ZGVjb2RlVVJJQ29tcG9uZW50KF8pO2Q9ZGVjb2RlVVJJQ29tcG9uZW50KGwpO2lmKCFoYXNPd25Qcm9wZXJ0eShhLHkpKXthW3ldPWR9ZWxzZSBpZihyKGFbeV0pKXthW3ldLnB1c2goZCl9ZWxzZXthW3ldPVthW3ldLGRdfX1yZXR1cm4gYX07dmFyIHI9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKT09PVwiW29iamVjdCBBcnJheV1cIn19LDg1MDpmdW5jdGlvbihlKXt2YXIgc3RyaW5naWZ5UHJpbWl0aXZlPWZ1bmN0aW9uKGUpe3N3aXRjaCh0eXBlb2YgZSl7Y2FzZVwic3RyaW5nXCI6cmV0dXJuIGU7Y2FzZVwiYm9vbGVhblwiOnJldHVybiBlP1widHJ1ZVwiOlwiZmFsc2VcIjtjYXNlXCJudW1iZXJcIjpyZXR1cm4gaXNGaW5pdGUoZSk/ZTpcIlwiO2RlZmF1bHQ6cmV0dXJuXCJcIn19O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQsbyxhKXt0PXR8fFwiJlwiO289b3x8XCI9XCI7aWYoZT09PW51bGwpe2U9dW5kZWZpbmVkfWlmKHR5cGVvZiBlPT09XCJvYmplY3RcIil7cmV0dXJuIG1hcChuKGUpLChmdW5jdGlvbihuKXt2YXIgYT1lbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG4pKStvO2lmKHIoZVtuXSkpe3JldHVybiBtYXAoZVtuXSwoZnVuY3Rpb24oZSl7cmV0dXJuIGErZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShlKSl9KSkuam9pbih0KX1lbHNle3JldHVybiBhK2VuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoZVtuXSkpfX0pKS5qb2luKHQpfWlmKCFhKXJldHVyblwiXCI7cmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoYSkpK28rZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShlKSl9O3ZhciByPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSk9PT1cIltvYmplY3QgQXJyYXldXCJ9O2Z1bmN0aW9uIG1hcChlLHIpe2lmKGUubWFwKXJldHVybiBlLm1hcChyKTt2YXIgbj1bXTtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrKyl7bi5wdXNoKHIoZVt0XSx0KSl9cmV0dXJuIG59dmFyIG49T2JqZWN0LmtleXN8fGZ1bmN0aW9uKGUpe3ZhciByPVtdO2Zvcih2YXIgbiBpbiBlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSlyLnB1c2gobil9cmV0dXJuIHJ9fX07dmFyIHI9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhuKXt2YXIgdD1yW25dO2lmKHQhPT11bmRlZmluZWQpe3JldHVybiB0LmV4cG9ydHN9dmFyIG89cltuXT17ZXhwb3J0czp7fX07dmFyIGE9dHJ1ZTt0cnl7ZVtuXShvLG8uZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTthPWZhbHNlfWZpbmFsbHl7aWYoYSlkZWxldGUgcltuXX1yZXR1cm4gby5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgbj17fTshZnVuY3Rpb24oKXt2YXIgZT1uO2UuZGVjb2RlPWUucGFyc2U9X19uY2N3cGNrX3JlcXVpcmVfXyg3MjEpO2UuZW5jb2RlPWUuc3RyaW5naWZ5PV9fbmNjd3Bja19yZXF1aXJlX18oODUwKX0oKTttb2R1bGUuZXhwb3J0cz1ufSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/querystring-es3/index.js\n"));

/***/ }),

/***/ "./node_modules/next/head.js":
/*!***********************************!*\
  !*** ./node_modules/next/head.js ***!
  \***********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/shared/lib/head */ \"./node_modules/next/dist/shared/lib/head.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlIQUFrRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzPzg4NDkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3Qvc2hhcmVkL2xpYi9oZWFkJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/head.js\n"));

/***/ }),

/***/ "./node_modules/pdfjs-dist/build/pdf.js":
/*!**********************************************!*\
  !*** ./node_modules/pdfjs-dist/build/pdf.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n/**\n * @licstart The following is the entire license notice for the\n * JavaScript code in this page\n *\n * Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * JavaScript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(this, () => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.VerbosityLevel = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.UNSUPPORTED_FEATURES = exports.TextRenderingMode = exports.StreamType = exports.RenderingIntentFlag = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FontType = exports.FeatureTest = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMode = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.escapeString = escapeString;\nexports.getModificationDate = getModificationDate;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isArrayEqual = isArrayEqual;\nexports.isAscii = isAscii;\nexports.objectFromMap = objectFromMap;\nexports.objectSize = objectSize;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF16BEString = stringToUTF16BEString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.unreachable = unreachable;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\n\n__w_pdfjs_require__(2);\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100\n};\nexports.RenderingIntentFlag = RenderingIntentFlag;\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3\n};\nexports.AnnotationMode = AnnotationMode;\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800\n};\nexports.PermissionFlag = PermissionFlag;\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nexports.TextRenderingMode = TextRenderingMode;\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nexports.ImageKind = ImageKind;\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nexports.AnnotationType = AnnotationType;\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\"\n};\nexports.AnnotationStateModelType = AnnotationStateModelType;\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\"\n};\nexports.AnnotationMarkedState = AnnotationMarkedState;\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\"\n};\nexports.AnnotationReviewState = AnnotationReviewState;\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\"\n};\nexports.AnnotationReplyType = AnnotationReplyType;\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nexports.AnnotationFlag = AnnotationFlag;\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\"\n};\nexports.AnnotationActionEventType = AnnotationActionEventType;\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\"\n};\nexports.DocumentActionEventType = DocumentActionEventType;\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\"\n};\nexports.PageActionEventType = PageActionEventType;\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\"\n};\nexports.StreamType = StreamType;\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\"\n};\nexports.FontType = FontType;\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5\n};\nexports.VerbosityLevel = VerbosityLevel;\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nexports.CMapCompressionType = CMapCompressionType;\nconst OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nexports.OPS = OPS;\nconst UNSUPPORTED_FEATURES = {\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\"\n};\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nexports.PasswordResponses = PasswordResponses;\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n\n  try {\n    if (options && typeof url === \"string\") {\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\n\nconst BaseException = function BaseExceptionClosure() {\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n\n    this.message = message;\n    this.name = name;\n  }\n\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n  return BaseException;\n}();\n\nexports.BaseException = BaseException;\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n\n}\n\nexports.PasswordException = PasswordException;\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n\n}\n\nexports.UnknownErrorException = UnknownErrorException;\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n\n}\n\nexports.InvalidPDFException = InvalidPDFException;\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n\n}\n\nexports.MissingPDFException = MissingPDFException;\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n\n}\n\nexports.UnexpectedResponseException = UnexpectedResponseException;\n\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n\n}\n\nexports.FormatError = FormatError;\n\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n\n}\n\nexports.AbortException = AbortException;\n\nfunction bytesToString(bytes) {\n  if (typeof bytes !== \"object\" || bytes === null || bytes.length === undefined) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n\n  const strBuf = [];\n\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n\n  return bytes;\n}\n\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n\n  if (arr.byteLength !== undefined) {\n    return arr.byteLength;\n  }\n\n  unreachable(\"Invalid argument for arrayByteLength\");\n}\n\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n\n  let resultLength = 0;\n\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\n\nfunction isEvalSupported() {\n  try {\n    new Function(\"\");\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nclass FeatureTest {\n  static get isLittleEndian() {\n    return shadow(this, \"isLittleEndian\", isLittleEndian());\n  }\n\n  static get isEvalSupported() {\n    return shadow(this, \"isEvalSupported\", isEvalSupported());\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return shadow(this, \"isOffscreenCanvasSupported\", typeof OffscreenCanvas !== \"undefined\");\n  }\n\n}\n\nexports.FeatureTest = FeatureTest;\nconst hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\"));\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  static scaleMinMax(transform, minMax) {\n    let temp;\n\n    if (transform[0]) {\n      if (transform[0] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n\n      minMax[0] *= transform[0];\n      minMax[1] *= transform[0];\n\n      if (transform[3] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n\n      minMax[2] *= transform[3];\n      minMax[3] *= transform[3];\n    } else {\n      temp = minMax[0];\n      minMax[0] = minMax[2];\n      minMax[2] = temp;\n      temp = minMax[1];\n      minMax[1] = minMax[3];\n      minMax[3] = temp;\n\n      if (transform[1] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n\n      minMax[2] *= transform[1];\n      minMax[3] *= transform[1];\n\n      if (transform[2] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n\n      minMax[0] *= transform[2];\n      minMax[1] *= transform[2];\n    }\n\n    minMax[0] += transform[4];\n    minMax[1] += transform[4];\n    minMax[2] += transform[5];\n    minMax[3] += transform[5];\n  }\n\n  static transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  }\n\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  }\n\n  static apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  }\n\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  static normalizeRect(rect) {\n    const r = rect.slice(0);\n\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n\n    return r;\n  }\n\n  static intersect(rect1, rect2) {\n    const xLow = Math.max(Math.min(rect1[0], rect1[2]), Math.min(rect2[0], rect2[2]));\n    const xHigh = Math.min(Math.max(rect1[0], rect1[2]), Math.max(rect2[0], rect2[2]));\n\n    if (xLow > xHigh) {\n      return null;\n    }\n\n    const yLow = Math.max(Math.min(rect1[1], rect1[3]), Math.min(rect2[1], rect2[3]));\n    const yHigh = Math.min(Math.max(rect1[1], rect1[3]), Math.max(rect2[1], rect2[3]));\n\n    if (yLow > yHigh) {\n      return null;\n    }\n\n    return [xLow, yLow, xHigh, yHigh];\n  }\n\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n          bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n\n        t = -c / b;\n\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n\n        continue;\n      }\n\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n\n      if (b2ac < 0) {\n        continue;\n      }\n\n      t1 = (-b + sqrtb2ac) / (2 * a);\n\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n\n      t2 = (-b - sqrtb2ac) / (2 * a);\n\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n        mt;\n    const jlen = j;\n\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n      bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n    return [Math.min(...bounds[0]), Math.min(...bounds[1]), Math.max(...bounds[0]), Math.max(...bounds[1])];\n  }\n\n}\n\nexports.Util = Util;\nconst PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac];\n\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, {\n          fatal: true\n        });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n\n  const strBuf = [];\n\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(String.fromCharCode(char >> 8 & 0xff), String.fromCharCode(char & 0xff));\n  }\n\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n  return buffer.join(\"\");\n}\n\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    }\n\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\n/***/ }),\n/* 2 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n\n\nvar _is_node = __w_pdfjs_require__(3);\n\n;\n\n/***/ }),\n/* 3 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.isNodeJS = void 0;\nconst isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\nexports.isNodeJS = isNodeJS;\n\n/***/ }),\n/* 4 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.build = exports.RenderTask = exports.PDFWorkerUtil = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDocumentLoadingTask = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultStandardFontDataFactory = exports.DefaultCanvasFactory = exports.DefaultCMapReaderFactory = void 0;\nexports.getDocument = getDocument;\nexports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\nexports.version = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _display_utils = __w_pdfjs_require__(5);\n\nvar _font_loader = __w_pdfjs_require__(7);\n\nvar _annotation_storage = __w_pdfjs_require__(8);\n\nvar _canvas = __w_pdfjs_require__(10);\n\nvar _worker_options = __w_pdfjs_require__(13);\n\nvar _is_node = __w_pdfjs_require__(3);\n\nvar _message_handler = __w_pdfjs_require__(14);\n\nvar _metadata = __w_pdfjs_require__(15);\n\nvar _optional_content_config = __w_pdfjs_require__(16);\n\nvar _transport_stream = __w_pdfjs_require__(17);\n\nvar _xfa_text = __w_pdfjs_require__(18);\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536;\nconst RENDERING_CANCELLED_TIMEOUT = 100;\nlet DefaultCanvasFactory = _display_utils.DOMCanvasFactory;\nexports.DefaultCanvasFactory = DefaultCanvasFactory;\nlet DefaultCMapReaderFactory = _display_utils.DOMCMapReaderFactory;\nexports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\nlet DefaultStandardFontDataFactory = _display_utils.DOMStandardFontDataFactory;\nexports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory;\n\nif (_is_node.isNodeJS) {\n  const {\n    NodeCanvasFactory,\n    NodeCMapReaderFactory,\n    NodeStandardFontDataFactory\n  } = __w_pdfjs_require__(19);\n\n  exports.DefaultCanvasFactory = DefaultCanvasFactory = NodeCanvasFactory;\n  exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory = NodeCMapReaderFactory;\n  exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory = NodeStandardFontDataFactory;\n}\n\nlet createPDFNetworkStream;\n\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n  let source;\n\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = {\n      url: src\n    };\n  } else if ((0, _util.isArrayBuffer)(src)) {\n    source = {\n      data: src\n    };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = {\n      range: src\n    };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\"Invalid parameter in getDocument, \" + \"need either string, URL, Uint8Array, or parameter object.\");\n    }\n\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n    }\n\n    source = src;\n  }\n\n  const params = Object.create(null);\n  let rangeTransport = null,\n      worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            params[key] = new URL(value, window.location).href;\n            continue;\n          } catch (ex) {\n            (0, _util.warn)(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString();\n          continue;\n        }\n\n        throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\");\n\n      case \"range\":\n        rangeTransport = value;\n        continue;\n\n      case \"worker\":\n        worker = value;\n        continue;\n\n      case \"data\":\n        if (_is_node.isNodeJS && typeof Buffer !== \"undefined\" && value instanceof Buffer) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break;\n        } else if (typeof value === \"string\") {\n          params[key] = (0, _util.stringToBytes)(value);\n        } else if (typeof value === \"object\" && value !== null && !isNaN(value.length)) {\n          params[key] = new Uint8Array(value);\n        } else if ((0, _util.isArrayBuffer)(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string, or array-like object is expected in the data property.\");\n        }\n\n        continue;\n    }\n\n    params[key] = value;\n  }\n\n  params.CMapReaderFactory = params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory = params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (!Number.isInteger(params.rangeChunkSize) || params.rangeChunkSize < 1) {\n    params.rangeChunkSize = DEFAULT_RANGE_CHUNK_SIZE;\n  }\n\n  if (typeof params.docBaseUrl !== \"string\" || (0, _display_utils.isDataScheme)(params.docBaseUrl)) {\n    params.docBaseUrl = null;\n  }\n\n  if (!Number.isInteger(params.maxImageSize) || params.maxImageSize < -1) {\n    params.maxImageSize = -1;\n  }\n\n  if (typeof params.cMapUrl !== \"string\") {\n    params.cMapUrl = null;\n  }\n\n  if (typeof params.standardFontDataUrl !== \"string\") {\n    params.standardFontDataUrl = null;\n  }\n\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch = params.CMapReaderFactory === _display_utils.DOMCMapReaderFactory && params.StandardFontDataFactory === _display_utils.DOMStandardFontDataFactory;\n  }\n\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = _is_node.isNodeJS;\n  }\n\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts = !_is_node.isNodeJS && !params.disableFontFace;\n  }\n\n  if (typeof params.ownerDocument !== \"object\" || params.ownerDocument === null) {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  (0, _util.setVerbosityLevel)(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: _worker_options.GlobalWorkerOptions.workerPort\n    };\n    worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n\n  const docId = task.docId;\n  worker.promise.then(function () {\n    if (task.destroyed) {\n      throw new Error(\"Loading aborted\");\n    }\n\n    const workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n\n    const networkStreamPromise = new Promise(function (resolve) {\n      let networkStream;\n\n      if (rangeTransport) {\n        networkStream = new _transport_stream.PDFDataTransportStream({\n          length: params.length,\n          initialData: params.initialData,\n          progressiveDone: params.progressiveDone,\n          contentDispositionFilename: params.contentDispositionFilename,\n          disableRange: params.disableRange,\n          disableStream: params.disableStream\n        }, rangeTransport);\n      } else if (!params.data) {\n        networkStream = createPDFNetworkStream({\n          url: params.url,\n          length: params.length,\n          httpHeaders: params.httpHeaders,\n          withCredentials: params.withCredentials,\n          rangeChunkSize: params.rangeChunkSize,\n          disableRange: params.disableRange,\n          disableStream: params.disableStream\n        });\n      }\n\n      resolve(networkStream);\n    });\n    return Promise.all([workerIdPromise, networkStreamPromise]).then(function ([workerId, networkStream]) {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n      const transport = new WorkerTransport(messageHandler, task, networkStream, params);\n      task._transport = transport;\n      messageHandler.send(\"Ready\", null);\n    });\n  }).catch(task._capability.reject);\n  return task;\n}\n\nasync function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename = pdfDataRangeTransport.contentDispositionFilename;\n  }\n\n  const workerId = await worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n    docId,\n    apiVersion: '2.14.305',\n    source: {\n      data: source.data,\n      url: source.url,\n      password: source.password,\n      disableAutoFetch: source.disableAutoFetch,\n      rangeChunkSize: source.rangeChunkSize,\n      length: source.length\n    },\n    maxImageSize: source.maxImageSize,\n    disableFontFace: source.disableFontFace,\n    docBaseUrl: source.docBaseUrl,\n    ignoreErrors: source.ignoreErrors,\n    isEvalSupported: source.isEvalSupported,\n    fontExtraProperties: source.fontExtraProperties,\n    enableXfa: source.enableXfa,\n    useSystemFonts: source.useSystemFonts,\n    cMapUrl: source.useWorkerFetch ? source.cMapUrl : null,\n    standardFontDataUrl: source.useWorkerFetch ? source.standardFontDataUrl : null\n  });\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n\n  return workerId;\n}\n\nclass PDFDocumentLoadingTask {\n  static #docId = 0;\n\n  constructor() {\n    this._capability = (0, _util.createPromiseCapability)();\n    this._transport = null;\n    this._worker = null;\n    this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n    this.destroyed = false;\n    this.onPassword = null;\n    this.onProgress = null;\n    this.onUnsupportedFeature = null;\n  }\n\n  get promise() {\n    return this._capability.promise;\n  }\n\n  async destroy() {\n    this.destroyed = true;\n    await this._transport?.destroy();\n    this._transport = null;\n\n    if (this._worker) {\n      this._worker.destroy();\n\n      this._worker = null;\n    }\n  }\n\n}\n\nexports.PDFDocumentLoadingTask = PDFDocumentLoadingTask;\n\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false, contentDispositionFilename = null) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = (0, _util.createPromiseCapability)();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n\n}\n\nexports.PDFDataRangeTransport = PDFDataRangeTransport;\n\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n    Object.defineProperty(this, \"fingerprint\", {\n      get() {\n        (0, _display_utils.deprecated)(\"`PDFDocumentProxy.fingerprint`, \" + \"please use `PDFDocumentProxy.fingerprints` instead.\");\n        return this.fingerprints[0];\n      }\n\n    });\n    Object.defineProperty(this, \"getStats\", {\n      value: async () => {\n        (0, _display_utils.deprecated)(\"`PDFDocumentProxy.getStats`, \" + \"please use the `PDFDocumentProxy.stats`-getter instead.\");\n        return this.stats || {\n          streamTypes: {},\n          fontTypes: {}\n        };\n      }\n    });\n  }\n\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  get stats() {\n    return this._transport.stats;\n  }\n\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  getData() {\n    return this._transport.getData();\n  }\n\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  saveDocument() {\n    if (this._transport.annotationStorage.size <= 0) {\n      (0, _display_utils.deprecated)(\"saveDocument called while `annotationStorage` is empty, \" + \"please use the getData-method instead.\");\n    }\n\n    return this._transport.saveDocument();\n  }\n\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n\n}\n\nexports.PDFDocumentProxy = PDFDocumentProxy;\n\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n    this._bitmaps = new Set();\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this._annotationPromises = new Map();\n    this.destroyed = false;\n  }\n\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false\n  } = {}) {\n    return new _display_utils.PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip\n    });\n  }\n\n  getAnnotations({\n    intent = \"display\"\n  } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    let promise = this._annotationPromises.get(intentArgs.cacheKey);\n\n    if (!promise) {\n      promise = this._transport.getAnnotations(this._pageIndex, intentArgs.renderingIntent);\n\n      this._annotationPromises.set(intentArgs.cacheKey, promise);\n\n      promise = promise.then(annotations => {\n        for (const annotation of annotations) {\n          if (annotation.titleObj !== undefined) {\n            Object.defineProperty(annotation, \"title\", {\n              get() {\n                (0, _display_utils.deprecated)(\"`title`-property on annotation, please use `titleObj` instead.\");\n                return annotation.titleObj.str;\n              }\n\n            });\n          }\n\n          if (annotation.contentsObj !== undefined) {\n            Object.defineProperty(annotation, \"contents\", {\n              get() {\n                (0, _display_utils.deprecated)(\"`contents`-property on annotation, please use `contentsObj` instead.\");\n                return annotation.contentsObj.str;\n              }\n\n            });\n          }\n        }\n\n        return annotations;\n      });\n    }\n\n    return promise;\n  }\n\n  getJSActions() {\n    return this._jsActionsPromise ||= this._transport.getPageJSActions(this._pageIndex);\n  }\n\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = _util.AnnotationMode.ENABLE,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n    pageColors = null\n  }) {\n    if (arguments[0]?.renderInteractiveForms !== undefined) {\n      (0, _display_utils.deprecated)(\"render no longer accepts the `renderInteractiveForms`-option, \" + \"please use the `annotationMode`-option instead.\");\n\n      if (arguments[0].renderInteractiveForms === true && annotationMode === _util.AnnotationMode.ENABLE) {\n        annotationMode = _util.AnnotationMode.ENABLE_FORMS;\n      }\n    }\n\n    if (arguments[0]?.includeAnnotationStorage !== undefined) {\n      (0, _display_utils.deprecated)(\"render no longer accepts the `includeAnnotationStorage`-option, \" + \"please use the `annotationMode`-option instead.\");\n\n      if (arguments[0].includeAnnotationStorage === true && annotationMode === _util.AnnotationMode.ENABLE) {\n        annotationMode = _util.AnnotationMode.ENABLE_STORAGE;\n      }\n    }\n\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(intent, annotationMode);\n\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n\n    if (!intentState) {\n      intentState = Object.create(null);\n\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance = canvasFactory || new DefaultCanvasFactory({\n      ownerDocument: this._ownerDocument\n    });\n    const intentPrint = !!(intentArgs.renderingIntent & _util.RenderingIntentFlag.PRINT);\n\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      if (this.cleanupAfterRender || intentPrint) {\n        this.pendingCleanup = true;\n      }\n\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error)\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n      pageColors\n    });\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n    Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(([transparency, optionalContentConfig]) => {\n      if (this.pendingCleanup) {\n        complete();\n        return;\n      }\n\n      if (this._stats) {\n        this._stats.time(\"Rendering\");\n      }\n\n      internalRenderTask.initializeGraphics({\n        transparency,\n        optionalContentConfig\n      });\n      internalRenderTask.operatorListChanged();\n    }).catch(complete);\n    return renderTask;\n  }\n\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = _util.AnnotationMode.ENABLE\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, true);\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n\n    if (!intentState) {\n      intentState = Object.create(null);\n\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n\n      this._pumpOperatorList(intentArgs);\n    }\n\n    return intentState.opListReadCapability.promise;\n  }\n\n  streamTextContent({\n    disableCombineTextItems = false,\n    includeMarkedContent = false\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n    return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n      pageIndex: this._pageIndex,\n      combineTextItems: disableCombineTextItems !== true,\n      includeMarkedContent: includeMarkedContent === true\n    }, {\n      highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n\n      size(textContent) {\n        return textContent.items.length;\n      }\n\n    });\n  }\n\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      return this.getXfa().then(xfa => {\n        return _xfa_text.XfaText.textContent(xfa);\n      });\n    }\n\n    const readableStream = this.streamTextContent(params);\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      pump();\n    });\n  }\n\n  getStructTree() {\n    return this._structTreePromise ||= this._transport.getStructTree(this._pageIndex);\n  }\n\n  _destroy() {\n    this.destroyed = true;\n    const waitOn = [];\n\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true\n      });\n\n      if (intentState.opListReadCapability) {\n        continue;\n      }\n\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n\n    this.objs.clear();\n\n    for (const bitmap of this._bitmaps) {\n      bitmap.close();\n    }\n\n    this._bitmaps.clear();\n\n    this._annotationPromises.clear();\n\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n\n    for (const {\n      renderTasks,\n      operatorList\n    } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n\n    this.objs.clear();\n\n    this._annotationPromises.clear();\n\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n\n    if (resetStats && this._stats) {\n      this._stats = new _display_utils.StatTimer();\n    }\n\n    for (const bitmap of this._bitmaps) {\n      bitmap.close();\n    }\n\n    this._bitmaps.clear();\n\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n\n    if (!intentState) {\n      return;\n    }\n\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  _renderPageChunk(operatorListChunk, intentState) {\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  _pumpOperatorList({\n    renderingIntent,\n    cacheKey\n  }) {\n    const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", {\n      pageIndex: this._pageIndex,\n      intent: renderingIntent,\n      cacheKey,\n      annotationStorage: renderingIntent & _util.RenderingIntentFlag.ANNOTATIONS_STORAGE ? this._transport.annotationStorage.serializable : null\n    });\n\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(({\n        value,\n        done\n      }) => {\n        if (done) {\n          intentState.streamReader = null;\n          return;\n        }\n\n        if (this._transport.destroyed) {\n          return;\n        }\n\n        this._renderPageChunk(value, intentState);\n\n        pump();\n      }, reason => {\n        intentState.streamReader = null;\n\n        if (this._transport.destroyed) {\n          return;\n        }\n\n        if (intentState.operatorList) {\n          intentState.operatorList.lastChunk = true;\n\n          for (const internalRenderTask of intentState.renderTasks) {\n            internalRenderTask.operatorListChanged();\n          }\n\n          this._tryCleanup();\n        }\n\n        if (intentState.displayReadyCapability) {\n          intentState.displayReadyCapability.reject(reason);\n        } else if (intentState.opListReadCapability) {\n          intentState.opListReadCapability.reject(reason);\n        } else {\n          throw reason;\n        }\n      });\n    };\n\n    pump();\n  }\n\n  _abortOperatorList({\n    intentState,\n    reason,\n    force = false\n  }) {\n    if (!intentState.streamReader) {\n      return;\n    }\n\n    if (!force) {\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n\n      if (reason instanceof _display_utils.RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({\n            intentState,\n            reason,\n            force: true\n          });\n\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n\n    intentState.streamReader.cancel(new _util.AbortException(reason.message)).catch(() => {});\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return;\n    }\n\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n\n        break;\n      }\n    }\n\n    this.cleanup();\n  }\n\n  get stats() {\n    return this._stats;\n  }\n\n}\n\nexports.PDFPageProxy = PDFPageProxy;\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve();\n  }\n\n  postMessage(obj, transfers) {\n    const event = {\n      data: structuredClone(obj, transfers)\n    };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n\n}\n\nexports.LoopbackPort = LoopbackPort;\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0\n};\nexports.PDFWorkerUtil = PDFWorkerUtil;\n{\n  if (_is_node.isNodeJS && \"function\" === \"function\") {\n    PDFWorkerUtil.isWorkerDisabled = true;\n    PDFWorkerUtil.fallbackWorkerSrc = \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n    }\n  }\n\n  PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n    let base;\n\n    try {\n      base = new URL(baseUrl);\n\n      if (!base.origin || base.origin === \"null\") {\n        return false;\n      }\n    } catch (e) {\n      return false;\n    }\n\n    const other = new URL(otherUrl, base);\n    return base.origin === other.origin;\n  };\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\nclass PDFWorker {\n  static #workerPorts = new WeakMap();\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = (0, _util.getVerbosityLevel)()\n  } = {}) {\n    if (port && PDFWorker.#workerPorts.has(port)) {\n      throw new Error(\"Cannot use more than one PDFWorker per port.\");\n    }\n\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n    this._readyCapability = (0, _util.createPromiseCapability)();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (port) {\n      PDFWorker.#workerPorts.set(port, this);\n\n      this._initializeFromPort(port);\n\n      return;\n    }\n\n    this._initialize();\n  }\n\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  get port() {\n    return this._port;\n  }\n\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n\n    this._messageHandler.on(\"ready\", function () {});\n\n    this._readyCapability.resolve();\n  }\n\n  _initialize() {\n    if (typeof Worker !== \"undefined\" && !PDFWorkerUtil.isWorkerDisabled && !PDFWorker._mainThreadWorkerMessageHandler) {\n      let workerSrc = PDFWorker.workerSrc;\n\n      try {\n        if (!PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(new URL(workerSrc, window.location).href);\n        }\n\n        const worker = new Worker(workerSrc);\n        const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            terminateEarly();\n          }\n        };\n\n        worker.addEventListener(\"error\", onWorkerError);\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n\n          if (this.destroyed) {\n            terminateEarly();\n            return;\n          }\n\n          if (data) {\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n\n            this._readyCapability.resolve();\n\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity\n            });\n          } else {\n            this._setupFakeWorker();\n\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n\n          if (this.destroyed) {\n            terminateEarly();\n            return;\n          }\n\n          try {\n            sendTest();\n          } catch (e) {\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array();\n          messageHandler.send(\"test\", testObj, [testObj.buffer]);\n        };\n\n        sendTest();\n        return;\n      } catch (e) {\n        (0, _util.info)(\"The worker has been disabled.\");\n      }\n    }\n\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      (0, _util.warn)(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal.then(WorkerMessageHandler => {\n      if (this.destroyed) {\n        this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n\n        return;\n      }\n\n      const port = new LoopbackPort();\n      this._port = port;\n      const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n      const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n      WorkerMessageHandler.setup(workerHandler, port);\n      const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n      this._messageHandler = messageHandler;\n\n      this._readyCapability.resolve();\n\n      messageHandler.send(\"configure\", {\n        verbosity: this.verbosity\n      });\n    }).catch(reason => {\n      this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n    });\n  }\n\n  destroy() {\n    this.destroyed = true;\n\n    if (this._webWorker) {\n      this._webWorker.terminate();\n\n      this._webWorker = null;\n    }\n\n    PDFWorker.#workerPorts.delete(this._port);\n    this._port = null;\n\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n\n      this._messageHandler = null;\n    }\n  }\n\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n\n    if (this.#workerPorts.has(params.port)) {\n      return this.#workerPorts.get(params.port);\n    }\n\n    return new PDFWorker(params);\n  }\n\n  static get workerSrc() {\n    if (_worker_options.GlobalWorkerOptions.workerSrc) {\n      return _worker_options.GlobalWorkerOptions.workerSrc;\n    }\n\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!_is_node.isNodeJS) {\n        (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch (ex) {\n      return null;\n    }\n  }\n\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        return mainWorkerMessageHandler;\n      }\n\n      if (_is_node.isNodeJS && \"function\" === \"function\") {\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n\n      await (0, _display_utils.loadScript)(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return (0, _util.shadow)(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n\n}\n\nexports.PDFWorker = PDFWorker;\n{\n  PDFWorker.getWorkerSrc = function () {\n    (0, _display_utils.deprecated)(\"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\");\n    return this.workerSrc;\n  };\n}\n\nclass WorkerTransport {\n  #docStats = null;\n  #pageCache = new Map();\n  #pagePromises = new Map();\n  #metadataPromise = null;\n\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new _font_loader.FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: params.cMapUrl,\n        isCompressed: params.cMapPacked\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n  }\n\n  get stats() {\n    return this.#docStats;\n  }\n\n  getRenderingIntent(intent, annotationMode = _util.AnnotationMode.ENABLE, isOpList = false) {\n    let renderingIntent = _util.RenderingIntentFlag.DISPLAY;\n    let annotationHash = \"\";\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = _util.RenderingIntentFlag.ANY;\n        break;\n\n      case \"display\":\n        break;\n\n      case \"print\":\n        renderingIntent = _util.RenderingIntentFlag.PRINT;\n        break;\n\n      default:\n        (0, _util.warn)(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case _util.AnnotationMode.DISABLE:\n        renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n\n      case _util.AnnotationMode.ENABLE:\n        break;\n\n      case _util.AnnotationMode.ENABLE_FORMS:\n        renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n\n      case _util.AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_STORAGE;\n        annotationHash = this.annotationStorage.hash;\n        break;\n\n      default:\n        (0, _util.warn)(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += _util.RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${annotationHash}`\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = (0, _util.createPromiseCapability)();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n    }\n\n    const waitOn = [];\n\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#metadataPromise = null;\n      this._getFieldObjectsPromise = null;\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const {\n      messageHandler,\n      loadingTask\n    } = this;\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n      this._fullReader = this._networkStream.getFullReader();\n\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total\n        };\n      };\n\n      sink.onPull = () => {\n        this._fullReader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            sink.close();\n            return;\n          }\n\n          (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n          sink.enqueue(new Uint8Array(value), 1, [value]);\n        }).catch(reason => {\n          sink.error(reason);\n        });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return;\n          }\n\n          throw readyReason;\n        });\n      };\n    });\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = (0, _util.createPromiseCapability)();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total\n            });\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength\n        });\n      }, headersCapability.reject);\n      return headersCapability.promise;\n    });\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n\n      const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader.read().then(function ({\n          value,\n          done\n        }) {\n          if (done) {\n            sink.close();\n            return;\n          }\n\n          (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n          sink.enqueue(new Uint8Array(value), 1, [value]);\n        }).catch(reason => {\n          sink.error(reason);\n        });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return;\n          }\n\n          throw readyReason;\n        });\n      };\n    });\n    messageHandler.on(\"GetDoc\", ({\n      pdfInfo\n    }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new _util.PasswordException(ex.message, ex.code);\n          break;\n\n        case \"InvalidPDFException\":\n          reason = new _util.InvalidPDFException(ex.message);\n          break;\n\n        case \"MissingPDFException\":\n          reason = new _util.MissingPDFException(ex.message);\n          break;\n\n        case \"UnexpectedResponseException\":\n          reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n          break;\n\n        case \"UnknownErrorException\":\n          reason = new _util.UnknownErrorException(ex.message, ex.details);\n          break;\n\n        default:\n          (0, _util.unreachable)(\"DocException - expected a valid Error.\");\n      }\n\n      loadingTask._capability.reject(reason);\n    });\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = (0, _util.createPromiseCapability)();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          if (password instanceof Error) {\n            this._passwordCapability.reject(password);\n          } else {\n            this._passwordCapability.resolve({\n              password\n            });\n          }\n        };\n\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n      }\n\n      return this._passwordCapability.promise;\n    });\n    messageHandler.on(\"DataLoaded\", data => {\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length\n      });\n      this.downloadInfoCapability.resolve(data);\n    });\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return;\n      }\n\n      const page = this.#pageCache.get(data.pageIndex);\n\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return;\n      }\n\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            (0, _util.warn)(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              }\n\n            };\n          }\n\n          const font = new _font_loader.FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry\n          });\n          this.fontLoader.bind(font).catch(reason => {\n            return messageHandler.sendWithPromise(\"FontFallback\", {\n              id\n            });\n          }).finally(() => {\n            if (!params.fontExtraProperties && font.data) {\n              font.data = null;\n            }\n\n            this.commonObjs.resolve(id, font);\n          });\n          break;\n\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        return;\n      }\n\n      const pageProxy = this.#pageCache.get(pageIndex);\n\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n\n          if (imageData) {\n            let length;\n\n            if (imageData.bitmap) {\n              const {\n                bitmap,\n                width,\n                height\n              } = imageData;\n              length = width * height * 4;\n\n              pageProxy._bitmaps.add(bitmap);\n            } else {\n              length = imageData.data?.length || 0;\n            }\n\n            if (length > MAX_IMAGE_SIZE_TO_STORE) {\n              pageProxy.cleanupAfterRender = true;\n            }\n          }\n\n          break;\n\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return;\n      }\n\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total\n      });\n    });\n    messageHandler.on(\"DocStats\", data => {\n      if (this.destroyed) {\n        return;\n      }\n\n      this.#docStats = Object.freeze({\n        streamTypes: Object.freeze(data.streamTypes),\n        fontTypes: Object.freeze(data.fontTypes)\n      });\n    });\n    messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(new Error(\"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"));\n      }\n\n      return this.CMapReaderFactory.fetch(data);\n    });\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(new Error(\"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"));\n      }\n\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({\n    featureId\n  }) {\n    if (this.destroyed) {\n      return;\n    }\n\n    this.loadingTask.onUnsupportedFeature?.(featureId);\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n      return Promise.reject(new Error(\"Invalid page request.\"));\n    }\n\n    const pageIndex = pageNumber - 1,\n          cachedPromise = this.#pagePromises.get(pageIndex);\n\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n\n    const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n      pageIndex\n    }).then(pageInfo => {\n      if (this.destroyed) {\n        throw new Error(\"Transport destroyed\");\n      }\n\n      const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.ownerDocument, this._params.pdfBug);\n      this.#pageCache.set(pageIndex, page);\n      return page;\n    });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    if (typeof ref !== \"object\" || ref === null || !Number.isInteger(ref.num) || ref.num < 0 || !Number.isInteger(ref.gen) || ref.gen < 0) {\n      return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n    }\n\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      num: ref.num,\n      gen: ref.gen\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n      isPureXfa: !!this._htmlForXfa,\n      numPages: this._numPages,\n      annotationStorage: this.annotationStorage.serializable,\n      filename: this._fullReader?.filename ?? null\n    }).finally(() => {\n      this.annotationStorage.resetModified();\n    });\n  }\n\n  getFieldObjects() {\n    return this._getFieldObjectsPromise ||= this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n  }\n\n  hasJSActions() {\n    return this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\"HasJSActions\", null);\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\n      return new _optional_content_config.OptionalContentConfig(results);\n    });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.#metadataPromise ||= this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\n      return {\n        info: results[0],\n        metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n        contentDispositionFilename: this._fullReader?.filename ?? null,\n        contentLength: this._fullReader?.contentLength ?? null\n      };\n    });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return;\n    }\n\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${page.pageNumber} is currently rendering.`);\n      }\n    }\n\n    this.commonObjs.clear();\n\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n\n    this.#metadataPromise = null;\n    this._getFieldObjectsPromise = null;\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return (0, _util.shadow)(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      enableXfa: params.enableXfa\n    });\n  }\n\n}\n\nclass PDFObjects {\n  #objs = Object.create(null);\n\n  #ensureObj(objId) {\n    const obj = this.#objs[objId];\n\n    if (obj) {\n      return obj;\n    }\n\n    return this.#objs[objId] = {\n      capability: (0, _util.createPromiseCapability)(),\n      data: null\n    };\n  }\n\n  get(objId, callback = null) {\n    if (callback) {\n      const obj = this.#ensureObj(objId);\n      obj.capability.promise.then(() => callback(obj.data));\n      return null;\n    }\n\n    const obj = this.#objs[objId];\n\n    if (!obj?.capability.settled) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this.#objs[objId];\n    return obj?.capability.settled || false;\n  }\n\n  resolve(objId, data = null) {\n    const obj = this.#ensureObj(objId);\n    obj.data = data;\n    obj.capability.resolve();\n  }\n\n  clear() {\n    this.#objs = Object.create(null);\n  }\n\n}\n\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n    this.onContinue = null;\n  }\n\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n\n}\n\nexports.RenderTask = RenderTask;\n\nclass InternalRenderTask {\n  static #canvasInUse = new WeakSet();\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n    pageColors = null\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this._pdfBug = pdfBug;\n    this.pageColors = pageColors;\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = (0, _util.createPromiseCapability)();\n    this.task = new RenderTask(this);\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {});\n  }\n\n  initializeGraphics({\n    transparency = false,\n    optionalContentConfig\n  }) {\n    if (this.cancelled) {\n      return;\n    }\n\n    if (this._canvas) {\n      if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n        throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n      }\n\n      InternalRenderTask.#canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n\n    const {\n      canvasContext,\n      viewport,\n      transform,\n      imageLayer,\n      background\n    } = this.params;\n    this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, imageLayer, optionalContentConfig, this.annotationCanvasMap, this.pageColors);\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n\n    if (this.graphicsReadyCallback) {\n      this.graphicsReadyCallback();\n    }\n  }\n\n  cancel(error = null) {\n    this.running = false;\n    this.cancelled = true;\n\n    if (this.gfx) {\n      this.gfx.endDrawing();\n    }\n\n    if (this._canvas) {\n      InternalRenderTask.#canvasInUse.delete(this._canvas);\n    }\n\n    this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      if (!this.graphicsReadyCallback) {\n        this.graphicsReadyCallback = this._continueBound;\n      }\n\n      return;\n    }\n\n    if (this.stepper) {\n      this.stepper.updateOperatorList(this.operatorList);\n    }\n\n    if (this.running) {\n      return;\n    }\n\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n\n    if (this.cancelled) {\n      return;\n    }\n\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n\n    this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n\n        if (this._canvas) {\n          InternalRenderTask.#canvasInUse.delete(this._canvas);\n        }\n\n        this.callback();\n      }\n    }\n  }\n\n}\n\nconst version = '2.14.305';\nexports.version = version;\nconst build = 'eaaa8b4ad';\nexports.build = build;\n\n/***/ }),\n/* 5 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.StatTimer = exports.RenderingCancelledException = exports.PixelsPerInch = exports.PageViewport = exports.PDFDateString = exports.DOMStandardFontDataFactory = exports.DOMSVGFactory = exports.DOMCanvasFactory = exports.DOMCMapReaderFactory = void 0;\nexports.deprecated = deprecated;\nexports.getFilenameFromUrl = getFilenameFromUrl;\nexports.getPdfFilenameFromUrl = getPdfFilenameFromUrl;\nexports.getXfaPageViewport = getXfaPageViewport;\nexports.isDataScheme = isDataScheme;\nexports.isPdfFile = isPdfFile;\nexports.isValidFetchUrl = isValidFetchUrl;\nexports.loadScript = loadScript;\n\nvar _base_factory = __w_pdfjs_require__(6);\n\nvar _util = __w_pdfjs_require__(1);\n\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass PixelsPerInch {\n  static CSS = 96.0;\n  static PDF = 72.0;\n  static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n}\n\nexports.PixelsPerInch = PixelsPerInch;\n\nclass DOMCanvasFactory extends _base_factory.BaseCanvasFactory {\n  constructor({\n    ownerDocument = globalThis.document\n  } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n\n}\n\nexports.DOMCanvasFactory = DOMCanvasFactory;\n\nasync function fetchData(url, asTypedArray = false) {\n  if (isValidFetchUrl(url, document.baseURI)) {\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return asTypedArray ? new Uint8Array(await response.arrayBuffer()) : (0, _util.stringToBytes)(await response.text());\n  }\n\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n\n      if (request.status === 200 || request.status === 0) {\n        let data;\n\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = (0, _util.stringToBytes)(request.responseText);\n        }\n\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, this.isCompressed).then(data => {\n      return {\n        cMapData: data,\n        compressionType\n      };\n    });\n  }\n\n}\n\nexports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n\nclass DOMStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, true);\n  }\n\n}\n\nexports.DOMStandardFontDataFactory = DOMStandardFontDataFactory;\n\nclass DOMSVGFactory extends _base_factory.BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n\n}\n\nexports.DOMSVGFactory = DOMSVGFactory;\n\nclass PageViewport {\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation %= 360;\n\n    if (rotation < 0) {\n      rotation += 360;\n    }\n\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n\n      default:\n        throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n  }\n\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip\n    });\n  }\n\n  convertToViewportPoint(x, y) {\n    return _util.Util.applyTransform([x, y], this.transform);\n  }\n\n  convertToViewportRectangle(rect) {\n    const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n\n    const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  convertToPdfPoint(x, y) {\n    return _util.Util.applyInverseTransform([x, y], this.transform);\n  }\n\n}\n\nexports.PageViewport = PageViewport;\n\nclass RenderingCancelledException extends _util.BaseException {\n  constructor(msg, type) {\n    super(msg, \"RenderingCancelledException\");\n    this.type = type;\n  }\n\n}\n\nexports.RenderingCancelledException = RenderingCancelledException;\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n\n  if (isDataScheme(url)) {\n    (0, _util.warn)('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n\n    if (suggestedFilename.includes(\"%\")) {\n      try {\n        suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n      } catch (ex) {}\n    }\n  }\n\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      (0, _util.warn)(`Timer is already running for ${name}`);\n    }\n\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      (0, _util.warn)(`Timer has not been started for ${name}`);\n    }\n\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now()\n    });\n    delete this.started[name];\n  }\n\n  toString() {\n    const outBuf = [];\n    let longest = 0;\n\n    for (const time of this.times) {\n      const name = time.name;\n\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n\n    return outBuf.join(\"\");\n  }\n\n}\n\nexports.StatTimer = StatTimer;\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const {\n      protocol\n    } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false;\n  }\n}\n\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n\n      resolve(evt);\n    };\n\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  static toDateObject(input) {\n    if (!input || typeof input !== \"string\") {\n      return null;\n    }\n\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n    }\n\n    const matches = pdfDateStringRegex.exec(input);\n\n    if (!matches) {\n      return null;\n    }\n\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n\n}\n\nexports.PDFDateString = PDFDateString;\n\nfunction getXfaPageViewport(xfaPage, {\n  scale = 1,\n  rotation = 0\n}) {\n  const {\n    width,\n    height\n  } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation\n  });\n}\n\n/***/ }),\n/* 6 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.BaseStandardFontDataFactory = exports.BaseSVGFactory = exports.BaseCanvasFactory = exports.BaseCMapReaderFactory = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n\n    const canvas = this._createCanvas(width, height);\n\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\")\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  _createCanvas(width, height) {\n    (0, _util.unreachable)(\"Abstract method `_createCanvas` called.\");\n  }\n\n}\n\nexports.BaseCanvasFactory = BaseCanvasFactory;\n\nclass BaseCMapReaderFactory {\n  constructor({\n    baseUrl = null,\n    isCompressed = false\n  }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({\n    name\n  }) {\n    if (!this.baseUrl) {\n      throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n    }\n\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n    });\n  }\n\n  _fetchData(url, compressionType) {\n    (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n  }\n\n}\n\nexports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n\nclass BaseStandardFontDataFactory {\n  constructor({\n    baseUrl = null\n  }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({\n    filename\n  }) {\n    if (!this.baseUrl) {\n      throw new Error('The standard font \"baseUrl\" parameter must be specified, ensure that ' + 'the \"standardFontDataUrl\" API parameter is provided.');\n    }\n\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n\n    const url = `${this.baseUrl}${filename}`;\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  _fetchData(url) {\n    (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n  }\n\n}\n\nexports.BaseStandardFontDataFactory = BaseStandardFontDataFactory;\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      (0, _util.unreachable)(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n\n    const svg = this._createSVG(\"svg:svg\");\n\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n\n    return this._createSVG(type);\n  }\n\n  _createSVG(type) {\n    (0, _util.unreachable)(\"Abstract method `_createSVG` called.\");\n  }\n\n}\n\nexports.BaseSVGFactory = BaseSVGFactory;\n\n/***/ }),\n/* 7 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.FontLoader = exports.FontFaceObject = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    styleElement = null\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n    }\n\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n\n      this._document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    if (font.attached || font.missingFile) {\n      return;\n    }\n\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n          });\n\n          (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n\n      return;\n    }\n\n    const rule = font.createFontFaceRule();\n\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return;\n      }\n\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  get isSyncFontLoadingSupported() {\n    (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  get _loadTestFont() {\n    (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n\n}\n\nlet FontLoader;\nexports.FontLoader = FontLoader;\n{\n  exports.FontLoader = FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n\n      if (typeof navigator === \"undefined\") {\n        supported = true;\n      } else {\n        const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n\n        if (m?.[1] >= 14) {\n          supported = true;\n        }\n      }\n\n      return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n      };\n\n      return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      function int32(data, offset) {\n        return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n      }\n\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n\n      let i, ii;\n\n      const canvas = this._document.createElement(\"canvas\");\n\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n      let called = 0;\n\n      function isFontReady(name, callback) {\n        called++;\n\n        if (called > 30) {\n          (0, _util.warn)(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976;\n      data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858;\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n      }\n\n      if (i < loadTestFontId.length) {\n        checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n      }\n\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n      const names = [];\n\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        div.remove();\n        request.complete();\n      });\n    }\n\n  };\n}\n\nclass FontFaceObject {\n  constructor(translatedData, {\n    isEvalSupported = true,\n    disableFontFace = false,\n    ignoreErrors = false,\n    onUnsupportedFeature,\n    fontRegistry = null\n  }) {\n    this.compiledGlyphs = Object.create(null);\n\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n\n    let nativeFontFace;\n\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight\n      };\n\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n\n      nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n\n    const data = (0, _util.bytesToString)(this.data);\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n\n      this._onUnsupportedFeature({\n        featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n      });\n\n      (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n      return this.compiledGlyphs[character] = function (c, size) {};\n    }\n\n    if (this.isEvalSupported && _util.FeatureTest.isEvalSupported) {\n      const jsBuf = [];\n\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n\n      return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\"));\n    }\n\n    return this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n\n        c[current.cmd].apply(c, current.args);\n      }\n    };\n  }\n\n}\n\nexports.FontFaceObject = FontFaceObject;\n\n/***/ }),\n/* 8 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AnnotationStorage = void 0;\n\nvar _murmurhash = __w_pdfjs_require__(9);\n\nvar _util = __w_pdfjs_require__(1);\n\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  getValue(key, defaultValue) {\n    const value = this._storage.get(key);\n\n    if (value === undefined) {\n      return defaultValue;\n    }\n\n    return Object.assign(defaultValue, value);\n  }\n\n  getRawValue(key) {\n    return this._storage.get(key);\n  }\n\n  setValue(key, value) {\n    const obj = this._storage.get(key);\n\n    let modified = false;\n\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n\n      this._storage.set(key, value);\n    }\n\n    if (modified) {\n      this._setModified();\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? (0, _util.objectFromMap)(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n\n  get hash() {\n    const hash = new _murmurhash.MurmurHash3_64();\n\n    for (const [key, value] of this._storage) {\n      hash.update(`${key}:${JSON.stringify(value)}`);\n    }\n\n    return hash.hexdigest();\n  }\n\n}\n\nexports.AnnotationStorage = AnnotationStorage;\n\n/***/ }),\n/* 9 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.MurmurHash3_64 = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nconst SEED = 0xc3d2e1f0;\nconst MASK_HIGH = 0xffff0000;\nconst MASK_LOW = 0xffff;\n\nclass MurmurHash3_64 {\n  constructor(seed) {\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n\n  update(input) {\n    let data, length;\n\n    if (typeof input === \"string\") {\n      data = new Uint8Array(input.length * 2);\n      length = 0;\n\n      for (let i = 0, ii = input.length; i < ii; i++) {\n        const code = input.charCodeAt(i);\n\n        if (code <= 0xff) {\n          data[length++] = code;\n        } else {\n          data[length++] = code >>> 8;\n          data[length++] = code & 0xff;\n        }\n      }\n    } else if ((0, _util.isArrayBuffer)(input)) {\n      data = input.slice();\n      length = data.byteLength;\n    } else {\n      throw new Error(\"Wrong data format in MurmurHash3_64_update. \" + \"Input must be a string or array.\");\n    }\n\n    const blockCounts = length >> 2;\n    const tailLength = length - blockCounts * 4;\n    const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n    let k1 = 0,\n        k2 = 0;\n    let h1 = this.h1,\n        h2 = this.h2;\n    const C1 = 0xcc9e2d51,\n          C2 = 0x1b873593;\n    const C1_LOW = C1 & MASK_LOW,\n          C2_LOW = C2 & MASK_LOW;\n\n    for (let i = 0; i < blockCounts; i++) {\n      if (i & 1) {\n        k1 = dataUint32[i];\n        k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n        k1 = k1 << 15 | k1 >>> 17;\n        k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n        h1 ^= k1;\n        h1 = h1 << 13 | h1 >>> 19;\n        h1 = h1 * 5 + 0xe6546b64;\n      } else {\n        k2 = dataUint32[i];\n        k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n        k2 = k2 << 15 | k2 >>> 17;\n        k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n        h2 ^= k2;\n        h2 = h2 << 13 | h2 >>> 19;\n        h2 = h2 * 5 + 0xe6546b64;\n      }\n    }\n\n    k1 = 0;\n\n    switch (tailLength) {\n      case 3:\n        k1 ^= data[blockCounts * 4 + 2] << 16;\n\n      case 2:\n        k1 ^= data[blockCounts * 4 + 1] << 8;\n\n      case 1:\n        k1 ^= data[blockCounts * 4];\n        k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n        k1 = k1 << 15 | k1 >>> 17;\n        k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\n        if (blockCounts & 1) {\n          h1 ^= k1;\n        } else {\n          h2 ^= k1;\n        }\n\n    }\n\n    this.h1 = h1;\n    this.h2 = h2;\n  }\n\n  hexdigest() {\n    let h1 = this.h1,\n        h2 = this.h2;\n    h1 ^= h2 >>> 1;\n    h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n    h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n    h1 ^= h2 >>> 1;\n    h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n    h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n    h1 ^= h2 >>> 1;\n    const hex1 = (h1 >>> 0).toString(16),\n          hex2 = (h2 >>> 0).toString(16);\n    return hex1.padStart(8, \"0\") + hex2.padStart(8, \"0\");\n  }\n\n}\n\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 10 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.CanvasGraphics = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _pattern_helper = __w_pdfjs_require__(11);\n\nvar _image_utils = __w_pdfjs_require__(12);\n\nvar _is_node = __w_pdfjs_require__(3);\n\nvar _display_utils = __w_pdfjs_require__(5);\n\nconst MIN_FONT_SIZE = 16;\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\nconst EXECUTION_TIME = 15;\nconst EXECUTION_STEPS = 10;\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\nconst FULL_CHUNK_HEIGHT = 16;\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n\n  ctx.save = function ctxSave() {\n    destCtx.save();\n\n    this.__originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n\n    this.__originalRestore();\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n\n    this.__originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n\n    this.__originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n\n    this.__originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n\n    this.__originalRotate(angle);\n  };\n\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n\n    this.__originalClip(rule);\n  };\n\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n\n    this.__originalMoveTo(x, y);\n  };\n\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n\n    this.__originalLineTo(x, y);\n  };\n\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n\n    this.__originalRect(x, y, width, height);\n  };\n\n  ctx.closePath = function () {\n    destCtx.closePath();\n\n    this.__originalClosePath();\n  };\n\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n\n    this.__originalBeginPath();\n  };\n}\n\nfunction addContextCurrentTransform(ctx) {\n  if (ctx._transformStack) {\n    ctx._transformStack = [];\n  }\n\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    const desc = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(ctx), \"lineWidth\");\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      }\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    }\n  });\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n      return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n    }\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n\n    this._transformStack.push(old);\n\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    if (this._transformStack.length === 0) {\n      (0, _util.warn)(\"Tried to restore a ctx when the stack was already empty.\");\n    }\n\n    const prev = this._transformStack.pop();\n\n    if (prev) {\n      this._transformMatrix = prev;\n\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n    const m = this._transformMatrix;\n    this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n\n    return canvasEntry;\n  }\n\n  delete(id) {\n    delete this.cache[id];\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n\n}\n\nfunction drawImageAtIntegerCoords(ctx, srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH) {\n  const [a, b, c, d, tx, ty] = ctx.mozCurrentTransform;\n\n  if (b === 0 && c === 0) {\n    const tlX = destX * a + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destY * d + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destX + destW) * a + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destY + destH) * d + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n    ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n    ctx.setTransform(a, b, c, d, tx, ty);\n    return [rWidth, rHeight];\n  }\n\n  if (a === 0 && d === 0) {\n    const tlX = destY * c + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destX * b + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destY + destH) * c + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destX + destW) * b + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n    ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n    ctx.setTransform(a, b, c, d, tx, ty);\n    return [rHeight, rWidth];\n  }\n\n  ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n  const scaleX = Math.hypot(a, b);\n  const scaleY = Math.hypot(c, d);\n  return [scaleX * destW, scaleY * destH];\n}\n\nfunction compileType3Glyph(imgData) {\n  const {\n    width,\n    height\n  } = imgData;\n\n  if (!COMPILE_TYPE3_GLYPHS || width > MAX_SIZE_TO_COMPILE || height > MAX_SIZE_TO_COMPILE) {\n    return null;\n  }\n\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n  const width1 = width + 1;\n  let points = new Uint8Array(width1 * (height + 1));\n  let i, j, j0;\n  const lineSize = width + 7 & ~7;\n  let data = new Uint8Array(lineSize * height),\n      pos = 0;\n\n  for (const elem of imgData.data) {\n    let mask = 128;\n\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  let count = 0;\n  pos = 0;\n\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n\n    pos++;\n  }\n\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n\n    for (j = 1; j < width; j++) {\n      sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n\n      pos++;\n    }\n\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n\n    pos++;\n  }\n\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  let path, outlines, coords;\n\n  if (!_is_node.isNodeJS) {\n    path = new Path2D();\n  } else {\n    outlines = [];\n  }\n\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n\n    while (p < end && !points[p]) {\n      p++;\n    }\n\n    if (p === end) {\n      continue;\n    }\n\n    if (path) {\n      path.moveTo(p % width1, i);\n    } else {\n      coords = [p % width1, i];\n    }\n\n    const p0 = p;\n    let type = points[p];\n\n    do {\n      const step = steps[type];\n\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n\n      if (pp !== 5 && pp !== 10) {\n        type = pp;\n        points[p] = 0;\n      } else {\n        type = pp & 0x33 * type >> 4;\n        points[p] &= type >> 2 | type << 2;\n      }\n\n      if (path) {\n        path.lineTo(p % width1, p / width1 | 0);\n      } else {\n        coords.push(p % width1, p / width1 | 0);\n      }\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n\n    if (!path) {\n      outlines.push(coords);\n    }\n\n    --i;\n  }\n\n  data = null;\n  points = null;\n\n  const drawOutline = function (c) {\n    c.save();\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n\n    if (path) {\n      c.fill(path);\n    } else {\n      c.beginPath();\n\n      for (const o of outlines) {\n        c.moveTo(o[0], o[1]);\n\n        for (let l = 2, ll = o.length; l < ll; l += 2) {\n          c.lineTo(o[l], o[l + 1]);\n        }\n      }\n\n      c.fill();\n    }\n\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor(width, height) {\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = _util.IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    this.x = 0;\n    this.y = 0;\n    this.lineX = 0;\n    this.lineY = 0;\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.textRise = 0;\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = null;\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  updatePathMinMax(transform, x, y) {\n    [x, y] = _util.Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n\n  updateRectMinMax(transform, rect) {\n    const p1 = _util.Util.applyTransform(rect, transform);\n\n    const p2 = _util.Util.applyTransform(rect.slice(2), transform);\n\n    this.minX = Math.min(this.minX, p1[0], p2[0]);\n    this.minY = Math.min(this.minY, p1[1], p2[1]);\n    this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n    this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n  }\n\n  updateScalingPathMinMax(transform, minMax) {\n    _util.Util.scaleMinMax(transform, minMax);\n\n    this.minX = Math.min(this.minX, minMax[0]);\n    this.maxX = Math.max(this.maxX, minMax[1]);\n    this.minY = Math.min(this.minY, minMax[2]);\n    this.maxY = Math.max(this.maxY, minMax[3]);\n  }\n\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n    const box = _util.Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n\n    if (minMax) {\n      minMax[0] = Math.min(minMax[0], box[0], box[2]);\n      minMax[1] = Math.max(minMax[1], box[0], box[2]);\n      minMax[2] = Math.min(minMax[2], box[1], box[3]);\n      minMax[3] = Math.max(minMax[3], box[1], box[3]);\n      return;\n    }\n\n    this.updateRectMinMax(transform, box);\n  }\n\n  getPathBoundingBox(pathType = _pattern_helper.PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n\n    if (pathType === _pattern_helper.PathType.STROKE) {\n      if (!transform) {\n        (0, _util.unreachable)(\"Stroke bounding box must include transform.\");\n      }\n\n      const scale = _util.Util.singularValueDecompose2dScale(transform);\n\n      const xStrokePad = scale[0] * this.lineWidth / 2;\n      const yStrokePad = scale[1] * this.lineWidth / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n\n    return box;\n  }\n\n  updateClipFromPath() {\n    const intersect = _util.Util.intersect(this.clipBox, this.getPathBoundingBox());\n\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n\n  isEmptyClip() {\n    return this.minX === Infinity;\n  }\n\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  getClippedPathBoundingBox(pathType = _pattern_helper.PathType.FILL, transform = null) {\n    return _util.Util.intersect(this.clipBox, this.getPathBoundingBox(pathType, transform));\n  }\n\n}\n\nfunction putBinaryImageData(ctx, imgData, transferMaps = null) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  const height = imgData.height,\n        width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n      destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n  let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n\n  if (transferMaps) {\n    switch (transferMaps.length) {\n      case 1:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[0];\n        transferMapBlue = transferMaps[0];\n        transferMapGray = transferMaps[0];\n        break;\n\n      case 4:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[1];\n        transferMapBlue = transferMaps[2];\n        transferMapGray = transferMaps[3];\n        break;\n    }\n  }\n\n  if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = width + 7 >> 3;\n    let white = 0xffffffff;\n    let black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n\n    if (transferMapGray) {\n      if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n        [white, black] = [black, white];\n      }\n    }\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n    const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n    const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n\n      for (j = elemsInThisChunk; j--;) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < destPos; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  if (imgData.bitmap) {\n    ctx.drawImage(imgData.bitmap, 0, 0);\n    return;\n  }\n\n  const height = imgData.height,\n        width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n    ({\n      srcPos\n    } = (0, _image_utils.applyMaskImageData)({\n      src,\n      srcPos,\n      dest,\n      width,\n      height: thisChunkHeight\n    }));\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n\n  for (let i = 0, ii = properties.length; i < ii; i++) {\n    const property = properties[i];\n\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx, foregroundColor) {\n  ctx.strokeStyle = ctx.fillStyle = foregroundColor || \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n      bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n      bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = layerData[i] * alpha * scale | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n\n  for (let i = 3; i < length; i += 4) {\n    const y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n    layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n  }\n}\n\nfunction genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap, layerOffsetX, layerOffsetY, maskOffsetX, maskOffsetY) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n  let composeFn;\n\n  if (subtype === \"Luminosity\") {\n    composeFn = composeSMaskLuminosity;\n  } else {\n    composeFn = composeSMaskAlpha;\n  }\n\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(layerOffsetX - maskOffsetX, row + (layerOffsetY - maskOffsetY), width, chunkHeight);\n    const layerData = layerCtx.getImageData(layerOffsetX, row + layerOffsetY, width, chunkHeight);\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n\n    composeFn(maskData.data, layerData.data, transferMap);\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n\n  genericComposeSMask(smask.context, layerCtx, layerWidth, layerHeight, smask.subtype, smask.backdrop, smask.transferMap, layerOffsetX, layerOffsetY, smask.offsetX, smask.offsetY);\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = _util.Util.singularValueDecompose2dScale(transform);\n\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround((globalThis.devicePixelRatio || 1) * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n\n  if (interpolate !== undefined) {\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    return true;\n  }\n\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(canvasCtx, commonObjs, objs, canvasFactory, imageLayer, optionalContentConfig, annotationCanvasMap, pageColors) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    this.backgroundColor = pageColors?.background || null;\n    this.foregroundColor = pageColors?.foreground || null;\n\n    if (canvasCtx) {\n      addContextCurrentTransform(canvasCtx);\n    }\n\n    this._cachedScaleForStroking = null;\n    this._cachedGetSinglePixelWidth = null;\n    this._cachedBitmapsMap = new Map();\n  }\n\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n    }\n\n    return fallback;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null\n  }) {\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n    const defaultBackgroundColor = background || \"#ffffff\";\n    this.ctx.save();\n\n    if (this.foregroundColor && this.backgroundColor) {\n      this.ctx.fillStyle = this.foregroundColor;\n      const fg = this.foregroundColor = this.ctx.fillStyle;\n      this.ctx.fillStyle = this.backgroundColor;\n      const bg = this.backgroundColor = this.ctx.fillStyle;\n      let isValidDefaultBg = true;\n      let defaultBg = defaultBackgroundColor;\n      this.ctx.fillStyle = defaultBackgroundColor;\n      defaultBg = this.ctx.fillStyle;\n      isValidDefaultBg = typeof defaultBg === \"string\" && /^#[0-9A-Fa-f]{6}$/.test(defaultBg);\n\n      if (fg === \"#000000\" && bg === \"#ffffff\" || fg === bg || !isValidDefaultBg) {\n        this.foregroundColor = this.backgroundColor = null;\n      } else {\n        const cB = parseInt(defaultBg.slice(1), 16);\n        const rB = (cB && 0xff0000) >> 16;\n        const gB = (cB && 0x00ff00) >> 8;\n        const bB = cB && 0x0000ff;\n\n        const newComp = x => {\n          x /= 255;\n          return x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n        };\n\n        const lumB = Math.round(0.2126 * newComp(rB) + 0.7152 * newComp(gB) + 0.0722 * newComp(bB));\n\n        this.selectColor = (r, g, b) => {\n          const lumC = 0.2126 * newComp(r) + 0.7152 * newComp(g) + 0.0722 * newComp(b);\n          return Math.round(lumC) === lumB ? bg : fg;\n        };\n      }\n    }\n\n    this.ctx.fillStyle = this.backgroundColor || defaultBackgroundColor;\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.restore();\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx, this.foregroundColor);\n\n    if (transform) {\n      this.ctx.transform.apply(this.ctx, transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n\n    this.ctx.transform.apply(this.ctx, viewport.transform);\n    this.viewportScale = viewport.scale;\n    this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n    if (this.imageLayer) {\n      this.imageLayer.beginLayout();\n    }\n  }\n\n  executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== _util.OPS.dependency) {\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n\n        steps = 0;\n      }\n    }\n  }\n\n  endDrawing() {\n    while (this.stateStack.length || this.inSMaskMode) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n\n    for (const cache of this._cachedBitmapsMap.values()) {\n      for (const canvas of cache.values()) {\n        if (typeof HTMLCanvasElement !== \"undefined\" && canvas instanceof HTMLCanvasElement) {\n          canvas.width = canvas.height = 0;\n        }\n      }\n\n      cache.clear();\n    }\n\n    this._cachedBitmapsMap.clear();\n\n    if (this.imageLayer) {\n      this.imageLayer.endLayout();\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);\n    let heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);\n    let paintWidth = width,\n        paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n\n    while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n      let newWidth = paintWidth,\n          newHeight = paintHeight;\n\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = Math.ceil(paintHeight / 2);\n        heightScale /= paintHeight / newHeight;\n      }\n\n      tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight, false);\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n\n    return {\n      img,\n      paintWidth,\n      paintHeight\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const {\n      width,\n      height\n    } = img;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const currentTransform = ctx.mozCurrentTransform;\n    let cache, cacheKey, scaled, maskCanvas;\n\n    if ((img.bitmap || img.data) && img.count > 1) {\n      const mainKey = img.bitmap || img.data.buffer;\n      const withoutTranslation = currentTransform.slice(0, 4);\n      cacheKey = JSON.stringify(isPatternFill ? withoutTranslation : [withoutTranslation, fillColor]);\n      cache = this._cachedBitmapsMap.get(mainKey);\n\n      if (!cache) {\n        cache = new Map();\n\n        this._cachedBitmapsMap.set(mainKey, cache);\n      }\n\n      const cachedImage = cache.get(cacheKey);\n\n      if (cachedImage && !isPatternFill) {\n        const offsetX = Math.round(Math.min(currentTransform[0], currentTransform[2]) + currentTransform[4]);\n        const offsetY = Math.round(Math.min(currentTransform[1], currentTransform[3]) + currentTransform[5]);\n        return {\n          canvas: cachedImage,\n          offsetX,\n          offsetY\n        };\n      }\n\n      scaled = cachedImage;\n    }\n\n    if (!scaled) {\n      maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height, false);\n      putBinaryImageMask(maskCanvas.context, img);\n    }\n\n    let maskToCanvas = _util.Util.transform(currentTransform, [1 / width, 0, 0, -1 / height, 0, 0]);\n\n    maskToCanvas = _util.Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n\n    const cord1 = _util.Util.applyTransform([0, 0], maskToCanvas);\n\n    const cord2 = _util.Util.applyTransform([width, height], maskToCanvas);\n\n    const rect = _util.Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n\n    const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n    const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n    const fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight, true);\n    const fillCtx = fillCanvas.context;\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform.apply(fillCtx, maskToCanvas);\n\n    if (!scaled) {\n      scaled = this._scaleImage(maskCanvas.canvas, fillCtx.mozCurrentTransformInverse);\n      scaled = scaled.img;\n\n      if (cache && isPatternFill) {\n        cache.set(cacheKey, scaled);\n      }\n    }\n\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(fillCtx.mozCurrentTransform, img.interpolate);\n    drawImageAtIntegerCoords(fillCtx, scaled, 0, 0, scaled.width, scaled.height, 0, 0, width, height);\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = _util.Util.transform(fillCtx.mozCurrentTransformInverse, [1, 0, 0, 1, -offsetX, -offsetY]);\n\n    fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, _pattern_helper.PathType.FILL) : fillColor;\n    fillCtx.fillRect(0, 0, width, height);\n\n    if (cache && !isPatternFill) {\n      this.cachedCanvases.delete(\"fillCanvas\");\n      cache.set(cacheKey, fillCanvas.canvas);\n    }\n\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY)\n    };\n  }\n\n  setLineWidth(width) {\n    if (width !== this.current.lineWidth) {\n      this._cachedScaleForStroking = null;\n    }\n\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {}\n\n  setFlatness(flatness) {}\n\n  setGState(states) {\n    for (let i = 0, ii = states.length; i < ii; i++) {\n      const state = states[i];\n      const key = state[0];\n      const value = state[1];\n\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n\n        case \"CA\":\n          this.current.strokeAlpha = state[1];\n          break;\n\n        case \"ca\":\n          this.current.fillAlpha = state[1];\n          this.ctx.globalAlpha = state[1];\n          break;\n\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n\n        case \"TR\":\n          this.current.transferMaps = value;\n      }\n    }\n  }\n\n  get inSMaskMode() {\n    return !!this.suspendedCtx;\n  }\n\n  checkSMaskState() {\n    const inSMaskMode = this.inSMaskMode;\n\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n  }\n\n  beginSMaskMode() {\n    if (this.inSMaskMode) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform.apply(ctx, this.suspendedCtx.mozCurrentTransform);\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n    this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n  }\n\n  endSMaskMode() {\n    if (!this.inSMaskMode) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n\n    this.ctx._removeMirroring();\n\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n    this.suspendedCtx = null;\n  }\n\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n\n  save() {\n    if (this.inSMaskMode) {\n      copyCtxState(this.ctx, this.suspendedCtx);\n      this.suspendedCtx.save();\n    } else {\n      this.ctx.save();\n    }\n\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    if (this.stateStack.length === 0 && this.inSMaskMode) {\n      this.endSMaskMode();\n    }\n\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n\n      if (this.inSMaskMode) {\n        this.suspendedCtx.restore();\n        copyCtxState(this.suspendedCtx, this.ctx);\n      } else {\n        this.ctx.restore();\n      }\n\n      this.checkSMaskState();\n      this.pendingClip = null;\n      this._cachedScaleForStroking = null;\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n    this._cachedScaleForStroking = null;\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  constructPath(ops, args, minMax) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n        y = current.y;\n    let startX, startY;\n    const currentTransform = ctx.mozCurrentTransform;\n    const isScalingMatrix = currentTransform[0] === 0 && currentTransform[3] === 0 || currentTransform[1] === 0 && currentTransform[2] === 0;\n    const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case _util.OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n\n          if (!isScalingMatrix) {\n            current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n          }\n\n          ctx.closePath();\n          break;\n\n        case _util.OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n\n          break;\n\n        case _util.OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n\n          break;\n\n        case _util.OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n          current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], args[j + 2], args[j + 3], x, y, minMaxForBezier);\n          j += 6;\n          break;\n\n        case _util.OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n          current.updateCurvePathMinMax(currentTransform, startX, startY, x, y, args[j], args[j + 1], args[j + 2], args[j + 3], minMaxForBezier);\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n\n        case _util.OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], x, y, x, y, minMaxForBezier);\n          j += 4;\n          break;\n\n        case _util.OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n\n    if (isScalingMatrix) {\n      current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n    }\n\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    ctx.globalAlpha = this.current.strokeAlpha;\n\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.STROKE);\n        this.rescaleAndStroke(false);\n        ctx.restore();\n      } else {\n        this.rescaleAndStroke(true);\n      }\n    }\n\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL);\n      needRestore = true;\n    }\n\n    const intersect = this.current.getClippedPathBoundingBox();\n\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  beginText() {\n    this.current.textMatrix = _util.IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      ctx.setTransform.apply(ctx, path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n\n    current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return;\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n    let bold = \"normal\";\n\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n    let browserFontSize = size;\n\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n\n    this.current.fontSizeScale = size / browserFontSize;\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n    const patternFill = current.patternFill && !font.missingFile;\n    let addToPath;\n\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n\n      if (patternTransform) {\n        ctx.setTransform.apply(ctx, patternTransform);\n      }\n\n      if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        ctx.fill();\n      }\n\n      if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    } else {\n      if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        ctx.fillText(character, x, y);\n      }\n\n      if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        ctx.strokeText(character, x, y);\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n      paths.push({\n        transform: ctx.mozCurrentTransform,\n        x,\n        y,\n        fontSize,\n        addToPath\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    const {\n      context: ctx\n    } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10, false);\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n\n    return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n    const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let patternTransform;\n\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL);\n      patternTransform = ctx.mozCurrentTransform;\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n\n    let lineWidth = current.lineWidth;\n    const scale = current.textMatrixScale;\n\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n      if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        lineWidth = this.getSinglePixelWidth();\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n    let x = 0,\n        i;\n\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n\n      if (typeof glyph === \"number\") {\n        x += spacingDir * glyph * fontSize / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n        }\n      }\n\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(character, scaledX, scaledY, patternTransform);\n\n          if (accent) {\n            const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n            const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n            this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n          }\n        }\n      }\n\n      let charWidth;\n\n      if (vertical) {\n        charWidth = width * widthAdvanceScale - spacing * fontDirection;\n      } else {\n        charWidth = width * widthAdvanceScale + spacing * fontDirection;\n      }\n\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n\n    ctx.restore();\n    this.compose();\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n\n    this._cachedScaleForStroking = null;\n    this._cachedGetSinglePixelWidth = null;\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y);\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n\n      if (typeof glyph === \"number\") {\n        spacingLength = spacingDir * glyph * fontSize / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n\n      if (!operatorList) {\n        (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n\n      width = transformed[0] * fontSize + spacing;\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  setCharWidth(xWidth, yWidth) {}\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.ctx.clip();\n    this.endPath();\n  }\n\n  getColorN_Pattern(IR) {\n    let pattern;\n\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory);\n        }\n      };\n      pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = this.selectColor?.(r, g, b) || _util.Util.makeHexColor(r, g, b);\n\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = this.selectColor?.(r, g, b) || _util.Util.makeHexColor(r, g, b);\n\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = (0, _pattern_helper.getShadingPattern)(this.objs.get(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    const ctx = this.ctx;\n    this.save();\n\n    const pattern = this._getPattern(objId);\n\n    ctx.fillStyle = pattern.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.SHADING);\n    const inv = ctx.mozCurrentTransformInverse;\n\n    if (inv) {\n      const canvas = ctx.canvas;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const bl = _util.Util.applyTransform([0, 0], inv);\n\n      const br = _util.Util.applyTransform([0, height], inv);\n\n      const ul = _util.Util.applyTransform([width, 0], inv);\n\n      const ur = _util.Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n\n  beginInlineImage() {\n    (0, _util.unreachable)(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    (0, _util.unreachable)(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform.apply(this, matrix);\n    }\n\n    this.baseTransform = this.ctx.mozCurrentTransform;\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updateRectMinMax(this.ctx.mozCurrentTransform, bbox);\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n\n    if (this.inSMaskMode) {\n      this.endSMaskMode();\n      this.current.activeSMask = null;\n    }\n\n    const currentCtx = this.ctx;\n\n    if (!group.isolated) {\n      (0, _util.info)(\"TODO: Support non-isolated groups.\");\n    }\n\n    if (group.knockout) {\n      (0, _util.warn)(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = currentCtx.mozCurrentTransform;\n\n    if (group.matrix) {\n      currentCtx.transform.apply(currentCtx, group.matrix);\n    }\n\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n\n    const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n    bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n        scaleY = 1;\n\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n    let cacheId = \"groupAt\" + this.groupLevel;\n\n    if (group.smask) {\n      cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n    }\n\n    const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n    const groupCtx = scratchCanvas.context;\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    if (group.smask) {\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null\n      });\n    } else {\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const ctx = this.groupStack.pop();\n    this.ctx = ctx;\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = this.ctx.mozCurrentTransform;\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform.apply(this.ctx, currentMtx);\n\n      const dirtyBox = _util.Util.getAxialAlignedBoundingBox([0, 0, groupCtx.canvas.width, groupCtx.canvas.height], currentMtx);\n\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n\n  beginAnnotations() {\n    this.save();\n\n    if (this.baseTransform) {\n      this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n    }\n  }\n\n  endAnnotations() {\n    this.restore();\n  }\n\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    this.save();\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n\n        const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale(this.ctx.mozCurrentTransform);\n\n        const {\n          viewportScale\n        } = this;\n        const canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale);\n        const canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale);\n        this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight);\n        const {\n          canvas,\n          context\n        } = this.annotationCanvas;\n        const viewportScaleFactorStr = `var(--zoom-factor) * ${_display_utils.PixelsPerInch.PDF_TO_CSS_UNITS}`;\n        canvas.style.width = `calc(${width}px * ${viewportScaleFactorStr})`;\n        canvas.style.height = `calc(${height}px * ${viewportScaleFactorStr})`;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n        addContextCurrentTransform(this.ctx);\n        resetCtxToDefault(this.ctx, this.foregroundColor);\n      } else {\n        resetCtxToDefault(this.ctx, this.foregroundColor);\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.ctx.clip();\n        this.endPath();\n      }\n    }\n\n    this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n    this.transform.apply(this, transform);\n    this.transform.apply(this, matrix);\n  }\n\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n\n    this.restore();\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    const count = img.count;\n    img = this.getObject(img.data, img);\n    img.count = count;\n    const ctx = this.ctx;\n    const glyph = this.processingType3;\n\n    if (glyph) {\n      if (glyph.compiled === undefined) {\n        glyph.compiled = compileType3Glyph(img);\n      }\n\n      if (glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n    }\n\n    const mask = this._createMaskCanvas(img);\n\n    const maskCanvas = mask.canvas;\n    ctx.save();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectRepeat(img, scaleX, skewX = 0, skewY = 0, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    img = this.getObject(img.data, img);\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = ctx.mozCurrentTransform;\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n\n    const mask = this._createMaskCanvas(img);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = _util.Util.transform(currentTransform, [scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]]);\n\n      const [x, y] = _util.Util.applyTransform([0, 0], trans);\n\n      ctx.drawImage(mask.canvas, x, y);\n    }\n\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n\n    for (let i = 0, ii = images.length; i < ii; i++) {\n      const image = images[i];\n      const width = image.width,\n            height = image.height;\n      const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height, false);\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n      putBinaryImageMask(maskCtx, image);\n      maskCtx.globalCompositeOperation = \"source-in\";\n      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL) : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n      maskCtx.restore();\n      ctx.save();\n      ctx.transform.apply(ctx, image.transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(ctx, maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      ctx.restore();\n    }\n\n    this.compose();\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    const imgData = this.getObject(objId);\n\n    if (!imgData) {\n      (0, _util.warn)(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    const imgData = this.getObject(objId);\n\n    if (!imgData) {\n      (0, _util.warn)(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height\n      });\n    }\n\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n    this.save();\n    ctx.scale(1 / width, -1 / height);\n    let imgToPaint;\n\n    if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height, false);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n      imgToPaint = tmpCanvas.canvas;\n    }\n\n    const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(ctx.mozCurrentTransform, imgData.interpolate);\n    const [rWidth, rHeight] = drawImageAtIntegerCoords(ctx, scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height);\n\n    if (this.imageLayer) {\n      const position = this.getCanvasPosition(0, -height);\n      this.imageLayer.appendImage({\n        imgData,\n        left: position[0],\n        top: position[1],\n        width: rWidth,\n        height: rHeight\n      });\n    }\n\n    this.compose();\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    const ctx = this.ctx;\n    const w = imgData.width;\n    const h = imgData.height;\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h, false);\n    const tmpCtx = tmpCanvas.context;\n    putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n    for (let i = 0, ii = map.length; i < ii; i++) {\n      const entry = map[i];\n      ctx.save();\n      ctx.transform.apply(ctx, entry.transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(ctx, tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(entry.x, entry.y);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: w,\n          height: h\n        });\n      }\n\n      ctx.restore();\n    }\n\n    this.compose();\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n\n  markPoint(tag) {}\n\n  markPointProps(tag, properties) {}\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties)\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true\n      });\n    }\n\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  beginCompat() {}\n\n  endCompat() {}\n\n  consumePath(clipBox) {\n    const isEmpty = this.current.isEmptyClip();\n\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n\n    const ctx = this.ctx;\n\n    if (this.pendingClip) {\n      if (!isEmpty) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n      }\n\n      this.pendingClip = null;\n    }\n\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (!this._cachedGetSinglePixelWidth) {\n      const m = this.ctx.mozCurrentTransform;\n\n      if (m[1] === 0 && m[2] === 0) {\n        this._cachedGetSinglePixelWidth = 1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n      } else {\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const normX = Math.hypot(m[0], m[2]);\n        const normY = Math.hypot(m[1], m[3]);\n        this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n      }\n    }\n\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getScaleForStroking() {\n    if (!this._cachedScaleForStroking) {\n      const {\n        lineWidth\n      } = this.current;\n      const m = this.ctx.mozCurrentTransform;\n      let scaleX, scaleY;\n\n      if (m[1] === 0 && m[2] === 0) {\n        const normX = Math.abs(m[0]);\n        const normY = Math.abs(m[3]);\n\n        if (lineWidth === 0) {\n          scaleX = 1 / normX;\n          scaleY = 1 / normY;\n        } else {\n          const scaledXLineWidth = normX * lineWidth;\n          const scaledYLineWidth = normY * lineWidth;\n          scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n          scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n        }\n      } else {\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const normX = Math.hypot(m[0], m[1]);\n        const normY = Math.hypot(m[2], m[3]);\n\n        if (lineWidth === 0) {\n          scaleX = normY / absDet;\n          scaleY = normX / absDet;\n        } else {\n          const baseArea = lineWidth * absDet;\n          scaleX = normY > baseArea ? normY / baseArea : 1;\n          scaleY = normX > baseArea ? normX / baseArea : 1;\n        }\n      }\n\n      this._cachedScaleForStroking = [scaleX, scaleY];\n    }\n\n    return this._cachedScaleForStroking;\n  }\n\n  rescaleAndStroke(saveRestore) {\n    const {\n      ctx\n    } = this;\n    const {\n      lineWidth\n    } = this.current;\n    const [scaleX, scaleY] = this.getScaleForStroking();\n    ctx.lineWidth = lineWidth || 1;\n\n    if (scaleX === 1 && scaleY === 1) {\n      ctx.stroke();\n      return;\n    }\n\n    let savedMatrix, savedDashes, savedDashOffset;\n\n    if (saveRestore) {\n      savedMatrix = ctx.mozCurrentTransform.slice();\n      savedDashes = ctx.getLineDash().slice();\n      savedDashOffset = ctx.lineDashOffset;\n    }\n\n    ctx.scale(scaleX, scaleY);\n    const scale = Math.max(scaleX, scaleY);\n    ctx.setLineDash(ctx.getLineDash().map(x => x / scale));\n    ctx.lineDashOffset /= scale;\n    ctx.stroke();\n\n    if (saveRestore) {\n      ctx.setTransform(...savedMatrix);\n      ctx.setLineDash(savedDashes);\n      ctx.lineDashOffset = savedDashOffset;\n    }\n  }\n\n  getCanvasPosition(x, y) {\n    const transform = this.ctx.mozCurrentTransform;\n    return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n}\n\nexports.CanvasGraphics = CanvasGraphics;\n\nfor (const op in _util.OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\n/***/ }),\n/* 11 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.TilingPattern = exports.PathType = void 0;\nexports.getShadingPattern = getShadingPattern;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _is_node = __w_pdfjs_require__(3);\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\"\n};\nexports.PathType = PathType;\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || _is_node.isNodeJS) {\n    return;\n  }\n\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      (0, _util.unreachable)(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    (0, _util.unreachable)(\"Abstract method `getPattern` called.\");\n  }\n\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(pathType, ctx.mozCurrentTransform) || [0, 0, 0, 0];\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", width, height, true);\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = _util.Util.transform(inverse, [1, 0, 0, 1, ownerBBox[0], ownerBBox[1]]);\n      tmpCtx.transform.apply(tmpCtx, owner.baseTransform);\n\n      if (this.matrix) {\n        tmpCtx.transform.apply(tmpCtx, this.matrix);\n      }\n\n      applyBoundingBox(tmpCtx, this._bbox);\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        (0, _util.warn)(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    } else {\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n\n    return pattern;\n  }\n\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  const coords = context.coords,\n        colors = context.colors;\n  const bytes = data.data,\n        rowSize = data.width * 4;\n  let tmp;\n\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n\n  if (y1 >= y3) {\n    return;\n  }\n\n  const c1r = colors[c1],\n        c1g = colors[c1 + 1],\n        c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n        c2g = colors[c2 + 1],\n        c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n        c3g = colors[c3 + 1],\n        c3b = colors[c3 + 2];\n  const minY = Math.round(y1),\n        maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n\n      bytes[j++] = car - (car - cbr) * k | 0;\n      bytes[j++] = cag - (cag - cbg) * k | 0;\n      bytes[j++] = cab - (cab - cbb) * k | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n          drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n        }\n      }\n\n      break;\n\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n      }\n\n      break;\n\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    const EXPECTED_SCALE = 1.1;\n    const MAX_PATTERN_SIZE = 3000;\n    const BORDER_SIZE = 2;\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n    const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY\n    };\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n    const tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n    const tmpCtx = tmpCanvas.context;\n    const data = tmpCtx.createImageData(width, height);\n\n    if (backgroundColor) {\n      const bytes = data.data;\n\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY\n    };\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n\n    if (pathType === PathType.SHADING) {\n      scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n\n      if (this.matrix) {\n        const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    const temporaryPatternCanvas = this._createMeshCanvas(scale, pathType === PathType.SHADING ? null : this._background, owner.cachedCanvases);\n\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n\n      if (this.matrix) {\n        ctx.transform.apply(ctx, this.matrix);\n      }\n    }\n\n    ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2\n};\n\nclass TilingPattern {\n  static get MAX_PATTERN_SIZE() {\n    return (0, _util.shadow)(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n    (0, _util.info)(\"TilingType: \" + tilingType);\n    const x0 = bbox[0],\n          y0 = bbox[1],\n          x1 = bbox[2],\n          y1 = bbox[3];\n\n    const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n    const curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n\n    const combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n    const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n    const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n    tmpCtx.save();\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n    graphics.executeOperatorList(operatorList);\n    graphics.endDrawing();\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    step = Math.abs(step);\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n\n    return {\n      scale,\n      size\n    };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.current.updateRectMinMax(graphics.ctx.mozCurrentTransform, [x0, y0, x1, y1]);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n          current = graphics.current;\n\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n\n      case PaintType.UNCOLORED:\n        const cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n\n      default:\n        throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let matrix = inverse;\n\n    if (pathType !== PathType.SHADING) {\n      matrix = _util.Util.transform(matrix, owner.baseTransform);\n\n      if (this.matrix) {\n        matrix = _util.Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n    let domMatrix = new DOMMatrix(matrix);\n    domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n    domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      (0, _util.warn)(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n\n    return pattern;\n  }\n\n}\n\nexports.TilingPattern = TilingPattern;\n\n/***/ }),\n/* 12 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.applyMaskImageData = applyMaskImageData;\n\nvar _util = __w_pdfjs_require__(1);\n\nfunction applyMaskImageData({\n  src,\n  srcPos = 0,\n  dest,\n  destPos = 0,\n  width,\n  height,\n  inverseDecode = false\n}) {\n  const opaque = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n  const [zeroMapping, oneMapping] = !inverseDecode ? [opaque, 0] : [0, opaque];\n  const widthInSource = width >> 3;\n  const widthRemainder = width & 7;\n  const srcLength = src.length;\n  dest = new Uint32Array(dest.buffer);\n\n  for (let i = 0; i < height; i++) {\n    for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n      const elem = srcPos < srcLength ? src[srcPos] : 255;\n      dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n    }\n\n    if (widthRemainder === 0) {\n      continue;\n    }\n\n    const elem = srcPos < srcLength ? src[srcPos++] : 255;\n\n    for (let j = 0; j < widthRemainder; j++) {\n      dest[destPos++] = elem & 1 << 7 - j ? oneMapping : zeroMapping;\n    }\n  }\n\n  return {\n    srcPos,\n    destPos\n  };\n}\n\n/***/ }),\n/* 13 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.GlobalWorkerOptions = void 0;\nconst GlobalWorkerOptions = Object.create(null);\nexports.GlobalWorkerOptions = GlobalWorkerOptions;\nGlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\nGlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n\n/***/ }),\n/* 14 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.MessageHandler = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2\n};\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8\n};\n\nfunction wrapReason(reason) {\n  if (!(reason instanceof Error || typeof reason === \"object\" && reason !== null)) {\n    (0, _util.unreachable)('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n  }\n\n  switch (reason.name) {\n    case \"AbortException\":\n      return new _util.AbortException(reason.message);\n\n    case \"MissingPDFException\":\n      return new _util.MissingPDFException(reason.message);\n\n    case \"PasswordException\":\n      return new _util.PasswordException(reason.message, reason.code);\n\n    case \"UnexpectedResponseException\":\n      return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n    case \"UnknownErrorException\":\n      return new _util.UnknownErrorException(reason.message, reason.details);\n\n    default:\n      return new _util.UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n\n      if (data.stream) {\n        this._processStreamMessage(data);\n\n        return;\n      }\n\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n\n        return;\n      }\n\n      const action = this.actionHandler[data.action];\n\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: cbSourceName,\n            targetName: cbTargetName,\n            callback: CallbackKind.DATA,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: cbSourceName,\n            targetName: cbTargetName,\n            callback: CallbackKind.ERROR,\n            callbackId: data.callbackId,\n            reason: wrapReason(reason)\n          });\n        });\n        return;\n      }\n\n      if (data.streamId) {\n        this._createStreamSink(data);\n\n        return;\n      }\n\n      action(data.data);\n    };\n\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    const ah = this.actionHandler;\n\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n\n    ah[actionName] = handler;\n  }\n\n  send(actionName, data, transfers) {\n    this.comObj.postMessage({\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data\n    }, transfers);\n  }\n\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = (0, _util.createPromiseCapability)();\n    this.callbackCapabilities[callbackId] = capability;\n\n    try {\n      this.comObj.postMessage({\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        callbackId,\n        data\n      }, transfers);\n    } catch (ex) {\n      capability.reject(ex);\n    }\n\n    return capability.promise;\n  }\n\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n          sourceName = this.sourceName,\n          targetName = this.targetName,\n          comObj = this.comObj;\n    return new ReadableStream({\n      start: controller => {\n        const startCapability = (0, _util.createPromiseCapability)();\n        this.streamControllers[streamId] = {\n          controller,\n          startCall: startCapability,\n          pullCall: null,\n          cancelCall: null,\n          isClosed: false\n        };\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          action: actionName,\n          streamId,\n          data,\n          desiredSize: controller.desiredSize\n        }, transfers);\n        return startCapability.promise;\n      },\n      pull: controller => {\n        const pullCapability = (0, _util.createPromiseCapability)();\n        this.streamControllers[streamId].pullCall = pullCapability;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.PULL,\n          streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: reason => {\n        (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n        const cancelCapability = (0, _util.createPromiseCapability)();\n        this.streamControllers[streamId].cancelCall = cancelCapability;\n        this.streamControllers[streamId].isClosed = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CANCEL,\n          streamId,\n          reason: wrapReason(reason)\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  }\n\n  _createStreamSink(data) {\n    const streamId = data.streamId,\n          sourceName = this.sourceName,\n          targetName = data.sourceName,\n          comObj = this.comObj;\n    const self = this,\n          action = this.actionHandler[data.action];\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = (0, _util.createPromiseCapability)();\n          this.ready = this.sinkCapability.promise;\n        }\n\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ENQUEUE,\n          streamId,\n          chunk\n        }, transfers);\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n        if (this.isCancelled) {\n          return;\n        }\n\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason)\n        });\n      },\n\n      sinkCapability: (0, _util.createPromiseCapability)(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(function () {\n      comObj.postMessage({\n        sourceName,\n        targetName,\n        stream: StreamKind.START_COMPLETE,\n        streamId,\n        success: true\n      });\n    }, function (reason) {\n      comObj.postMessage({\n        sourceName,\n        targetName,\n        stream: StreamKind.START_COMPLETE,\n        streamId,\n        reason: wrapReason(reason)\n      });\n    });\n  }\n\n  _processStreamMessage(data) {\n    const streamId = data.streamId,\n          sourceName = this.sourceName,\n          targetName = data.sourceName,\n          comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n          streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n\n        break;\n\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n\n        break;\n\n      case StreamKind.PULL:\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true\n          });\n          break;\n        }\n\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n\n        streamSink.desiredSize = data.desiredSize;\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull && streamSink.onPull());\n        }).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n        break;\n\n      case StreamKind.ENQUEUE:\n        (0, _util.assert)(streamController, \"enqueue should have stream controller\");\n\n        if (streamController.isClosed) {\n          break;\n        }\n\n        streamController.controller.enqueue(data.chunk);\n        break;\n\n      case StreamKind.CLOSE:\n        (0, _util.assert)(streamController, \"close should have stream controller\");\n\n        if (streamController.isClosed) {\n          break;\n        }\n\n        streamController.isClosed = true;\n        streamController.controller.close();\n\n        this._deleteStreamController(streamController, streamId);\n\n        break;\n\n      case StreamKind.ERROR:\n        (0, _util.assert)(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n\n        this._deleteStreamController(streamController, streamId);\n\n        break;\n\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n\n        this._deleteStreamController(streamController, streamId);\n\n        break;\n\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason)));\n        }).then(function () {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL_COMPLETE,\n            streamId,\n            success: true\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL_COMPLETE,\n            streamId,\n            reason: wrapReason(reason)\n          });\n        });\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  async _deleteStreamController(streamController, streamId) {\n    await Promise.allSettled([streamController.startCall && streamController.startCall.promise, streamController.pullCall && streamController.pullCall.promise, streamController.cancelCall && streamController.cancelCall.promise]);\n    delete this.streamControllers[streamId];\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n}\n\nexports.MessageHandler = MessageHandler;\n\n/***/ }),\n/* 15 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.Metadata = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nclass Metadata {\n  #metadataMap;\n  #data;\n\n  constructor({\n    parsedData,\n    rawData\n  }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n\n  getRaw() {\n    return this.#data;\n  }\n\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return (0, _util.objectFromMap)(this.#metadataMap);\n  }\n\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n\n}\n\nexports.Metadata = Metadata;\n\n/***/ }),\n/* 16 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.OptionalContentConfig = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n\n    for (const group of data.groups) {\n      this._groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n\n    if (length < 2) {\n      return true;\n    }\n\n    const operator = array[0];\n\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        (0, _util.warn)(`Optional content group not found: ${element}`);\n        return true;\n      }\n\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n\n          break;\n\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n\n          break;\n\n        case \"Not\":\n          return !state;\n\n        default:\n          return true;\n      }\n    }\n\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this._groups.size === 0) {\n      return true;\n    }\n\n    if (!group) {\n      (0, _util.warn)(\"Optional content group not defined.\");\n      return true;\n    }\n\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        (0, _util.warn)(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n\n      if (!group.policy || group.policy === \"AnyOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return true;\n          }\n\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return true;\n          }\n\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return true;\n          }\n\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return true;\n          }\n\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n\n    (0, _util.warn)(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      (0, _util.warn)(`Optional content group not found: ${id}`);\n      return;\n    }\n\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n\n    if (this._order) {\n      return this._order.slice();\n    }\n\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? (0, _util.objectFromMap)(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n\n}\n\nexports.OptionalContentConfig = OptionalContentConfig;\n\n/***/ }),\n/* 17 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFDataTransportStream = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _display_utils = __w_pdfjs_require__(5);\n\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename = params.contentDispositionFilename || null;\n    const initialData = params.initialData;\n\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({\n        begin,\n        chunk\n      });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({\n        loaded,\n        total\n      });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({\n        chunk\n      });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n\n        rangeReader._enqueue(buffer);\n\n        return true;\n      });\n\n      (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      const firstReader = this._rangeReaders[0];\n\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({\n          loaded: evt.loaded\n        });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({\n          loaded: evt.loaded,\n          total: evt.total\n        });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n\n    this._rangeReaders.push(reader);\n\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n\n    this._pdfDataRangeTransport.abort();\n  }\n\n}\n\nexports.PDFDataTransportStream = PDFDataTransportStream;\n\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false, contentDispositionFilename = null) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = (0, _display_utils.isPdfFile)(contentDispositionFilename) ? contentDispositionFilename : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return;\n    }\n\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n\n      requestCapability.resolve({\n        value: chunk,\n        done: false\n      });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    const requestCapability = (0, _util.createPromiseCapability)();\n\n    this._requests.push(requestCapability);\n\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n\n    this._done = true;\n  }\n\n}\n\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return;\n    }\n\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n\n      requestsCapability.resolve({\n        value: chunk,\n        done: false\n      });\n\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({\n          value: undefined,\n          done: true\n        });\n      }\n\n      this._requests.length = 0;\n    }\n\n    this._done = true;\n\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    const requestCapability = (0, _util.createPromiseCapability)();\n\n    this._requests.push(requestCapability);\n\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n\n    this._requests.length = 0;\n\n    this._stream._removeRangeReader(this);\n  }\n\n}\n\n/***/ }),\n/* 18 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.XfaText = void 0;\n\nclass XfaText {\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null)\n    };\n\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n\n      let str = null;\n      const name = node.name;\n\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n\n      if (str !== null) {\n        items.push({\n          str\n        });\n      }\n\n      if (!node.children) {\n        return;\n      }\n\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n\n    walk(xfa);\n    return output;\n  }\n\n  static shouldBuildText(name) {\n    return !(name === \"textarea\" || name === \"input\" || name === \"option\" || name === \"select\");\n  }\n\n}\n\nexports.XfaText = XfaText;\n\n/***/ }),\n/* 19 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.NodeStandardFontDataFactory = exports.NodeCanvasFactory = exports.NodeCMapReaderFactory = void 0;\n\nvar _base_factory = __w_pdfjs_require__(6);\n\n;\n\nconst fetchData = function (url) {\n  return new Promise((resolve, reject) => {\n    const fs = __webpack_require__(/*! fs */ \"?f8c1\");\n\n    fs.readFile(url, (error, data) => {\n      if (error || !data) {\n        reject(new Error(error));\n        return;\n      }\n\n      resolve(new Uint8Array(data));\n    });\n  });\n};\n\nclass NodeCanvasFactory extends _base_factory.BaseCanvasFactory {\n  _createCanvas(width, height) {\n    const Canvas = __webpack_require__(/*! canvas */ \"?8412\");\n\n    return Canvas.createCanvas(width, height);\n  }\n\n}\n\nexports.NodeCanvasFactory = NodeCanvasFactory;\n\nclass NodeCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url).then(data => {\n      return {\n        cMapData: data,\n        compressionType\n      };\n    });\n  }\n\n}\n\nexports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n\nclass NodeStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url);\n  }\n\n}\n\nexports.NodeStandardFontDataFactory = NodeStandardFontDataFactory;\n\n/***/ }),\n/* 20 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.AnnotationLayer = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _display_utils = __w_pdfjs_require__(5);\n\nvar _annotation_storage = __w_pdfjs_require__(8);\n\nvar _scripting_utils = __w_pdfjs_require__(21);\n\nvar _xfa_layer = __w_pdfjs_require__(22);\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst GetElementsByNameSet = new WeakSet();\n\nfunction getRectDims(rect) {\n  return {\n    width: rect[2] - rect[0],\n    height: rect[3] - rect[1]\n  };\n}\n\nclass AnnotationElementFactory {\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case _util.AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case _util.AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case _util.AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n\n            return new PushButtonWidgetAnnotationElement(parameters);\n\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n\n        return new WidgetAnnotationElement(parameters);\n\n      case _util.AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case _util.AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case _util.AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case _util.AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case _util.AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case _util.AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case _util.AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case _util.AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case _util.AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case _util.AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case _util.AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case _util.AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case _util.AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case _util.AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case _util.AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n\n}\n\nclass AnnotationElement {\n  constructor(parameters, {\n    isRenderable = false,\n    ignoreBorder = false,\n    createQuadrilaterals = false\n  } = {}) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n          page = this.page,\n          viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let {\n      width,\n      height\n    } = getRectDims(data.rect);\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n    if (data.hasOwnCanvas) {\n      const transform = viewport.transform.slice();\n\n      const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale(transform);\n\n      width = Math.ceil(width * scaleX);\n      height = Math.ceil(height * scaleY);\n      rect[0] *= scaleX;\n      rect[1] *= scaleY;\n\n      for (let i = 0; i < 4; i++) {\n        transform[i] = Math.sign(transform[i]);\n      }\n\n      container.style.transform = `matrix(${transform.join(\",\")})`;\n    } else {\n      container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    }\n\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n\n      if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case _util.AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case _util.AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case _util.AnnotationBorderStyleType.BEVELED:\n          (0, _util.warn)(\"Unimplemented border style: beveled\");\n          break;\n\n        case _util.AnnotationBorderStyleType.INSET:\n          (0, _util.warn)(\"Unimplemented border style: inset\");\n          break;\n\n        case _util.AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || data.color || null;\n\n      if (borderColor) {\n        container.style.borderColor = _util.Util.makeHexColor(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n      } else {\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n\n    if (data.hasOwnCanvas) {\n      container.style.width = container.style.height = \"auto\";\n    } else {\n      container.style.width = `${width}px`;\n      container.style.height = `${height}px`;\n    }\n\n    return container;\n  }\n\n  get _commonActions() {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = _scripting_utils.ColorConverters[`${color[0]}_HTML`](color.slice(1));\n    };\n\n    return (0, _util.shadow)(this, \"_commonActions\", {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          print: event.detail.print\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden: event.detail.hidden\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({\n          preventScroll: false\n        }), 0);\n      },\n      userName: event => {\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      }\n    });\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const commonActions = this._commonActions;\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n\n  _setDefaultPropertiesFromJS(element) {\n    if (!this.enableScripting) {\n      return;\n    }\n\n    const storedData = this.annotationStorage.getRawValue(this.data.id);\n\n    if (!storedData) {\n      return;\n    }\n\n    const commonActions = this._commonActions;\n\n    for (const [actionName, detail] of Object.entries(storedData)) {\n      const action = commonActions[actionName];\n\n      if (action) {\n        action({\n          detail,\n          target: element\n        });\n        delete storedData[actionName];\n      }\n    }\n  }\n\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [quadPoint[2].x, quadPoint[2].y, quadPoint[1].x, quadPoint[1].y];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  _createPopup(trigger, data) {\n    let container = this.container;\n\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      titleObj: data.titleObj,\n      modificationDate: data.modificationDate,\n      contentsObj: data.contentsObj,\n      richText: data.richText,\n      hideWrapper: true\n    });\n    const popup = popupElement.render();\n    popup.style.left = container.style.width;\n    container.appendChild(popup);\n  }\n\n  _renderQuadrilaterals(className) {\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n\n    return this.quadrilaterals;\n  }\n\n  render() {\n    (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n\n      if (fieldObj) {\n        for (const {\n          page,\n          id,\n          exportValues\n        } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n\n          if (id === skipId) {\n            continue;\n          }\n\n          const exportValue = typeof exportValues === \"string\" ? exportValues : null;\n          const domElement = document.getElementById(id);\n\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            (0, _util.warn)(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n\n          fields.push({\n            id,\n            exportValue,\n            domElement\n          });\n        }\n      }\n\n      return fields;\n    }\n\n    for (const domElement of document.getElementsByName(name)) {\n      const {\n        id,\n        exportValue\n      } = domElement;\n\n      if (id === skipId) {\n        continue;\n      }\n\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n\n      fields.push({\n        id,\n        exportValue,\n        domElement\n      });\n    }\n\n    return fields;\n  }\n\n  static get platform() {\n    const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n    return (0, _util.shadow)(this, \"platform\", {\n      isWin: platform.includes(\"Win\"),\n      isMac: platform.includes(\"Mac\")\n    });\n  }\n\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action || parameters.data.isTooltipOnly || parameters.data.resetForm || parameters.data.actions && (parameters.data.actions.Action || parameters.data.actions[\"Mouse Up\"] || parameters.data.actions[\"Mouse Down\"]));\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true\n    });\n  }\n\n  render() {\n    const {\n      data,\n      linkService\n    } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      linkService.addLinkAttributes(link, data.url, data.newWindow);\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else {\n      let hasClickAction = false;\n\n      if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n        hasClickAction = true;\n\n        this._bindJSAction(link, data);\n      }\n\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n      } else if (!hasClickAction) {\n        this._bindLink(link, \"\");\n      }\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map((quadrilateral, index) => {\n        const linkElement = index === 0 ? link : link.cloneNode();\n        quadrilateral.appendChild(linkElement);\n        return quadrilateral;\n      });\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n\n      return false;\n    };\n\n    if (destination || destination === \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n\n    link.className = \"internalLink\";\n  }\n\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n\n      if (!jsName) {\n        continue;\n      }\n\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name\n          }\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n\n    link.className = \"internalLink\";\n  }\n\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n\n    link.className = \"internalLink\";\n\n    if (!this._fieldObjects) {\n      (0, _util.warn)(`_bindResetFormAction - \"resetForm\" action not supported, ` + \"ensure that the `fieldObjects` parameter is provided.\");\n\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n\n      return;\n    }\n\n    link.onclick = () => {\n      if (otherClickAction) {\n        otherClickAction();\n      }\n\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include\n      } = resetForm;\n      const allFields = [];\n\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n\n          for (const {\n            id\n          } of fields) {\n            fieldIds.add(id);\n          }\n        }\n\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n\n      const storage = this.annotationStorage;\n      const allIds = [];\n\n      for (const field of allFields) {\n        const {\n          id\n        } = field;\n        allIds.push(id);\n\n        switch (field.type) {\n          case \"text\":\n            {\n              const value = field.defaultValue || \"\";\n              storage.setValue(id, {\n                value\n              });\n              break;\n            }\n\n          case \"checkbox\":\n          case \"radiobutton\":\n            {\n              const value = field.defaultValue === field.exportValues;\n              storage.setValue(id, {\n                value\n              });\n              break;\n            }\n\n          case \"combobox\":\n          case \"listbox\":\n            {\n              const value = field.defaultValue || \"\";\n              storage.setValue(id, {\n                value\n              });\n              break;\n            }\n\n          default:\n            continue;\n        }\n\n        const domElement = document.getElementById(id);\n\n        if (!domElement || !GetElementsByNameSet.has(domElement)) {\n          continue;\n        }\n\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n\n      if (this.enableScripting) {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\"\n          }\n        });\n      }\n\n      return false;\n    };\n  }\n\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable\n    });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({\n      type: this.data.name\n    });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    const {\n      isWin,\n      isMac\n    } = AnnotationElement.platform;\n    return isWin && event.ctrlKey || isMac && event.metaKey;\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event)\n          }\n        });\n      });\n    } else {\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event)\n          }\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor = color === null ? \"transparent\" : _util.Util.makeHexColor(color[0], color[1], color[2]);\n  }\n\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable = parameters.renderForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n    super(parameters, {\n      isRenderable\n    });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n\n    for (const element of this._getElementsByName(base.name, base.id)) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n\n      storage.setValue(element.id, {\n        [keyInStorage]: value\n      });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n    this.container.className = \"textWidgetAnnotation\";\n    let element = null;\n\n    if (this.renderForms) {\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue\n      });\n      const textContent = storedData.formattedValue || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        valueOnFocus: \"\"\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n\n      GetElementsByNameSet.add(element);\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, {\n          value: event.target.value\n        });\n        this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n      });\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue ?? \"\";\n        element.value = elementData.userValue = defaultValue;\n        elementData.formattedValue = null;\n      });\n\n      let blurListener = event => {\n        const {\n          formattedValue\n        } = elementData;\n\n        if (formattedValue !== null && formattedValue !== undefined) {\n          event.target.value = formattedValue;\n        }\n\n        event.target.scrollLeft = 0;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n\n          elementData.valueOnFocus = event.target.value;\n        });\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value ?? \"\";\n              storage.setValue(id, {\n                value: elementData.userValue.toString()\n              });\n              event.target.value = elementData.userValue;\n            },\n\n            formattedValue(event) {\n              const {\n                formattedValue\n              } = event.detail;\n              elementData.formattedValue = formattedValue;\n\n              if (formattedValue !== null && formattedValue !== undefined && event.target !== document.activeElement) {\n                event.target.value = formattedValue;\n              }\n\n              storage.setValue(id, {\n                formattedValue\n              });\n            },\n\n            selRange(event) {\n              event.target.setSelectionRange(...event.detail.selRange);\n            }\n\n          };\n\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n        element.addEventListener(\"keydown\", event => {\n          let commitKey = -1;\n\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n\n          if (commitKey === -1) {\n            return;\n          }\n\n          const {\n            value\n          } = event.target;\n\n          if (elementData.valueOnFocus === value) {\n            return;\n          }\n\n          elementData.userValue = value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd\n            }\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          const {\n            value\n          } = event.target;\n          elementData.userValue = value;\n\n          if (this._mouseState.isDown && elementData.valueOnFocus !== value) {\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd\n              }\n            });\n          }\n\n          _blurListener(event);\n        });\n\n        if (this.data.actions?.Keystroke) {\n          element.addEventListener(\"beforeinput\", event => {\n            const {\n              data,\n              target\n            } = event;\n            const {\n              value,\n              selectionStart,\n              selectionEnd\n            } = target;\n            let selStart = selectionStart,\n                selEnd = selectionEnd;\n\n            switch (event.inputType) {\n              case \"deleteWordBackward\":\n                {\n                  const match = value.substring(0, selectionStart).match(/\\w*[^\\w]*$/);\n\n                  if (match) {\n                    selStart -= match[0].length;\n                  }\n\n                  break;\n                }\n\n              case \"deleteWordForward\":\n                {\n                  const match = value.substring(selectionStart).match(/^[^\\w]*\\w*/);\n\n                  if (match) {\n                    selEnd += match[0].length;\n                  }\n\n                  break;\n                }\n\n              case \"deleteContentBackward\":\n                if (selectionStart === selectionEnd) {\n                  selStart -= 1;\n                }\n\n                break;\n\n              case \"deleteContentForward\":\n                if (selectionStart === selectionEnd) {\n                  selEnd += 1;\n                }\n\n                break;\n            }\n\n            event.preventDefault();\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                change: data || \"\",\n                willCommit: false,\n                selStart,\n                selEnd\n              }\n            });\n          });\n        }\n\n        this._setEventListeners(element, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n\n    this._setBackgroundColor(element);\n\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const {\n      fontSize,\n      fontColor\n    } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: parameters.renderForms\n    });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.exportValue === data.fieldValue\n    }).value;\n\n    if (typeof value === \"string\") {\n      value = value !== \"Off\";\n      storage.setValue(id, {\n        value\n      });\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    element.setAttribute(\"id\", id);\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n    element.addEventListener(\"change\", event => {\n      const {\n        name,\n        checked\n      } = event.target;\n\n      for (const checkbox of this._getElementsByName(name, id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n\n        storage.setValue(checkbox.id, {\n          value: curChecked\n        });\n      }\n\n      storage.setValue(id, {\n        value: checked\n      });\n    });\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, {\n              value: event.target.checked\n            });\n          }\n\n        };\n\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n    }\n\n    this._setBackgroundColor(element);\n\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: parameters.renderForms\n    });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue\n    }).value;\n\n    if (typeof value === \"string\") {\n      value = value !== data.buttonValue;\n      storage.setValue(id, {\n        value\n      });\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n    element.addEventListener(\"change\", event => {\n      const {\n        name,\n        checked\n      } = event.target;\n\n      for (const radio of this._getElementsByName(name, id)) {\n        storage.setValue(radio.id, {\n          value: false\n        });\n      }\n\n      storage.setValue(id, {\n        value: checked\n      });\n    });\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n\n              storage.setValue(radio.id, {\n                value: curChecked\n              });\n            }\n          }\n        };\n\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n    }\n\n    this._setBackgroundColor(element);\n\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      ignoreBorder: parameters.data.hasAppearance\n    });\n  }\n\n  render() {\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    this._setDefaultPropertiesFromJS(container);\n\n    return container;\n  }\n\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: parameters.renderForms\n    });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n    const storedData = storage.getValue(id, {\n      value: this.data.fieldValue\n    });\n    let {\n      fontSize\n    } = this.data.defaultAppearanceData;\n\n    if (!fontSize) {\n      fontSize = 9;\n    }\n\n    const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n    selectElement.style.fontSize = `${fontSize}px`;\n\n    if (!this.data.combo) {\n      selectElement.size = this.data.options.length;\n\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n\n      if (this.data.combo) {\n        optionElement.style.fontSize = fontSizeStyle;\n      }\n\n      if (storedData.value.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\n      }\n\n      return Array.prototype.filter.call(options, option => option.selected).map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return {\n          displayValue: option.textContent,\n          exportValue: option.value\n        };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n\n            storage.setValue(id, {\n              value: getValue(event, true)\n            });\n          },\n\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(options, option => option.selected);\n\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n\n            storage.setValue(id, {\n              value: getValue(event, true),\n              items: getItems(event)\n            });\n          },\n\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n\n            storage.setValue(id, {\n              value: null,\n              items: []\n            });\n          },\n\n          insert(event) {\n            const {\n              index,\n              displayValue,\n              exportValue\n            } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(optionElement, selectElement.children[index]);\n            storage.setValue(id, {\n              value: getValue(event, true),\n              items: getItems(event)\n            });\n          },\n\n          items(event) {\n            const {\n              items\n            } = event.detail;\n\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n\n            for (const item of items) {\n              const {\n                displayValue,\n                exportValue\n              } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n\n            storage.setValue(id, {\n              value: getValue(event, true),\n              items: getItems(event)\n            });\n          },\n\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n\n            storage.setValue(id, {\n              value: getValue(event, true)\n            });\n          },\n\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          }\n\n        };\n\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, true);\n        const value = getValue(event, false);\n        storage.setValue(id, {\n          value: exportValue\n        });\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false\n          }\n        });\n      });\n\n      this._setEventListeners(selectElement, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"]], event => event.target.checked);\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, {\n          value: getValue(event, true)\n        });\n      });\n    }\n\n    this._setBackgroundColor(selectElement);\n\n    this._setDefaultPropertiesFromJS(selectElement);\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable\n    });\n  }\n\n  render() {\n    const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText\n    });\n    const page = this.page;\n\n    const rect = _util.Util.normalizeRect([this.data.parentRect[0], page.view[3] - this.data.parentRect[1] + page.view[1], this.data.parentRect[2], page.view[3] - this.data.parentRect[3] + page.view[1]]);\n\n    const popupLeft = rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.titleObj = parameters.titleObj;\n    this.modificationDate = parameters.modificationDate;\n    this.contentsObj = parameters.contentsObj;\n    this.richText = parameters.richText;\n    this.hideWrapper = parameters.hideWrapper || false;\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n    const color = this.color;\n\n    if (color) {\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = _util.Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.dir = this.titleObj.dir;\n    title.textContent = this.titleObj.str;\n    popup.appendChild(title);\n\n    const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.className = \"popupDate\";\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString()\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    if (this.richText?.str && (!this.contentsObj?.str || this.contentsObj.str === this.richText.str)) {\n      _xfa_layer.XfaLayer.render({\n        xfaHtml: this.richText.html,\n        intent: \"richText\",\n        div: popup\n      });\n\n      popup.lastChild.className = \"richText popupContent\";\n    } else {\n      const contents = this._formatContents(this.contentsObj);\n\n      popup.appendChild(contents);\n    }\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  _formatContents({\n    str,\n    dir\n  }) {\n    const p = document.createElement(\"p\");\n    p.className = \"popupContent\";\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n\n    return p;\n  }\n\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true\n    });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true\n    });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true\n    });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true\n    });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true\n    });\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n    let points = [];\n\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n\n    points = points.join(\" \");\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    super(parameters);\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true\n    });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true\n    });\n    this.containerClassName = \"inkAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n    const data = this.data;\n    const {\n      width,\n      height\n    } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      let points = [];\n\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n\n      points = points.join(\" \");\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true\n    });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    return this.container;\n  }\n\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true\n    });\n    const {\n      filename,\n      content\n    } = this.data.file;\n    this.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n    this.content = content;\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      filename,\n      content\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.titleObj?.str || this.data.contentsObj?.str || this.data.richText)) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  _download() {\n    this.downloadManager?.openOrDownloadData(this.container, this.content, this.filename);\n  }\n\n}\n\nclass AnnotationLayer {\n  static render(parameters) {\n    const sortedAnnotations = [],\n          popupAnnotations = [];\n\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n\n      const {\n        width,\n        height\n      } = getRectDims(data.rect);\n\n      if (width <= 0 || height <= 0) {\n        continue;\n      }\n\n      if (data.annotationType === _util.AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n\n      sortedAnnotations.push(data);\n    }\n\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    const div = parameters.div;\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderForms: parameters.renderForms !== false,\n        svgFactory: new _display_utils.DOMSVGFactory(),\n        annotationStorage: parameters.annotationStorage || new _annotation_storage.AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        fieldObjects: parameters.fieldObjects,\n        mouseState: parameters.mouseState || {\n          isDown: false\n        }\n      });\n\n      if (element.isRenderable) {\n        const rendered = element.render();\n\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            div.prepend(rendered);\n          } else {\n            div.appendChild(rendered);\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, parameters.annotationCanvasMap);\n  }\n\n  static update(parameters) {\n    const {\n      page,\n      viewport,\n      annotations,\n      annotationCanvasMap,\n      div\n    } = parameters;\n    const transform = viewport.transform;\n    const matrix = `matrix(${transform.join(\",\")})`;\n    let scale, ownMatrix;\n\n    for (const data of annotations) {\n      const elements = div.querySelectorAll(`[data-annotation-id=\"${data.id}\"]`);\n\n      if (elements) {\n        for (const element of elements) {\n          if (data.hasOwnCanvas) {\n            const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n            if (!ownMatrix) {\n              scale = Math.abs(transform[0] || transform[1]);\n              const ownTransform = transform.slice();\n\n              for (let i = 0; i < 4; i++) {\n                ownTransform[i] = Math.sign(ownTransform[i]);\n              }\n\n              ownMatrix = `matrix(${ownTransform.join(\",\")})`;\n            }\n\n            const left = rect[0] * scale;\n            const top = rect[1] * scale;\n            element.style.left = `${left}px`;\n            element.style.top = `${top}px`;\n            element.style.transformOrigin = `${-left}px ${-top}px`;\n            element.style.transform = ownMatrix;\n          } else {\n            element.style.transform = matrix;\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, annotationCanvasMap);\n    div.hidden = false;\n  }\n\n  static #setAnnotationCanvasMap(div, annotationCanvasMap) {\n    if (!annotationCanvasMap) {\n      return;\n    }\n\n    for (const [id, canvas] of annotationCanvasMap) {\n      const element = div.querySelector(`[data-annotation-id=\"${id}\"]`);\n\n      if (!element) {\n        continue;\n      }\n\n      const {\n        firstChild\n      } = element;\n\n      if (firstChild.nodeName === \"CANVAS\") {\n        element.replaceChild(canvas, firstChild);\n      } else {\n        element.insertBefore(canvas, firstChild);\n      }\n    }\n\n    annotationCanvasMap.clear();\n  }\n\n}\n\nexports.AnnotationLayer = AnnotationLayer;\n\n/***/ }),\n/* 21 */\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.ColorConverters = void 0;\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n}\n\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n\n}\n\nexports.ColorConverters = ColorConverters;\n\n/***/ }),\n/* 22 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.XfaLayer = void 0;\n\nvar _xfa_text = __w_pdfjs_require__(18);\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, {\n      value: null\n    });\n\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n\n        if (intent === \"print\") {\n          break;\n        }\n\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, {\n            value: event.target.value\n          });\n        });\n        break;\n\n      case \"input\":\n        if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            html.removeAttribute(\"checked\");\n          }\n\n          if (intent === \"print\") {\n            break;\n          }\n\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked ? event.target.getAttribute(\"xfaOn\") : event.target.getAttribute(\"xfaOff\")\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n\n          if (intent === \"print\") {\n            break;\n          }\n\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, {\n              value: event.target.value\n            });\n          });\n        }\n\n        break;\n\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value;\n          storage.setValue(id, {\n            value\n          });\n        });\n        break;\n    }\n  }\n\n  static setAttributes({\n    html,\n    element,\n    storage = null,\n    intent,\n    linkService\n  }) {\n    const {\n      attributes\n    } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n    if (attributes.type === \"radio\") {\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n\n    for (const [key, value] of Object.entries(attributes)) {\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n        } else {\n          if (isHTMLAnchorElement && (key === \"href\" || key === \"newWindow\")) {\n            continue;\n          }\n\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    if (isHTMLAnchorElement) {\n      linkService.addLinkAttributes(html, attributes.href, attributes.newWindow);\n    }\n\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService\n      });\n    }\n\n    const stack = [[root, -1, rootHtml]];\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n\n      if (child === null) {\n        continue;\n      }\n\n      const {\n        name\n      } = child;\n\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.appendChild(node);\n        continue;\n      }\n\n      let childHtml;\n\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService\n        });\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n\n        if (_xfa_text.XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n\n        childHtml.appendChild(node);\n      }\n    }\n\n    for (const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs\n    };\n  }\n\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n\n}\n\nexports.XfaLayer = XfaLayer;\n\n/***/ }),\n/* 23 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.renderTextLayer = renderTextLayer;\n\nvar _util = __w_pdfjs_require__(1);\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  descent = 0;\n\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = task._enhanceTextSelection ? {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL,\n    originalTransform: null,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    scale: 1\n  } : {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL\n  };\n\n  task._textDivs.push(textDiv);\n\n  const tx = _util.Util.transform(task._viewport.transform, geom.transform);\n\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n  let left, top;\n\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n  textDiv.setAttribute(\"role\", \"presentation\");\n  textDiv.textContent = geom.str;\n  textDiv.dir = geom.dir;\n\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n\n  let shouldScaleText = false;\n\n  if (geom.str.length > 1 || task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str)) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n          absScaleY = Math.abs(geom.transform[3]);\n\n    if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n      shouldScaleText = true;\n    }\n  }\n\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n\n  task._textDivProperties.set(textDiv, textDivProperties);\n\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n        angleSin = 0;\n\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n\n    const divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n    let m, b;\n\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n\n    const divProperties = task._textDivProperties.get(div);\n\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n\n      task._textDivProperties.set(div, divProperties);\n\n      continue;\n    }\n\n    const e = expanded[i],\n          b = bounds[i];\n    const m = b.m,\n          c = m[0],\n          s = m[1];\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = _util.Util.applyTransform(points[j], m);\n\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined\n    };\n  });\n  expandBoundsLTR(width, bounds);\n  const expanded = new Array(boxes.length);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0\n    };\n  }\n\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n          b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0\n  };\n  const horizon = [{\n    start: -Infinity,\n    end: Infinity,\n    boundary: fakeBoundary\n  }];\n\n  for (const boundary of bounds) {\n    let i = 0;\n\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n\n    let j = horizon.length - 1;\n\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n        k,\n        maxXNew = -Infinity;\n\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n\n      if (affectedBoundary.x2 > boundary.x1) {\n        xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        xNew = affectedBoundary.x2New;\n      }\n\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    boundary.x1New = maxXNew;\n\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n\n      if (affectedBoundary.x2New === undefined) {\n        if (affectedBoundary.x2 > boundary.x1) {\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    const changedHorizon = [];\n    let lastBoundary = null;\n\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      const useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n\n      if (lastBoundary === useBoundary) {\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary\n      });\n    }\n\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary\n      });\n    }\n\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n\n      let used = false;\n\n      for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n\n      for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n  }\n\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = (0, _util.createPromiseCapability)();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    this._capability.promise.finally(() => {\n      if (!this._enhanceTextSelection) {\n        this._textDivProperties = null;\n      }\n\n      if (this._layoutTextCtx) {\n        this._layoutTextCtx.canvas.width = 0;\n        this._layoutTextCtx.canvas.height = 0;\n        this._layoutTextCtx = null;\n      }\n    }).catch(() => {});\n  }\n\n  get promise() {\n    return this._capability.promise;\n  }\n\n  cancel() {\n    this._canceled = true;\n\n    if (this._reader) {\n      this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\")).catch(() => {});\n\n      this._reader = null;\n    }\n\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (items[i].type === \"beginMarkedContentProps\" || items[i].type === \"beginMarkedContent\") {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n\n          this._container.classList.add(\"markedContent\");\n\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n\n        continue;\n      }\n\n      this._textContentItemsStr.push(items[i].str);\n\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const {\n        fontSize,\n        fontFamily\n      } = textDiv.style;\n\n      if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n\n      const {\n        width\n      } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n      if (width > 0) {\n        const scale = textDivProperties.canvasWidth / width;\n\n        if (this._enhanceTextSelection) {\n          textDivProperties.scale = scale;\n        }\n\n        transform = `scaleX(${scale})`;\n      }\n    }\n\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n\n      this._container.appendChild(br);\n    }\n  }\n\n  _render(timeout = 0) {\n    const capability = (0, _util.createPromiseCapability)();\n    let styleCache = Object.create(null);\n\n    const canvas = this._document.createElement(\"canvas\");\n\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n    this._layoutTextCtx = canvas.getContext(\"2d\", {\n      alpha: false\n    });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n\n      this._processItems(textItems, textStyles);\n\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({\n          value,\n          done\n        }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n\n          this._processItems(value.items, styleCache);\n\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error('Neither \"textContent\" nor \"textContentStream\" parameters specified.');\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n\n      if (!timeout) {\n        render(this);\n      } else {\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n\n    const transformBuf = [],\n          paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n\n}\n\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection\n  });\n\n  task._render(renderParameters.timeout);\n\n  return task;\n}\n\n/***/ }),\n/* 24 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.SVGGraphics = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _display_utils = __w_pdfjs_require__(5);\n\nvar _is_node = __w_pdfjs_require__(3);\n\nlet SVGGraphics = class {\n  constructor() {\n    (0, _util.unreachable)(\"Not implemented: SVGGraphics\");\n  }\n\n};\nexports.SVGGraphics = SVGGraphics;\n{\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\"\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const createObjectURL = function (data, contentType = \"\", forceDataSchema = false) {\n    if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n      return URL.createObjectURL(new Blob([data], {\n        type: contentType\n      }));\n    }\n\n    const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    let buffer = `data:${contentType};base64,`;\n\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n            d2 = (b1 & 3) << 4 | b2 >> 4;\n      const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n\n    return buffer;\n  };\n\n  const convertImgDataToPng = function () {\n    const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n    const CHUNK_WRAPPER_SIZE = 12;\n    const crcTable = new Int32Array(256);\n\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n        } else {\n          c = c >> 1 & 0x7fffffff;\n        }\n      }\n\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = crc >>> 8 ^ b;\n      }\n\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n      data[p] = len >> 24 & 0xff;\n      data[p + 1] = len >> 16 & 0xff;\n      data[p + 2] = len >> 8 & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n      data.set(body, p);\n      p += body.length;\n      const crc = crc32(data, offset + 4, p);\n      data[p] = crc >> 24 & 0xff;\n      data[p + 1] = crc >> 16 & 0xff;\n      data[p + 2] = crc >> 8 & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n\n      return b << 16 | a;\n    }\n\n    function deflateSync(literals) {\n      if (!_is_node.isNodeJS) {\n        return deflateSyncUncompressed(literals);\n      }\n\n      try {\n        let input;\n\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          input = Buffer.from(literals);\n        }\n\n        const output = (__webpack_require__(/*! zlib */ \"?f1a1\").deflateSync)(input, {\n          level: 9\n        });\n\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78;\n      idat[pi++] = 0x9c;\n      let pos = 0;\n\n      while (len > maxBlockLength) {\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = len >> 8 & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n      const adler = adler32(literals, 0, literals.length);\n      idat[pi++] = adler >> 24 & 0xff;\n      idat[pi++] = adler >> 16 & 0xff;\n      idat[pi++] = adler >> 8 & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case _util.ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = width + 7 >> 3;\n          break;\n\n        case _util.ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n\n        case _util.ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n          offsetBytes = 0;\n\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0;\n        literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n        offsetLiterals = 0;\n\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++;\n\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n      const idat = deflateSync(literals);\n      const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  }();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n      this.textMatrix = _util.IDENTITY_MATRIX;\n      this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = _util.TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n      this.x = 0;\n      this.y = 0;\n      this.lineX = 0;\n      this.lineY = 0;\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n      this.dashArray = [];\n      this.dashPhase = 0;\n      this.dependencies = [];\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n\n  }\n\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({\n          fnId: 92,\n          fn: \"group\",\n          items: []\n        });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n\n    return opTree;\n  }\n\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    do {\n      i--;\n    } while (s[i] === \"0\");\n\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = Math.acos(m[0]) * 180 / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n\n    return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n  }\n\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n  exports.SVGGraphics = SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new _display_utils.DOMSVGFactory();\n      this.current = new SVGExtraState();\n      this.transformMatrix = _util.IDENTITY_MATRIX;\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n      this._operatorIdMapping = [];\n\n      for (const op in _util.OPS) {\n        this._operatorIdMapping[_util.OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== _util.OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = _util.IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i]\n        });\n      }\n\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case _util.OPS.beginText:\n            this.beginText();\n            break;\n\n          case _util.OPS.dependency:\n            break;\n\n          case _util.OPS.setLeading:\n            this.setLeading(args);\n            break;\n\n          case _util.OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n\n          case _util.OPS.setFont:\n            this.setFont(args);\n            break;\n\n          case _util.OPS.showText:\n            this.showText(args[0]);\n            break;\n\n          case _util.OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n\n          case _util.OPS.endText:\n            this.endText();\n            break;\n\n          case _util.OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n\n          case _util.OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n\n          case _util.OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n\n          case _util.OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n\n          case _util.OPS.setTextMatrix:\n            this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n            break;\n\n          case _util.OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n\n          case _util.OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n\n          case _util.OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n\n          case _util.OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n\n          case _util.OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n\n          case _util.OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n\n          case _util.OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n\n          case _util.OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n\n          case _util.OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n\n          case _util.OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n\n          case _util.OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n\n          case _util.OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n\n          case _util.OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n\n          case _util.OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n\n          case _util.OPS.setGState:\n            this.setGState(args[0]);\n            break;\n\n          case _util.OPS.fill:\n            this.fill();\n            break;\n\n          case _util.OPS.eoFill:\n            this.eoFill();\n            break;\n\n          case _util.OPS.stroke:\n            this.stroke();\n            break;\n\n          case _util.OPS.fillStroke:\n            this.fillStroke();\n            break;\n\n          case _util.OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n\n          case _util.OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n\n          case _util.OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n\n          case _util.OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n\n          case _util.OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n\n          case _util.OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n\n          case _util.OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n\n          case _util.OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n\n          case _util.OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n\n          case _util.OPS.closePath:\n            this.closePath();\n            break;\n\n          case _util.OPS.closeStroke:\n            this.closeStroke();\n            break;\n\n          case _util.OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n\n          case _util.OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n\n          case _util.OPS.nextLine:\n            this.nextLine();\n            break;\n\n          case _util.OPS.transform:\n            this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n            break;\n\n          case _util.OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n\n          case _util.OPS.endPath:\n            this.endPath();\n            break;\n\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n\n          default:\n            (0, _util.warn)(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = _util.IDENTITY_MATRIX;\n      current.lineMatrix = _util.IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n      let x = 0;\n\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (typeof glyph === \"number\") {\n          x += spacingDir * glyph * fontSize / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n\n          current.tspan.textContent += character;\n        } else {}\n\n        let charWidth;\n\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n\n      current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n\n      if (vertical) {\n        current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n      if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      let textMatrix = current.textMatrix;\n\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n      }\n\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n      this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n      let bold = \"normal\";\n\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n\n      if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement?.hasChildNodes()) {\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n\n      const inv = _util.Util.inverseTransform(this.transformMatrix);\n\n      const bl = _util.Util.applyTransform([0, 0], inv);\n\n      const br = _util.Util.applyTransform([0, height], inv);\n\n      const ul = _util.Util.applyTransform([width, 0], inv);\n\n      const ur = _util.Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n\n      return this._makeShadingPattern(args);\n    }\n\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || _util.IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n      const tilingId = `shading${shadingCount++}`;\n\n      const [tx0, ty0, tx1, ty1] = _util.Util.normalizeRect([..._util.Util.applyTransform([x0, y0], matrix), ..._util.Util.applyTransform([x1, y1], matrix)]);\n\n      const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n\n      if (paintType === 2) {\n        const cssColor = _util.Util.makeHexColor(...color);\n\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n\n      this.executeOpTree(this.convertOpList(operatorList));\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    _makeShadingPattern(args) {\n      if (typeof args === \"string\") {\n        args = this.objs.get(args);\n      }\n\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n\n        case \"Mesh\":\n          (0, _util.warn)(\"Unimplemented pattern Mesh\");\n          return null;\n\n        case \"Dummy\":\n          return \"hotpink\";\n\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n          y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case _util.OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n            break;\n\n          case _util.OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n\n          case _util.OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n\n          case _util.OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n            j += 6;\n            break;\n\n          case _util.OPS.curveTo2:\n            d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n\n          case _util.OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n            j += 4;\n            break;\n\n          case _util.OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n      const clipElement = current.element.cloneNode(true);\n\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        current.clipGroup = null;\n\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n\n      current.activeClipUrl = `url(#${clipId})`;\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {}\n\n    setFlatness(flatness) {}\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n\n          case \"Font\":\n            this.setFont(value);\n            break;\n\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n\n          default:\n            (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n      element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n      element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n\n      this.fill();\n    }\n\n    fillStroke() {\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n      if (!imgData) {\n        (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n      this.defs.appendChild(mask);\n\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n      this.svg = rootGroup;\n      return svg;\n    }\n\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n\n      return this.current.clipGroup;\n    }\n\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n\n      return this.tgrp;\n    }\n\n  };\n}\n\n/***/ }),\n/* 25 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFNodeStream = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _network_utils = __w_pdfjs_require__(26);\n\n;\n\nconst fs = __webpack_require__(/*! fs */ \"?f8c1\");\n\nconst http = __webpack_require__(/*! http */ \"?c937\");\n\nconst https = __webpack_require__(/*! https */ \"?a6fc\");\n\nconst url = __webpack_require__(/*! url */ \"./node_modules/next/dist/compiled/native-url/index.js\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = this.isHttp && source.httpHeaders || {};\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n    this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n\n    const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n\n    this._rangeRequestReaders.push(rangeReader);\n\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n\n}\n\nexports.PDFNodeStream = PDFNodeStream;\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length;\n    this._loaded = 0;\n    this._filename = null;\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n    this._readableStream = null;\n    this._readCapability = (0, _util.createPromiseCapability)();\n    this._headersCapability = (0, _util.createPromiseCapability)();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n\n    if (chunk === null) {\n      this._readCapability = (0, _util.createPromiseCapability)();\n      return this.read();\n    }\n\n    this._loaded += chunk.length;\n\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength\n      });\n    }\n\n    const buffer = new Uint8Array(chunk).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n\n  cancel(reason) {\n    if (!this._readableStream) {\n      this._error(reason);\n\n      return;\n    }\n\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"end\", () => {\n      readableStream.destroy();\n      this._done = true;\n\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new _util.AbortException(\"streaming is disabled\"));\n    }\n\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = (0, _util.createPromiseCapability)();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n\n    if (chunk === null) {\n      this._readCapability = (0, _util.createPromiseCapability)();\n      return this.read();\n    }\n\n    this._loaded += chunk.length;\n\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded\n      });\n    }\n\n    const buffer = new Uint8Array(chunk).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n\n  cancel(reason) {\n    if (!this._readableStream) {\n      this._error(reason);\n\n      return;\n    }\n\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"end\", () => {\n      readableStream.destroy();\n      this._done = true;\n\n      this._readCapability.resolve();\n    });\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n\n        this._headersCapability.reject(error);\n\n        return;\n      }\n\n      this._headersCapability.resolve();\n\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = (0, _network_utils.validateRangeRequestCapabilities)({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n      this._isRangeSupported = allowRangeRequests;\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n    };\n\n    this._request = null;\n\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n    } else {\n      this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n\n      this._headersCapability.reject(reason);\n    });\n\n    this._request.end();\n  }\n\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n    this._httpHeaders = {};\n\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n\n      this._httpHeaders[property] = value;\n    }\n\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n    } else {\n      this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n\n    this._request.end();\n  }\n\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n    let path = decodeURIComponent(this._url.path);\n\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n\n        this._storedError = error;\n\n        this._headersCapability.reject(error);\n\n        return;\n      }\n\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n\n      this._headersCapability.resolve();\n    });\n  }\n\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n    let path = decodeURIComponent(this._url.path);\n\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, {\n      start,\n      end: end - 1\n    }));\n  }\n\n}\n\n/***/ }),\n/* 26 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.createResponseStatusError = createResponseStatusError;\nexports.extractFilenameFromHeader = extractFilenameFromHeader;\nexports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\nexports.validateResponseStatus = validateResponseStatus;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _content_disposition = __w_pdfjs_require__(27);\n\nvar _display_utils = __w_pdfjs_require__(5);\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange\n}) {\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined\n  };\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n\n  if (contentDisposition) {\n    let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n\n    if ((0, _display_utils.isPdfFile)(filename)) {\n      return filename;\n    }\n  }\n\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n    return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n\n  return new _util.UnexpectedResponseException(`Unexpected server response (${status}) while retrieving PDF \"${url}\".`, status);\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\n/***/ }),\n/* 27 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n\nvar _util = __w_pdfjs_require__(1);\n\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  tmp = rfc2231getparam(contentDisposition);\n\n  if (tmp) {\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n  }\n\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n\n      try {\n        const decoder = new TextDecoder(encoding, {\n          fatal: true\n        });\n        const buffer = (0, _util.stringToBytes)(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {}\n    }\n\n    return value;\n  }\n\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      value = textdecode(\"utf-8\", value);\n\n      if (needsEncodingFixup) {\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n\n    return value;\n  }\n\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match;\n      n = parseInt(n, 10);\n\n      if (n in matches) {\n        if (n === 0) {\n          break;\n        }\n\n        continue;\n      }\n\n      matches[n] = [quot, part];\n    }\n\n    const parts = [];\n\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        break;\n      }\n\n      let [quot, part] = matches[n];\n      part = rfc2616unquote(part);\n\n      if (quot) {\n        part = unescape(part);\n\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n\n      parts.push(part);\n    }\n\n    return parts.join(\"\");\n  }\n\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1;\n        }\n\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n\n      value = parts.join('\"');\n    }\n\n    return value;\n  }\n\n  function rfc5987decode(extvalue) {\n    const encodingend = extvalue.indexOf(\"'\");\n\n    if (encodingend === -1) {\n      return extvalue;\n    }\n\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n\n  function rfc2047decode(value) {\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n\n    return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n      if (encoding === \"q\" || encoding === \"Q\") {\n        text = text.replace(/_/g, \" \");\n        text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n          return String.fromCharCode(parseInt(hex, 16));\n        });\n        return textdecode(charset, text);\n      }\n\n      try {\n        text = atob(text);\n      } catch (e) {}\n\n      return textdecode(charset, text);\n    });\n  }\n\n  return \"\";\n}\n\n/***/ }),\n/* 28 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFNetworkStream = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _network_utils = __w_pdfjs_require__(26);\n\n;\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n\n  if (typeof data !== \"string\") {\n    return data;\n  }\n\n  const array = (0, _util.stringToBytes)(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = this.isHttp && args.httpHeaders || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n\n    this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n      return new XMLHttpRequest();\n    };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end\n    };\n\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = this.pendingRequests[xhrId] = {\n      xhr\n    };\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n\n      xhr.setRequestHeader(property, value);\n    }\n\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n    xhr.send(null);\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n\n    if (!pendingRequest) {\n      return;\n    }\n\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n\n    if (!pendingRequest) {\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const xhrStatus = xhr.status || OK_RESPONSE;\n    const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n\n}\n\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\n    this._rangeRequestReaders.push(reader);\n\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n\n}\n\nexports.PDFNetworkStream = PDFNetworkStream;\n\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this)\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length;\n    this._rangeChunkSize = source.rangeChunkSize;\n\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n\n    const {\n      allowRangeRequests,\n      suggestedLength\n    } = (0, _network_utils.validateRangeRequestCapabilities)({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n\n    this._contentLength = suggestedLength || this._contentLength;\n    this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n\n        requestCapability.resolve({\n          value: data.chunk,\n          done: false\n        });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n\n    this._done = true;\n\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n\n    this._headersReceivedCapability.reject(this._storedError);\n\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    const requestCapability = (0, _util.createPromiseCapability)();\n\n    this._requests.push(requestCapability);\n\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n\n    this._headersReceivedCapability.reject(reason);\n\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n\n    this._requests.length = 0;\n\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n\n    this._fullRequestReader = null;\n  }\n\n}\n\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this)\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n\n      requestCapability.resolve({\n        value: chunk,\n        done: false\n      });\n    } else {\n      this._queuedChunk = chunk;\n    }\n\n    this._done = true;\n\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n\n    this._requests.length = 0;\n\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({\n        loaded: evt.loaded\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return {\n        value: chunk,\n        done: false\n      };\n    }\n\n    if (this._done) {\n      return {\n        value: undefined,\n        done: true\n      };\n    }\n\n    const requestCapability = (0, _util.createPromiseCapability)();\n\n    this._requests.push(requestCapability);\n\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({\n        value: undefined,\n        done: true\n      });\n    }\n\n    this._requests.length = 0;\n\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n\n    this._close();\n  }\n\n}\n\n/***/ }),\n/* 29 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.PDFFetchStream = void 0;\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _network_utils = __w_pdfjs_require__(26);\n\n;\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\"\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n\n    headers.append(property, value);\n  }\n\n  return headers;\n}\n\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = this.isHttp && source.httpHeaders || {};\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n\n    this._rangeRequestReaders.push(reader);\n\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n\n}\n\nexports.PDFFetchStream = PDFFetchStream;\n\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = (0, _util.createPromiseCapability)();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n    this._headers = createHeaders(this._stream.httpHeaders);\n    const url = source.url;\n    fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n      if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n        throw (0, _network_utils.createResponseStatusError)(response.status, url);\n      }\n\n      this._reader = response.body.getReader();\n\n      this._headersCapability.resolve();\n\n      const getResponseHeader = name => {\n        return response.headers.get(name);\n      };\n\n      const {\n        allowRangeRequests,\n        suggestedLength\n      } = (0, _network_utils.validateRangeRequestCapabilities)({\n        getResponseHeader,\n        isHttp: this._stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange\n      });\n      this._isRangeSupported = allowRangeRequests;\n      this._contentLength = suggestedLength || this._contentLength;\n      this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n      if (!this._isStreamingSupported && this._isRangeSupported) {\n        this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n      }\n    }).catch(this._headersCapability.reject);\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const {\n      value,\n      done\n    } = await this._reader.read();\n\n    if (done) {\n      return {\n        value,\n        done\n      };\n    }\n\n    this._loaded += value.byteLength;\n\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength\n      });\n    }\n\n    const buffer = new Uint8Array(value).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n\n}\n\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = (0, _util.createPromiseCapability)();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n      if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n        throw (0, _network_utils.createResponseStatusError)(response.status, url);\n      }\n\n      this._readCapability.resolve();\n\n      this._reader = response.body.getReader();\n    }).catch(this._readCapability.reject);\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const {\n      value,\n      done\n    } = await this._reader.read();\n\n    if (done) {\n      return {\n        value,\n        done\n      };\n    }\n\n    this._loaded += value.byteLength;\n\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded\n      });\n    }\n\n    const buffer = new Uint8Array(value).buffer;\n    return {\n      value: buffer,\n      done: false\n    };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n\n}\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n(() => {\nvar exports = __webpack_exports__;\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"AnnotationLayer\", ({\n  enumerable: true,\n  get: function () {\n    return _annotation_layer.AnnotationLayer;\n  }\n}));\nObject.defineProperty(exports, \"AnnotationMode\", ({\n  enumerable: true,\n  get: function () {\n    return _util.AnnotationMode;\n  }\n}));\nObject.defineProperty(exports, \"CMapCompressionType\", ({\n  enumerable: true,\n  get: function () {\n    return _util.CMapCompressionType;\n  }\n}));\nObject.defineProperty(exports, \"GlobalWorkerOptions\", ({\n  enumerable: true,\n  get: function () {\n    return _worker_options.GlobalWorkerOptions;\n  }\n}));\nObject.defineProperty(exports, \"InvalidPDFException\", ({\n  enumerable: true,\n  get: function () {\n    return _util.InvalidPDFException;\n  }\n}));\nObject.defineProperty(exports, \"LoopbackPort\", ({\n  enumerable: true,\n  get: function () {\n    return _api.LoopbackPort;\n  }\n}));\nObject.defineProperty(exports, \"MissingPDFException\", ({\n  enumerable: true,\n  get: function () {\n    return _util.MissingPDFException;\n  }\n}));\nObject.defineProperty(exports, \"OPS\", ({\n  enumerable: true,\n  get: function () {\n    return _util.OPS;\n  }\n}));\nObject.defineProperty(exports, \"PDFDataRangeTransport\", ({\n  enumerable: true,\n  get: function () {\n    return _api.PDFDataRangeTransport;\n  }\n}));\nObject.defineProperty(exports, \"PDFDateString\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.PDFDateString;\n  }\n}));\nObject.defineProperty(exports, \"PDFWorker\", ({\n  enumerable: true,\n  get: function () {\n    return _api.PDFWorker;\n  }\n}));\nObject.defineProperty(exports, \"PasswordResponses\", ({\n  enumerable: true,\n  get: function () {\n    return _util.PasswordResponses;\n  }\n}));\nObject.defineProperty(exports, \"PermissionFlag\", ({\n  enumerable: true,\n  get: function () {\n    return _util.PermissionFlag;\n  }\n}));\nObject.defineProperty(exports, \"PixelsPerInch\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.PixelsPerInch;\n  }\n}));\nObject.defineProperty(exports, \"RenderingCancelledException\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.RenderingCancelledException;\n  }\n}));\nObject.defineProperty(exports, \"SVGGraphics\", ({\n  enumerable: true,\n  get: function () {\n    return _svg.SVGGraphics;\n  }\n}));\nObject.defineProperty(exports, \"UNSUPPORTED_FEATURES\", ({\n  enumerable: true,\n  get: function () {\n    return _util.UNSUPPORTED_FEATURES;\n  }\n}));\nObject.defineProperty(exports, \"UnexpectedResponseException\", ({\n  enumerable: true,\n  get: function () {\n    return _util.UnexpectedResponseException;\n  }\n}));\nObject.defineProperty(exports, \"Util\", ({\n  enumerable: true,\n  get: function () {\n    return _util.Util;\n  }\n}));\nObject.defineProperty(exports, \"VerbosityLevel\", ({\n  enumerable: true,\n  get: function () {\n    return _util.VerbosityLevel;\n  }\n}));\nObject.defineProperty(exports, \"XfaLayer\", ({\n  enumerable: true,\n  get: function () {\n    return _xfa_layer.XfaLayer;\n  }\n}));\nObject.defineProperty(exports, \"build\", ({\n  enumerable: true,\n  get: function () {\n    return _api.build;\n  }\n}));\nObject.defineProperty(exports, \"createPromiseCapability\", ({\n  enumerable: true,\n  get: function () {\n    return _util.createPromiseCapability;\n  }\n}));\nObject.defineProperty(exports, \"createValidAbsoluteUrl\", ({\n  enumerable: true,\n  get: function () {\n    return _util.createValidAbsoluteUrl;\n  }\n}));\nObject.defineProperty(exports, \"getDocument\", ({\n  enumerable: true,\n  get: function () {\n    return _api.getDocument;\n  }\n}));\nObject.defineProperty(exports, \"getFilenameFromUrl\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.getFilenameFromUrl;\n  }\n}));\nObject.defineProperty(exports, \"getPdfFilenameFromUrl\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.getPdfFilenameFromUrl;\n  }\n}));\nObject.defineProperty(exports, \"getXfaPageViewport\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.getXfaPageViewport;\n  }\n}));\nObject.defineProperty(exports, \"isPdfFile\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.isPdfFile;\n  }\n}));\nObject.defineProperty(exports, \"loadScript\", ({\n  enumerable: true,\n  get: function () {\n    return _display_utils.loadScript;\n  }\n}));\nObject.defineProperty(exports, \"renderTextLayer\", ({\n  enumerable: true,\n  get: function () {\n    return _text_layer.renderTextLayer;\n  }\n}));\nObject.defineProperty(exports, \"shadow\", ({\n  enumerable: true,\n  get: function () {\n    return _util.shadow;\n  }\n}));\nObject.defineProperty(exports, \"version\", ({\n  enumerable: true,\n  get: function () {\n    return _api.version;\n  }\n}));\n\nvar _util = __w_pdfjs_require__(1);\n\nvar _api = __w_pdfjs_require__(4);\n\nvar _display_utils = __w_pdfjs_require__(5);\n\nvar _annotation_layer = __w_pdfjs_require__(20);\n\nvar _worker_options = __w_pdfjs_require__(13);\n\nvar _is_node = __w_pdfjs_require__(3);\n\nvar _text_layer = __w_pdfjs_require__(23);\n\nvar _svg = __w_pdfjs_require__(24);\n\nvar _xfa_layer = __w_pdfjs_require__(22);\n\nconst pdfjsVersion = '2.14.305';\nconst pdfjsBuild = 'eaaa8b4ad';\n{\n  if (_is_node.isNodeJS) {\n    const {\n      PDFNodeStream\n    } = __w_pdfjs_require__(25);\n\n    (0, _api.setPDFNetworkStreamFactory)(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const {\n      PDFNetworkStream\n    } = __w_pdfjs_require__(28);\n\n    const {\n      PDFFetchStream\n    } = __w_pdfjs_require__(29);\n\n    (0, _api.setPDFNetworkStreamFactory)(params => {\n      if ((0, _display_utils.isValidFetchUrl)(params.url)) {\n        return new PDFFetchStream(params);\n      }\n\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n})();\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n//# sourceMappingURL=pdf.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/pdfjs-dist/build/pdf.js\n"));

/***/ }),

/***/ "?8412":
/*!************************!*\
  !*** canvas (ignored) ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "?f8c1":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "?c937":
/*!**********************!*\
  !*** http (ignored) ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "?a6fc":
/*!***********************!*\
  !*** https (ignored) ***!
  \***********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "?f1a1":
/*!**********************!*\
  !*** zlib (ignored) ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2Fhome%2Fluca%2FDocuments%2FGitHub%2Fshule%2Fpages%2FReferences%2FPhysics%2FFormOne%2F%5Bid%5D.tsx&page=%2FReferences%2FPhysics%2FFormOne%2F%5Bid%5D!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);